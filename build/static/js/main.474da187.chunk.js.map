{"version":3,"sources":["utils/config.js","Api/products.js","views/Dashboard.js","Api/visitors.js","Api/orderCount.js","utils/auth.js","Api/user.js","Api/userAdmin.js","utils/notification.js","views/UserList.js","views/TableList.js","Api/sendMessage.js","views/UserProfile.js","views/AdminList.js","Api/wallet.js","views/Pagination.js","views/Orders.js","Api/order.js","views/TableUser.js","views/TableOrder.js","views/TableCancelOrder.js","Api/utility.js","components/Utility/Child/Add Banner.js","components/Utility/CarosolComp.js","Api/paymentMethod.js","components/Utility/Instraction/PaymentMethod.js","components/Utility/Instraction/PaymentMethodData.js","Api/poupbanner.js","components/Utility/PopupBanner/Popupbanner.js","components/product/ProductUpdate.jsx","views/OrderHandle.js","components/Utility/adminActiveStatus.js","components/Utility/statusChange.js","views/Utility.js","Api/index.js","views/ProductList.js","components/product/ProductAdd.jsx","views/Products.js","Api/notification.js","views/inGameOrderTable.js","views/idCodeOrderTable.js","views/cancelInGameOrderTable.js","views/cancelIdcodeOrderTable.js","views/offerOrderTable.js","views/subscOrderTable.js","views/cancelOfferOrderTable.js","views/cancelSubscOrderTable.js","views/ActivePurchacheTable.js","views/PurchaseApprove.js","Api/addWallet.js","views/CompletePurchacheTable.js","views/CancelPurchacheTable.js","Api/auth.js","assets/img/logo.png","components/Main/Navbar/Navbar.js","views/UserCreate.js","views/Support.js","Api/support.js","views/sendSmsAll.js","views/sendSmsAllActive.js","views/SendSms.js","routes.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","assets/img/reactlogo.png","components/Sidebar/Sidebar.js","assets/img/sidebar-3.jpg","layouts/Admin.js","components/protectedRoutes/AdminRoute.js","assets/images/cover/3930.jpg","components/Main/TopUp/childs/Info.js","components/User/Login.js","layouts/Login.js","components/Main/Confirmation/Confirm.js","App.js","index.js"],"names":["API","process","REACT_APP_API_URL","addProductss","REACT_Web_API_URL","addProduct","token","JSON","parse","localStorage","getItem","axios","post","headers","itemDelete","id","id2","delete","updateItem","updateProductss","put","getOneProduct","get","getAllProducts","console","log","Dashboard","useState","count","setCount","orderCount","setOrderCount","setAllProduct","revenue","setRevenue","adminOrder","setAdminOrder","useEffect","then","response","data","productId","date","searchProduct","setSearchProduct","totalOrders","totalIncome","setData","Container","fluid","Row","Col","lg","sm","Card","className","Body","xs","map","countTotal","Title","as","Footer","totalOrdersToday","totalOrdersMonthly","totalOrdersYearly","Form","onSubmit","e","preventDefault","search","filterProductByDate","res","Group","controlId","Label","Control","type","name","placeholder","onChange","target","value","Button","variant","style","marginBottom","fontWeight","Table","scope","item","index","admin","today","total","authenticate","cb","window","setItem","stringify","isAuthenticated","exp","jwt_decode","Date","getTime","removeItem","userInfo","jwt","decoded","initialstate","user","jwt_Token_decoded","Jwt_Decode","now","clear","AuthContext","createContext","login","userData","logout","AuthReducer","state","action","payload","AuthProvider","props","useReducer","dispatch","Provider","getAllUser","getOneUser","updateUserActiveStatus","activeStatus","deleteAllProduct","removeJwt","otpSend","code","otp","adminProfileUpdate","passwordUpdate","passwordEdit","toast","configure","position","POSITION","BOTTOM_RIGHT","userWalletId","walletUserName","userEmail","userName","userList","notify","msg","sendMessageAPI","sendMessage","sendMessageAllUser","top","left","transform","width","bgcolor","border","boxShadow","p","UserProfile","useForm","registerPassword","register","submitPassword","handleSubmit","setPasswordError","setError","errorsPassword","formState","errors","registerPhone","submitPhone","errorsPhone","checkOtp","submitOTP","setOTPError","username","email","password","confirmPassword","phonenumber","disabled","formData","setAdmin","profilePic","setName","FormData","React","open","setOpen","handleClose","phone","setPhone","handleClosePhone","setOtp","handleCloseOtp","a","newPassword","newRePassword","message","update","oldPassword","addPhoneNumber","verifyOtp","setVerifyOtp","checkNumber","userNumber","val","Math","floor","random","number","replaceAll","r","setNumber","catch","err","letter","userNameLetter","match","Modal","onClose","Box","sx","Typography","component","TextField","required","error","Boolean","helperText","size","marginTop","label","display","justifyContent","marginRight","onClick","minLength","container","Grid","spacing","direction","alignItems","minHeight","class","padding","textAlign","fontSize","Paper","flexDirection","minWidth","userIdNo","Chip","googleId","AdminList","adminList","loading","paginate","postsPerPage","filter","filteredData","role","parseInt","updateWallet","amount","spent","UserList","allUserList","getAllUserList","postsPerPages","allWallet","setAllWallet","show","setShow","show2","setShow2","getAllWallet","modalOpen","walletId","modalOpen2","walletBalance","setWalletBalance","handleChange2","setEditPassword","editPassword","deleteUserById","setDisabled","disabledd","deleteUser","editUserPassword","onHide","Header","margin","editBalance","vipBatch","color","wallet","_id","userId","currentAmount","cursor","num","Pagination","totalPosts","Number","pageNumbers","i","ceil","push","totalPagination","length","pages","pageNumber","TableList","totalActive","totalComplete","totalCancel","setAdminList","setAllUserList","filterContent","users","searchTerm","result","toLowerCase","includes","toLocaleLowerCase","toString","currentPage","setCurrentPage","setPostsPerPage","currentPages","setCurrentPages","setPostsPerPages","indexOfLastPost","indexOfFirstPost","currentPost","slice","indexOfLastPosts","indexOfFirstPosts","currentPosts","setUser","selectArray","md","float","currentTarget","rowSelectForAdminTable","rowSelectForUserTable","getOrders","getOrdersByAdminId","updateOrderStatus","OrderTables","activeOrders","isComplete","reject","order","orderId","gameName","categoryName","purchaseId","product","option","price","moment","createdAt","format","handOverAdmin","completeOrders","cancelledOrders","rejectReason","Orders","setActiveOrders","setCompleteOrders","setCancelledOrders","currentPagess","setCurrentPagess","postsPerPagess","active","complete","cancel","orders","value2","value3","indexOfLastPostss","indexOfFirstPostss","currentPostss","findAllBanner","AddBanner","firstTitle","secondTitle","link","addBanner","setAddBanner","success","alert","values","setValues","handleChange","files","set","addBanners","reset","errMsg","CarouselComp","banner","setBanner","remove","setRemove","edit","setEdit","ids","setId","editId","setEditIds","allData","editBanner","setEditBanner","handleShowDelete","handleCloseDelete","handleCloseEdit","deleteBanner","handleSubmitEdit","updateBanner","src","image","alt","closeButton","marginLeft","findAllPaymentMethod","PaymentMethod","addMethod","setAddMethod","addPaymentMethod","editMethod","setEditMethod","deletePaymentMethod","editPaymentMethod","findPopUpBanner","updatePopBanner","tz","setDefault","orderUser","game_name","category_name","game_option","game_price","totalIngame","totalIngameCancel","totalIdcode","totalIdcodeCancel","totalOffer","totalOfferCancel","totalSubsc","totalSubscCancel","srchTerm","radios","text","getImage","SetGetImage","ButtonGroup","radio","idx","ToggleButton","checked","adminActiveStatus","adminData","changeStatus","updateUserActiveStatus2","maxWidth","borderLeft","StatusChange","setAdminData","title","superadmin","Utility","PaymentMethodData","Popupbanner","getProducts","Android12Switch","styled","Switch","theme","borderRadius","content","height","backgroundImage","encodeURIComponent","palette","getContrastText","primary","main","right","category","categoryNames","ProductUpdate","inputLists","setInputLists","inputList","backUpLink","details","topUp","setUpdateProduct","stocks","setStocks","setImage","setProductInfo","handleDelete","submitItem","setItemValue","setValue","resetItem","getNewItem","submitNewItem","productInfo","submitProductInfo","submitItemData","submitData","topUpId","stock","addItem","addData","addItems","submitInfo","photoUpdate","raw","updateImage","to","showSuccess","htmlFor","Input","accept","preview","URL","createObjectURL","backgroundColor","xl","flexWrap","x","Badge","badgeContent","handleClick","onDelete","FormControlLabel","control","defaultChecked","ProductList","setUpdate","deleteOneProducts","stockFilter","Img","images","ProductAdd","setInputList","check","setCheck","region","platform","publisher","detailsList","setAddProduct","handleInputChange","list","handleAddClick","detail","defaultValue","splice","handleRemoveClick","Products","setProduct","createNotifications","notification","notifications","getNotifications","editNotifications","array","orderIds","arrayItem","inGameOrderTable","inGameOrders","markComplete","selectAll","foundId","indexOf","split","accountType","Password","backupCode","paymentComplete","idCodeOrderTable","idCodeOrders","paginates","idCode","cancelInGameOrderTable","cancelledOrdersInGame","paginatess","makeActive","cancelIdcodeOrderTable","cancelledOrdersIdCode","paginatesss","postsPerPagesss","offerOrderTable","offerOrders","paginatessss","postsPerPagessss","subscOrderTable","subscOrders","paginatesssss","postsPerPagesssss","cancelOfferOrderTable","cancelledOrdersOffer","paginatessssss","postsPerPagessssss","cancelSubscOrderTable","cancelledOrdersSubsc","paginatesssssss","postsPerPagesssssss","inGameTable","idCodeTable","offerTable","subscTable","filterFunctionActive","buttonAllActive","TabPanel","children","other","hidden","a11yProps","TabPanels","a11yPropss","transactionId","transactionUser","transactionUserName","cancelAmount","transactionNum","OrderHandle","filteredProduct","setFilteredProduct","setIdCodeOrders","idCodeOrdersSearch","setIdCodeOrdersSearch","setInGameOrders","inGameOrdersSearch","setInGameOrdersSearch","setOfferOrders","offerOrdersSearch","setOfferOrdersSearch","setSubscOrders","subscOrdersSearch","setSubscOrdersSearch","setCancelledOrdersInGame","setCancelledOrdersIdCode","setCancelledOrdersOffer","setCancelledOrdersSubsc","setPostsPerPagess","currentPagesss","setCurrentPagesss","setPostsPerPagesss","currentPagessss","setCurrentPagessss","setPostsPerPagessss","currentPagesssss","setCurrentPagesssss","setPostsPerPagesssss","currentPagessssss","setCurrentPagessssss","setPostsPerPagessssss","currentPagesssssss","setCurrentPagesssssss","setPostsPerPagesssssss","adminProfile","productsId","filterAdminProduct","cancelIdcode","cancelIngame","cancelOffer","cancelSubsc","igame","idcode","offer","subsc","currentPostSearch","currentPostsSearch","indexOfLastPostsss","indexOfFirstPostsss","currentPostsss","indexOfLastPostssss","indexOfFirstPostssss","currentPostssss","currentPostssSearch","indexOfLastPostsssss","indexOfFirstPostsssss","currentPostsssss","currentPostsssSearch","indexOfLastPostssssss","indexOfFirstPostssssss","currentPostssssss","indexOfLastPostsssssss","indexOfFirstPostsssssss","currentPostsssssss","ingame","setIngame","setIdcode","setOffer","setSubsc","ingameCancel","setIngameCancel","idcodeCancel","setIdcodeCancel","offerCancel","setOfferCancel","subscCancel","setSubscCancel","findInGameOrder","findIdCodeOrder","findOfferOrder","findSubscOrder","findInGameOrderCancel","findIdCodeOrderCancel","findOfferOrderCancel","findSubscOrderCancel","disabledButton","setDisabledButton","selectedId","categotyDelete","deleteProduct","setTimeout","value4","value5","value6","value7","value8","game","removeSpentAmount","filterOrder","notificationId","sms","noteText","note","setNote","undefined","markAll","myArray","markAllComplete","Alert","addSpentAmount","extra","href","mode","allowClear","productData","Option","productIds","productList","changeActiveStatus","borderBottom","borderColor","Tabs","event","newValue","Tab","rowSelectForIngameTable","rowSelectForIdcodeTable","rowSelectForOfferTable","rowSelectForSubscTable","rowSelectForCancelIngameTable","rowSelectForCancelIdcodeTable","rowSelectForCancelOfferTable","rowSelectForCancelSubscTable","findAllWallet","updateAddWallet","completePayment","paymentType","transactionID","mobileNumber","transactionIds","restart","setMark","activePayment","findActivePayment","findCompletePayment","findCancelledPayment","filterPayment","filterPaymentTypeActive","filterPaymentType","filtersBoth","mark","taka","findOneWallet","walletUser","tran","CancelPurchacheTable","cancelledPayment","tranId","search2","filter2","both","activePaymentFilterBoth","completePaymentFilterBoth","cancelPaymentFilterBoth","PurchaseApprove","setActivePayment","activePaymentSearch","setActivePaymentSearch","activePaymentFilter","setActivePaymentFilter","activePaymentFilter2","setActivePaymentFilter2","setCompletePayment","completePaymentFilter","setCompletePaymentFilter","setCancelledPayment","cancelledPaymentFilter","setCancelledPaymentFilter","allPaymentMethod","setAllPaymentMethod","setChecked","checkedIds","setActive","setComplete","setCancel","filters","setFilters","result2","result3","handleFilters","myfilters","newFilters","filterTransaction","payments","currentPostsFilterBoths","currentPostsFilter","currentPostsFilterBoth","currentPostsFilterBothss","markAllPurchaseComplete","rowSelectRorActivePayment","rowSelectForCompletePayment","rowSelectForCancelPayment","registration","shape","alpha","common","white","breakpoints","up","pointerEvents","InputBase","paddingLeft","transition","transitions","create","UserCreate","repassword","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","toUpperCase","showError","autoFocus","autoComplete","options","Support","support","setSupport","getSupportMessage","markResolved","markSupport","requestType","requestDescription","sendSmsAll","allClick","done","allActiveClick","activeDone","SendSms","dashboardRoutes","path","icon","layout","useHistory","activeUserList","setActiveUserList","activeUser","setActiveUser","setDone","setActiveDone","setAllClick","setAllActiveClick","getActiveUserList","rowSelectForAllUserTable","setText","allCheckbox","allActiveCheckbox","rows","numberArray","numbers","replace","setNotifications","viewNotifications","setViewNotifications","location","useLocation","view","Navbar","bg","expand","document","documentElement","classList","toggle","node","createElement","onclick","this","parentElement","removeChild","body","appendChild","Brand","routes","pathname","getBrandText","Toggle","Collapse","Nav","navbar","Item","Link","Dropdown","Menu","getFullYear","Component","Sidebar","prop","key","redirect","upgrade","routeName","activeClassName","Admin","sidebarImage","hasImage","mainPanel","useRef","scrollTop","scrollingElement","current","innerWidth","element","getElementById","parentNode","ref","AdminNavbar","render","AdminRoute","rest","from","Buttons","button","Login","history","getJwtToken","method","autofocus","App","exact","ReactDOM"],"mappings":"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","file":"static/js/main.474da187.chunk.js","sourcesContent":["export const API=process.env.REACT_APP_API_URL;\r\nexport const webAPI=process.env.REACT_Web_API_URL;\r\n\r\n","import axios from \"axios\";\r\nimport { API } from '../utils/config';\r\n\r\n\r\nexport const addProductss = (addProduct) => {\r\n\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${API}admin/product`, addProduct, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const addItems = (id, addProduct) => {\r\n\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}admin/product/topUp/${id}`, addProduct, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const itemDelete = ( id, id2) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(\r\n        `${API}admin/product/topUp/${id}/${id2}`,  {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }\r\n    );\r\n};\r\nexport const updateItem = (id, updateProductss) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}admin/product/topUp/update/${id}`, updateProductss, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\nexport const getOneProduct = (id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.get(`${API}admin/product/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n};\r\n\r\nexport const getAllProducts = () => {\r\n    return axios.get(\r\n        `${API}admin/product/`\r\n    );\r\n};\r\n\r\nexport const updateProductss = (id, updateProductss) => {\r\n    console.log(\"updateProductss\",updateProductss)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}admin/product/update/${id}`, updateProductss, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const updateImage = (id, updateProductss) => {\r\n    console.log(\"updateProductss\",updateProductss)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}admin/product/update/image/${id}`, updateProductss, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const deleteOneProducts = (token, id) => {\r\n    return axios.delete(\r\n        `${API}admin/product/delete/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }\r\n    );\r\n};\r\n\r\n\r\n\r\nexport const filterAdminProduct = (id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.get(\r\n        `${API}admin/product/filter/admin/product/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n};\r\n\r\nexport const filterProductByDate = (search) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${API}admin/product/filter/date/`, search, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getVisitorsPerDay } from '../Api/visitors';\r\nimport { oneDayOrder, totalRevenue, adminOrderQuery } from '../Api/orderCount';\r\nimport { getAllProducts, filterProductByDate } from '../Api/products';\r\n\r\n// react-bootstrap components\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  Navbar,\r\n  Nav,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\n\r\nfunction Dashboard() {\r\n  const [count, setCount] = useState([]);\r\n  const [orderCount, setOrderCount] = useState({});\r\n  const [allProduct, setAllProduct] = useState([]);\r\n  const [revenue, setRevenue] = useState({});\r\n  const [adminOrder, setAdminOrder] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getVisitorsPerDay()\r\n      .then(response => setCount(response.data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    adminOrderQuery()\r\n      .then(response => setAdminOrder(response.data))\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    oneDayOrder()\r\n      .then(response => setOrderCount(response.data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    totalRevenue()\r\n      .then(response => setRevenue(response.data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getAllProducts()\r\n      .then(response => setAllProduct(response.data))\r\n  }, [])\r\n\r\n\r\n\r\n  console.log(revenue)\r\n  const [searchProduct, setSearchProduct] = useState({\r\n    productId: '',\r\n    date: ''\r\n  });\r\n\r\n  let { productId, date } = searchProduct\r\n\r\n  const [data, setData] = useState({\r\n    totalOrders: null,\r\n    totalIncome: null\r\n  });\r\n\r\n  let { totalOrders, totalIncome } = data;\r\n\r\n  const handleChange = e => {\r\n    setSearchProduct({\r\n      ...searchProduct,\r\n      [e.target.name]: e.target.value\r\n    })\r\n\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    filterProductByDate({ date })\r\n      .then(res => {\r\n        setData({\r\n          ...data,\r\n          totalOrders: res.data.totalOrders,\r\n          totalIncome: res.data.totalIncome,\r\n\r\n        })\r\n      })\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col lg=\"3\" sm=\"6\">\r\n            <Card className=\"card-stats\">\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col xs=\"5\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-chart text-warning\" />\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"7\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Visitors</p>\r\n                      {count && count.map(countTotal => (\r\n                        <Card.Title as=\"h4\">{countTotal.count}</Card.Title>\r\n                      ))}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n\r\n              <Card.Footer>\r\n                <hr></hr>\r\n                <div className=\"stats\">\r\n                  <i className=\"fas fa-redo mr-1\" />\r\n                  Total Visitors\r\n                </div>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"3\" sm=\"6\">\r\n            <Card className=\"card-stats\">\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col xs=\"5\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-light-3 text-success\" />\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"7\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Orders</p>\r\n                      <Card.Title as=\"h4\">{orderCount.totalOrdersToday}</Card.Title>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <hr></hr>\r\n                <div className=\"stats\">\r\n                  <i className=\"far fa-calendar-alt mr-1\"></i>\r\n                  Today\r\n                </div>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"3\" sm=\"6\">\r\n            <Card className=\"card-stats\">\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col xs=\"5\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-vector text-danger\"></i>\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"7\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Orders</p>\r\n                      <Card.Title as=\"h4\">{orderCount.totalOrdersMonthly}</Card.Title>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <hr></hr>\r\n                <div className=\"stats\">\r\n                  <i className=\"far fa-clock-o mr-1\"></i>\r\n                  This month\r\n                </div>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"3\" sm=\"6\">\r\n            <Card className=\"card-stats\">\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col xs=\"5\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-favourite-28 text-primary\"></i>\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"7\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Orders</p>\r\n                      <Card.Title as=\"h4\">{orderCount.totalOrdersYearly}</Card.Title>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <hr></hr>\r\n                <div className=\"stats\">\r\n                  <i className=\"fas fa-redo mr-1\"></i>\r\n                  This year\r\n                </div>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col sm={12}>\r\n            <Card>\r\n              <Card.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3\" controlId=\"date\">\r\n                        <Form.Label>Select date</Form.Label>\r\n                        <Form.Control type=\"date\" name=\"date\" placeholder=\"Date of Birth\" onChange={handleChange} />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                      Search\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Card>\r\n              <Card.Body>\r\n                <p style={{ marginBottom: \"10px\" }}><span style={{ fontWeight: \"bold\" }}>Date:</span> {date}</p>\r\n\r\n                <p><span style={{ fontWeight: \"bold\" }}>Total Orders:</span> {totalOrders}</p>\r\n                <p><span style={{ fontWeight: \"bold\" }}>Total Income:</span> {totalIncome}</p>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <Card.Body>\r\n                <Table className=\"table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">#</th>\r\n                      <th className=\"border-0\">Admin List</th>\r\n                      <th className=\"border-0\">Today's complete order</th>\r\n                      <th className=\"border-0\">Total complete order</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {adminOrder && adminOrder.map((item,index) => (\r\n                      <tr>\r\n                        <td>{index+1}</td>\r\n                        <td>{item.admin}</td>\r\n                        <td>{item.today}</td>\r\n                        <td>{item.total}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const getVisitorsPerDay = () => {\r\n    return axios.get(\r\n        `${API}count`\r\n    );\r\n};\r\n\r\nexport const increaseVisitors = () => {\r\n    return axios.put(\r\n        `${API}count`\r\n    );\r\n};","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const oneDayOrder = () => {\r\n    return axios.get(`${API}dashboard/order/query/oneday`)\r\n}\r\n\r\n\r\nexport const totalRevenue = () => {\r\n    return axios.get(`${API}dashboard/order/query/revenue/count`)\r\n}\r\n\r\nexport const adminOrderQuery = () => {\r\n    return axios.get(`${API}dashboard/order/query/admin_order/query`)\r\n}"," import jwt_decode from 'jwt-decode';\r\nimport {createContext, useReducer} from \"react\";\r\n\r\nexport const authenticate = (token, cb) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(token));\r\n        cb();\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window === 'undefined') return false;\r\n    if (localStorage.getItem('jwt')) { \r\n        const { exp } = jwt_decode(JSON.parse(localStorage.getItem('jwt'))); \r\n        if((new Date()).getTime() < exp * 1000){\r\n            return true;\r\n        }else{\r\n            localStorage.removeItem('jwt');\r\n            return false\r\n        }\r\n        \r\n    } else return false;\r\n}\r\n\r\nexport const userInfo = () => {\r\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\r\n    const decoded = jwt_decode(jwt);\r\n    return { ...decoded, token: jwt }\r\n}\r\n\r\n\r\nconst initialstate = {\r\n    user: null,\r\n};\r\nif (localStorage.getItem(\"JWT_Token\")) {\r\n    const jwt_Token_decoded = Jwt_Decode(localStorage.getItem(\"JWT_Token\"));\r\n    console.log(jwt_Token_decoded.exp * 1000);\r\n    console.log(Date.now());\r\n    if (jwt_Token_decoded.exp * 1000 < Date.now()) {\r\n        localStorage.clear(); // this runs only when I refresh the page or reload on route change it dosent work\r\n    } else {\r\n        initialstate.user = jwt_Token_decoded;\r\n    }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    login: (userData) => {},\r\n    logout: () => {},\r\n});\r\nconst AuthReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n            };\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                user: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const AuthProvider = (props) => {\r\n    const [state, dispatch] = useReducer(AuthReducer, initialstate);\r\n    const login = (userData) => {\r\n        localStorage.setItem(\"JWT_Token\", userData.token);\r\n        dispatch({\r\n            type: \"LOGIN\",\r\n            payload: userData,\r\n        });\r\n    };\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        dispatch({ action: \"LOGOUT\" });\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{ user: state.user, login, logout }}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport {AuthContext};","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const getAllUser = (token) => {\r\n    return axios.get(`${API}admin/user/all_user`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const getAllUserList = (token) => {\r\n    return axios.get(`${API}admin/user/all/users`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const getActiveUserList = (token) => {\r\n    return axios.get(`${API}admin/user/active/users`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getOneUser = (id) => {\r\n    return axios.get(`${API}admin/user/find/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteUser = (token,id) => {\r\n    return axios.delete(`${API}admin/user/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUserRole = (token,role) => {\r\n    return axios.put(`${API}admin/user/roleUpdate/${role._id}`, role, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUserActiveStatus = (activeStatus) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    const user = jwt_decode(token)\r\n    const id = user.id;\r\n    const data={\r\n        activeStatus:activeStatus\r\n    }\r\n    \r\n    return axios.put(`${API}admin/user/activeStatusUpdate/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUserActiveStatus2 = (activeStatus,id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    const user = jwt_decode(token)\r\n   \r\n    const data={\r\n        activeStatus:activeStatus\r\n    }\r\n    \r\n    return axios.put(`${API}admin/user/activeStatusUpdate/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const addProduct = (token,productIds) => {\r\n    const productList={\r\n        productList:productIds\r\n    }\r\n    return axios.put(`${API}admin/user/add/product`, productList, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const deleteProduct = (productId) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${API}admin/user/delete/product/${productId}`,{\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const deleteAllProduct = () => {\r\n    console.log(\"id\")\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${API}admin/user/delete/product/all/admin`,{\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getJwt = () => {\r\n    return axios.get(`${API}admin/user/get/jwt`)\r\n}\r\n\r\nexport const removeJwt = () => {\r\n    return axios.get(`${API}admin/user/remove/jwt`)\r\n}\r\n\r\n\r\nexport const findUserByPhoneNumber = (number) => {\r\n    return axios.get(`${API}admin/user/find/number/${number}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n}\r\n\r\nexport const otpSend = (id,code) => {\r\n    const data={\r\n        otp:code\r\n    }\r\n    return axios.put(`${API}admin/user/otp/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUser = (id,pass) => {\r\n    const data={\r\n        password:pass\r\n    }\r\n    return axios.put(`${API}admin/user/update/password/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n        }\r\n\r\n    })\r\n};\r\n\r\nexport const updateUserPassword = (id, pass) => {\r\n    console.log(id)\r\n    const data={\r\n        password:pass\r\n    }\r\n    return axios.put(`${API}admin/user/edit/password/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n        }\r\n\r\n    })\r\n}\r\n","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const adminProfile = () => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    const user = jwt_decode(token)\r\n    const userId = user.id;\r\n    return axios.get(`${API}admin/user/find/${userId}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n\r\n    })\r\n};\r\n\r\nexport const adminProfileUpdate = (token,id,data) => {\r\n    return axios.put(`${API}admin/user/update/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n\r\n    })\r\n};\r\n\r\n\r\nexport const passwordUpdate = (token,id,data) => {\r\n    console.log(id,data)\r\n    return axios.put(`${API}admin/user/updatePassword/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n\r\n    })\r\n};\r\n\r\nexport const passwordEdit = (token,id,data) => {\r\n    console.log(id,data)\r\n    return axios.put(`${API}admin/user/update/password/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n\r\n    })\r\n};\r\n","import { toast, Slide } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./notification.css\"\r\n\r\ntoast.configure({\r\n  position: toast.POSITION.BOTTOM_RIGHT,\r\n})\r\n\r\nexport const notify = (msg) => {\r\n  toast(`${msg}`)\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { userInfo } from '../utils/auth';\r\nimport { BsPencilSquare } from \"react-icons/bs\"\r\nimport { notify } from '../utils/notification';\r\nimport { getAllWallet } from '../Api/wallet'\r\nimport { editBalance } from '../Api/wallet'\r\nimport { deleteUser } from '../Api/user';\r\nimport { passwordEdit } from \"../Api/userAdmin\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    Form\r\n} from \"react-bootstrap\";\r\nlet userWalletId, walletUserName;\r\nlet userEmail, userName;\r\n\r\nconst UserList = ({ allUserList, loading, paginate,getAllUserList,postsPerPages }) => {\r\n\r\n    const [allWallet, setAllWallet] = useState([]);\r\n    const { token, role, id } = userInfo();\r\n    const [show, setShow] = useState(false);\r\n    const [show2, setShow2] = useState(false);\r\n    const handleClose = () => { setShow(false), setShow2(false) };\r\n    const handleShow = () => setShow(true);\r\n    const handleShow2 = () => setShow2(true);\r\n\r\n\r\n    useEffect(() => {\r\n        getAllWallet(token)\r\n            .then(res => setAllWallet(res.data))\r\n    }, [allWallet])\r\n\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    const modalOpen = (walletId, name) => () => {\r\n        handleShow()\r\n        userWalletId = walletId;\r\n        walletUserName = name;\r\n    }\r\n\r\n    const modalOpen2 = (email, name) => () => {\r\n        handleShow2()\r\n        userEmail = email;\r\n        userName = name;\r\n\r\n    }\r\n\r\n    const [walletBalance, setWalletBalance] = useState({\r\n        amount: '',\r\n        disabled: false\r\n    });\r\n\r\n    const { amount } = walletBalance;\r\n\r\n    const handleChange = e => {\r\n        setWalletBalance({\r\n            ...walletBalance,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleChange2 = e => {\r\n        setEditPassword({\r\n            ...editPassword,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const editUserBalance = () => {\r\n        handleClose();\r\n        setWalletBalance({\r\n            ...walletBalance,\r\n            disabled: true\r\n        })\r\n        editBalance(token, userWalletId, parseInt(amount))\r\n            .then(res => {\r\n                setWalletBalance({\r\n                    amount: '',\r\n                    disabled: true\r\n                })\r\n                notify(`${walletUserName}'s wallet balance updated`)\r\n            })\r\n            .catch(err => {\r\n                setWalletBalance({\r\n                    amount: '',\r\n                    disabled: false\r\n                })\r\n                notify(`Something went wrong. Please try again`)\r\n            })\r\n    }\r\n\r\n\r\n    const deleteUserById = (id) => () => {\r\n        setDisabled({\r\n            disabledd: true\r\n        })\r\n        deleteUser(token, id)\r\n            .then((response) => {\r\n                getAllUserList()\r\n                notify('User Delete Successfully')\r\n                setDisabled({\r\n                    disabledd: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                notify('Something went wrong')\r\n                setDisabled({\r\n                    disabledd: false\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    const editUserPassword = async () => {\r\n        if (newPassword !== newRePassword) {\r\n            notify('password do not match')\r\n        } else {\r\n            const update = {\r\n                newPassword: newPassword,\r\n                email: userEmail\r\n            }\r\n            console.log(update)\r\n            await passwordEdit(token, id, update).then(res => {\r\n                notify('Password Updated')\r\n                handleClose()\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const [editPassword, setEditPassword] = useState({\r\n        newPassword: '',\r\n        newRePassword: ''\r\n    });\r\n    \r\n\r\n    const { newPassword, newRePassword } = editPassword;\r\n\r\n\r\n    const [disabled, setDisabled] = useState({\r\n        disabledd: false\r\n    });\r\n\r\n    const { disabledd } = disabled\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header style={{ margin: \"40px 10px 0px 15px\" }}>\r\n                    Edit {walletUserName}'s Wallet Balance\r\n                </Modal.Header>\r\n                <Modal.Body style={{ margin: \"10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Enter the amount</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"amount\" placeholder=\"Enter amount\" onChange={handleChange} style={{ width: \"80%\" }} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={editUserBalance}>\r\n                        Edit\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={show2} onHide={handleClose}>\r\n                <Modal.Header style={{ margin: \"40px 10px 0px 15px\" }}>\r\n                    Edit {userName}'s password\r\n                </Modal.Header>\r\n                <Modal.Body style={{ margin: \"10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Enter New Password</Form.Label>\r\n                            <Form.Control type=\"password\" name=\"newPassword\" placeholder=\"Enter amount\" onChange={handleChange2} style={{ width: \"80%\" }} />\r\n                            <Form.Label>Re-enter Password</Form.Label>\r\n                            <Form.Control type=\"password\" name=\"newRePassword\" placeholder=\"Enter amount\" onChange={handleChange2} style={{ width: \"80%\" }} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={editUserPassword}>\r\n                        Edit\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {allUserList && allUserList.filter(filteredData => filteredData.role === 'user' && filteredData.disabled === false).map((user, index) => (\r\n                <tr>\r\n                    <td>{(paginate - 1) * parseInt(postsPerPages) + index + 1}</td>\r\n                    <td>{user.userIdNo}</td>\r\n                    <td>{user.username} {user.vipBatch === true && (<><span style={{ color: \"blue\", fontSize: \".7rem\", fontWeight: \"bold\" }}>* (VIP Batch)</span></>)}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.phonenumber}</td>\r\n                    {allWallet && allWallet.map(wallet => {\r\n                        if (user._id === wallet.userId) {\r\n                            return (\r\n\r\n                                <td><div className='d-flex justify-content-around'>\r\n                                    <div>{wallet.currentAmount}</div>\r\n                                    <div><BsPencilSquare style={{ fontSize: 'x-large', cursor: \"pointer\" }} onClick={modalOpen(wallet._id, user.username)} /></div>\r\n                                </div></td>\r\n                            )\r\n                        }\r\n                    })}\r\n                    {(role === 'superadmin' || role === 'admin') && (<>\r\n                        <td className=\"border-0\"><button className='btn btn-danger' disabled={disabledd} onClick={modalOpen2(user.email, user.username)}>Edit Password</button></td>\r\n                    </>)}\r\n                    {(role === 'superadmin' || role === 'admin') && (<>\r\n                        <td className=\"border-0\"><button className='btn btn-danger' disabled={disabledd} onClick={deleteUserById(user._id)}>Delete</button></td>\r\n                    </>)}\r\n                </tr>\r\n            ))\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserList;","import React, { useState, useEffect } from 'react';\r\nimport { getAllUser } from '../Api/user';\r\nimport { userInfo } from '../utils/auth';\r\nimport './TableList.css';\r\nimport Tables from './AdminList'\r\nimport Tabless from './UserList'\r\nimport Pagination from './Pagination'\r\n// react-bootstrap components\r\nimport {\r\n  Card,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nlet userList;\r\n\r\nfunction TableList() {\r\n  const [adminList, setAdminList] = useState([]);\r\n  const [allUserList, setAllUserList] = useState([]);\r\n  const { token, role } = userInfo();\r\n\r\n  useEffect(() => {\r\n    getAllUserList()\r\n  }, [])\r\n\r\n\r\n  const getAllUserList = () => {\r\n    getAllUser(token)\r\n      .then(response => {\r\n        let admin = response.data && response.data.filter(filteredData => filteredData.role === 'admin' && filteredData.disabled === false)\r\n        setAdminList(admin)\r\n        let user = response.data && response.data.filter(filteredData => filteredData.role === 'user' && filteredData.disabled === false)\r\n        setAllUserList(user)\r\n      })\r\n  }\r\n\r\n  const searchForAdminList = (e) => {\r\n    let searchTerm = e.currentTarget.value\r\n    userList = false;\r\n    getAllUser(token)\r\n      .then(res => {\r\n        if (res.data) {\r\n          filterContent(res.data, searchTerm)\r\n        }\r\n      })\r\n  }\r\n\r\n  const searchForAllUserList = (e) => {\r\n    let searchTerm = e.currentTarget.value\r\n    userList = true;\r\n    getAllUser(token)\r\n      .then(res => {\r\n        if (res.data) {\r\n          filterContent(res.data, searchTerm)\r\n        }\r\n      })\r\n  }\r\n\r\n  const filterContent = (users, searchTerm) => {\r\n    const result = users.filter((user) =>\r\n      user.username?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n      user.email?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n      user.role?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n      user.phonenumber?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n      ((parseInt(user.wallet?.currentAmount)).toString()).includes(searchTerm) ||\r\n      ((parseInt(user.userIdNo)).toString()).includes(searchTerm)\r\n    )\r\n\r\n    if (userList === true) {\r\n      let value = result.filter(filteredData => filteredData.role === 'user')\r\n      setAllUserList(value)\r\n    }\r\n    else if (userList === false) {\r\n      let value = result.filter(filteredData => filteredData.role === 'admin' || filteredData.role === 'superadmin')\r\n      setAdminList(value)\r\n    }\r\n\r\n  }\r\n\r\n  const rowSelectForUserTable = (e) => {\r\n    setPostsPerPages(e.target.value)\r\n  }\r\n\r\n  const rowSelectForAdminTable = (e) => {\r\n    setPostsPerPage(e.target.value)\r\n  }\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(10);\r\n\r\n\r\n  const [currentPages, setCurrentPages] = useState(1);\r\n  let [postsPerPages, setPostsPerPages] = useState(10);\r\n\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPost = adminList.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  let indexOfLastPosts = currentPages * postsPerPages;\r\n  let indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n  let currentPosts = allUserList.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n  const [admin, setAdmin] = useState(0);\r\n  const [user, setUser] = useState(0);\r\n\r\n  const paginate = pageNumber => {\r\n    setCurrentPage(pageNumber)\r\n    setAdmin(pageNumber)\r\n  }\r\n  const paginates = pageNumber => {\r\n    setCurrentPages(pageNumber)\r\n    setUser(pageNumber)\r\n  }\r\n\r\n  let selectArray = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"strpied-tabled-with-hover\">\r\n              <Card.Header>\r\n                <div style={{ float: \"right\", width: \"300px\" }}>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    name=\"serachTerm\"\r\n                    onChange={searchForAdminList}\r\n                  >\r\n                  </input>\r\n                </div>\r\n                <Card.Title as=\"h4\">Admin List</Card.Title>\r\n              </Card.Header>\r\n              <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                <Table className=\"table-hover table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"border-0\">#</th>\r\n                      <th className=\"border-0\">User ID</th>\r\n                      <th className=\"border-0\">Name</th>\r\n                      <th className=\"border-0\">Email</th>\r\n                      <th className=\"border-0\">Phone No</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <Tables adminList={currentPost} loading={loading} paginate={currentPage} postsPerPage={postsPerPage}/>\r\n                  </tbody>\r\n                </Table>\r\n                <div className='d-flex'>\r\n                  <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={adminList.length}\r\n                    paginate={paginate}\r\n                    Number={admin}\r\n                  />\r\n                  {adminList.length > 0 && (\r\n                    <div className='ml-5' >\r\n                      <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForAdminTable(e)}>\r\n                        {selectArray.map(number => {\r\n                          return (\r\n                            <option value={number} >{number}</option>\r\n                          )\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col md=\"12\">\r\n            <Card className=\"strpied-tabled-with-hover\">\r\n              <Card.Header>\r\n                <div style={{ float: \"right\", width: \"300px\" }}>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    name=\"serachTerm\"\r\n                    onChange={searchForAllUserList}\r\n                  >\r\n                  </input>\r\n                </div>\r\n                <Card.Title as=\"h4\">User List:</Card.Title>\r\n              </Card.Header>\r\n              <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                <Table className=\"table-hover table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"border-0\">#</th>\r\n                      <th className=\"border-0\">User ID</th>\r\n                      <th className=\"border-0\">Name</th>\r\n                      <th className=\"border-0\">Email</th>\r\n                      <th className=\"border-0\">Phone No</th>\r\n                      <th className=\"border-0\">Wallet Balance</th>\r\n                      {(role === 'superadmin') && (<>\r\n                        <th className=\"border-0\"></th>\r\n                      </>)}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <Tabless allUserList={currentPosts} loading={loading} paginate={currentPages} getAllUserList={getAllUserList} postsPerPages={postsPerPages} />\r\n                  </tbody>\r\n                </Table>\r\n                <div className='d-flex'>\r\n                  <Pagination\r\n                    postsPerPage={postsPerPages}\r\n                    totalPosts={allUserList.length}\r\n                    paginate={paginates}\r\n                    Number={user}\r\n                  />\r\n                  {allUserList.length > 0 && (\r\n                    <div className='ml-5' >\r\n                      <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForUserTable(e)}>\r\n                        {selectArray.map(number => {\r\n                          return (\r\n                            <option value={number} >{number}</option>\r\n                          )\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TableList;\r\n","import axios from \"axios\";\r\nimport { API } from '../utils/config';\r\n\r\nexport const sendMessageAPI = (sendMessage) => {\r\n    console.log(sendMessage)\r\n    return axios.post(`${API}sendMessage`,sendMessage,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n        }\r\n    })\r\n}\r\n\r\nexport const sendMessageAllUser = (sendMessage) => {\r\n    return axios.post(`${API}sendMessage/allUser`,sendMessage,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n        }\r\n    })\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"../components/Main/User/userinfo.css\"\r\nimport { userInfo } from '../utils/auth';\r\nimport { getOneUser, otpSend } from \"../Api/user\";\r\nimport { adminProfileUpdate, passwordUpdate } from \"../Api/userAdmin\";\r\nimport Avatar from \"antd/es/avatar/avatar\";\r\nimport animationData from \"../assets/lotte/34658-profile-in-mobile.json\";\r\nimport { notify } from '../utils/notification';\r\nimport { Box, Button, Chip, Container, Grid, Modal, Paper, TextField, Typography } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { sendMessageAPI } from \"../Api/sendMessage\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\nconst UserProfile = () => {\r\n    const { token, id } = userInfo();\r\n    const {\r\n        register: registerPassword,\r\n        handleSubmit: submitPassword,\r\n        setError: setPasswordError,\r\n        formState: { errors: errorsPassword }\r\n    } = useForm();\r\n    const {\r\n        register: registerPhone,\r\n        handleSubmit: submitPhone,\r\n        setError: setPhoneError,\r\n        formState: { errors: errorsPhone }\r\n    } = useForm();\r\n    const {\r\n        register: checkOtp,\r\n        handleSubmit: submitOTP,\r\n        setError: setOTPError,\r\n        formState: { errors: errorsOTP }\r\n    } = useForm();\r\n    const [admin, setAdmin] = useState(\r\n        {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            phonenumber: '',\r\n            disabled: false,\r\n            formData: '',\r\n        }\r\n    )\r\n    const [name, setName] = useState({\r\n        username: '',\r\n        profilePic: ''\r\n    })\r\n    // const {username, email, password, confirmPassword, phonenumber, disabled, image, formData} = admin\r\n\r\n    useEffect(() => {\r\n        getOneUser(token, id)\r\n            .then(response => setAdmin(response.data))\r\n            .then(response => setAdmin({ formData: new FormData() }))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getOneUser(id).then(response => setName(response.data))\r\n    })\r\n    useEffect(() => {\r\n        setAdmin({\r\n            ...admin,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAdmin({\r\n            ...admin,\r\n            [e.target.name]: value,\r\n        })\r\n\r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const [phone, setPhone] = React.useState(false);\r\n    const handleOpenPhone = () => setPhone(true);\r\n    const handleClosePhone = () => setPhone(false);\r\n    const [otp, setOtp] = React.useState(false);\r\n    const handleOpenOtp = () => setOtp(true);\r\n    const handleCloseOtp = () => setOtp(false);\r\n\r\n\r\n    function handleClick() {\r\n        handleOpen()\r\n    }\r\n\r\n    async function handleSubmitPassword(data) {\r\n        if (data.newPassword !== data.newRePassword) {\r\n            setPasswordError(\"newRePassword\", { type: 'notMatched', message: 'password do not match' })\r\n        } else {\r\n            const update = {\r\n                oldPassword: data.oldPassword,\r\n                newPassword: data.newPassword,\r\n                email: name.email\r\n            }\r\n            console.log(update)\r\n            await passwordUpdate(token, id, update).then(res => {\r\n                if (res.data === \"password updated!\") {\r\n                    notify('Profile Updated')\r\n                    handleClose()\r\n                } else if (res.data === \"wrong password!\") {\r\n                    setPasswordError(\"oldPassword\", { type: 'notMatched', message: 'old password do not match' })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function addPhoneNumber() {\r\n        handleOpenPhone()\r\n        // checkNumber()\r\n    }\r\n\r\n    const [verifyOtp, setVerifyOtp] = useState({})\r\n\r\n    const checkNumber = (userNumber) => {\r\n        let val = Math.floor(1000 + Math.random() * 9000);\r\n        setVerifyOtp({\r\n            otp: val\r\n        })\r\n        let sms = `Sizishop OTP Code: ${val}`\r\n        let sendMessage = {\r\n            number: userNumber,\r\n            message: sms.replaceAll(\" \", \"%20\")\r\n        }\r\n        otpSend(id, val)\r\n            .then(res => {\r\n                handleClosePhone()\r\n                handleOpenOtp()\r\n                sendMessageAPI(sendMessage).then(r => {\r\n\r\n                })\r\n            })\r\n\r\n        // return (\r\n        //     setOtp(true),\r\n        //         setPhone_number(false),\r\n        //         setPassword(false)\r\n        // )\r\n    }\r\n    const [number, setNumber] = useState({})\r\n    function sendOtp(data) {\r\n        setNumber(data)\r\n        checkNumber(data.phonenumber)\r\n    }\r\n\r\n    async function updatePhoneNumber(data) {\r\n        if (data.otp * 1 === verifyOtp.otp) {\r\n            await adminProfileUpdate(token, id, number)\r\n                .then(r => {\r\n                    console.log(r)\r\n                    handleCloseOtp()\r\n                })\r\n                .catch(err => {\r\n                    notify(\"Number already exists!\")\r\n                    handleCloseOtp()\r\n                })\r\n        }\r\n        else {\r\n            console.log('not matched')\r\n            setOTPError('otp', { type: 'notMatched', message: 'otp do not matched' })\r\n        }\r\n\r\n    }\r\n\r\n    let letter = '';\r\n    var userNameLetter = name.username.match(/\\b(\\w)/g);\r\n    if (userNameLetter) {\r\n        userNameLetter.map(a => {\r\n            letter = letter + a\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal open={otp}\r\n                onClose={handleCloseOtp}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\" >\r\n                <form onSubmit={submitOTP(updatePhoneNumber)}>\r\n                    <Box sx={style}>\r\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            Type OTP\r\n                        </Typography>\r\n                        <TextField {...checkOtp(\"otp\", { required: \"Otp is required\", })}\r\n                            error={Boolean(errorsPhone.otp)}\r\n                            helperText={errorsPhone.otp?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }} label=\"OTP\" variant=\"outlined\"\r\n                            type=\"number\" />\r\n                        <Box style={{ display: \"flex\", justifyContent: 'center', marginTop: 10 }}>\r\n                            <Button variant=\"outlined\" type='submit' style={{ marginRight: 5 }}>\r\n                                Save Number\r\n                            </Button>\r\n                            <Button variant=\"outlined\" onClick={handleCloseOtp}>\r\n                                cancel\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </form>\r\n\r\n            </Modal>\r\n            <Modal open={phone}\r\n                onClose={handleClosePhone}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\" >\r\n                <form onSubmit={submitPhone(sendOtp)}>\r\n                    <Box sx={style}>\r\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            Add Phone Number\r\n                        </Typography>\r\n                        <TextField {...registerPhone(\"phonenumber\", { required: \"Phone Number is required\", })}\r\n                            error={Boolean(errorsPhone.phonenumber)}\r\n                            helperText={errorsPhone.phonenumber?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }} label=\"Phone Number\" variant=\"outlined\"\r\n                            type=\"number\" />\r\n                        <Box style={{ display: \"flex\", justifyContent: 'center', marginTop: 10 }}>\r\n                            <Button variant=\"outlined\" type='submit' style={{ marginRight: 5 }}>\r\n                                Send Token\r\n                            </Button>\r\n                            <Button variant=\"outlined\" onClick={handleClosePhone}>\r\n                                cancel\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </form>\r\n\r\n            </Modal>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <form onSubmit={submitPassword(handleSubmitPassword)}>\r\n                    <Box sx={style}>\r\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            Change Password\r\n                        </Typography>\r\n                        <TextField {...registerPassword(\"oldPassword\", { required: \"Old Password is required\", })}\r\n                            error={Boolean(errorsPassword.oldPassword)}\r\n                            helperText={errorsPassword.oldPassword?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }} label=\"Old Password\" variant=\"outlined\"\r\n                            type=\"password\" />\r\n                        <TextField {...registerPassword(\"newPassword\", {\r\n                            required: \"New password is required\",\r\n                            minLength: { value: 8, message: \"minimum length 8\" }\r\n                        })}\r\n                            error={Boolean(errorsPassword.newPassword)}\r\n                            helperText={errorsPassword.newPassword?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }}\r\n                            label=\"New Password\" variant=\"outlined\" type=\"password\" />\r\n                        <TextField {...registerPassword(\"newRePassword\", {\r\n                            required: \"Re-enter New password is required\",\r\n                            minLength: { value: 8, message: \"minimum length 8\" }\r\n                        })}\r\n                            error={Boolean(errorsPassword.newRePassword)}\r\n                            helperText={errorsPassword.newRePassword?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }}\r\n                            label=\"Re-enter New Password\" variant=\"outlined\" type=\"password\" />\r\n                        <Box style={{ display: \"flex\", justifyContent: 'center', marginTop: 10 }}>\r\n                            <Button variant=\"outlined\" type='submit' style={{ marginRight: 5 }}>\r\n                                Submit\r\n                            </Button>\r\n                            <Button variant=\"outlined\" onClick={handleClose}>\r\n                                cancel\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </form>\r\n\r\n            </Modal>\r\n\r\n            <Container container>\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    style={{ minHeight: '100vh' }}\r\n                >\r\n\r\n                    <div class=\"circle\">{letter}</div>\r\n                    \r\n                    <Grid item xs={3}>\r\n                        <Typography style={{ padding: 5, textAlign: 'center', fontWeight: \"bold\", fontSize: 18 }}>\r\n                            {name.username}\r\n                        </Typography>\r\n                        <Box style={{ marginTop: 10 }}>\r\n                            <Paper sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                minWidth: 400\r\n                            }}>\r\n                                <Typography style={{ padding: 10, fontWeight: \"bold\", fontSize: 17, marginTop: 10 }}>\r\n                                    User Id\r\n                                </Typography>\r\n                                <Typography\r\n                                    style={{ padding: 10, fontSize: 17, marginTop: 10, marginRight: 0, display: '' }}>\r\n                                    {name.userIdNo}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Box>\r\n                        <Box style={{ marginTop: 10 }}>\r\n                            <Paper sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                minWidth: 400\r\n                            }}>\r\n                                <Typography style={{ padding: 10, fontWeight: \"bold\", fontSize: 17, marginTop: 10 }}>\r\n                                    Email\r\n                                </Typography>\r\n                                <Typography\r\n                                    style={{ padding: 10, fontSize: 17, marginTop: 10, marginRight: 0, display: '' }}>\r\n                                    {name.email}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Box>\r\n                        <Box style={{ marginTop: 10 }}>\r\n                            <Paper sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                minWidth: 400\r\n                            }}>\r\n                                <Typography style={{ padding: 10, fontWeight: \"bold\", fontSize: 17, marginTop: 10 }}>\r\n                                    Phone Number\r\n                                </Typography>\r\n                                {name.phonenumber && <Typography\r\n                                    style={{ padding: 10, fontSize: 17, marginTop: 10, marginRight: 0, display: '' }}>\r\n                                    {name.phonenumber}\r\n                                </Typography>}\r\n                                {!name.phonenumber && <Chip label=\"Add Phone Number\" onClick={e => addPhoneNumber()}\r\n                                    style={{\r\n                                        padding: 10,\r\n                                        fontSize: 17,\r\n                                        marginTop: 10,\r\n                                        marginRight: 0,\r\n                                        display: ''\r\n                                    }} />}\r\n\r\n                            </Paper>\r\n                        </Box>\r\n                        <Box style={{ marginTop: 10 }}>\r\n                            <Paper sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                minWidth: 400\r\n                            }}>\r\n                                <Typography style={{ padding: 10, fontWeight: \"bold\", fontSize: 17, marginTop: 10 }}>\r\n                                    Password\r\n                                </Typography>\r\n                                {!name.googleId && <Chip label=\"Change Password\" onClick={handleClick}\r\n                                    style={{\r\n                                        padding: 10,\r\n                                        fontSize: 17,\r\n                                        marginTop: 10,\r\n                                        marginRight: 0,\r\n                                        display: ''\r\n                                    }} />}\r\n                                {name.googleId && <Typography>\r\n                                    Logged in with google id\r\n                                </Typography>}\r\n\r\n\r\n                            </Paper>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserProfile","import React from 'react';\r\n\r\nconst AdminList = ({ adminList, loading, paginate,postsPerPage }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {adminList && adminList.filter(filteredData => filteredData.role === 'admin' && filteredData.disabled === false).map((user, index) => (\r\n                      <tr>\r\n                        <td>{(paginate - 1) * parseInt(postsPerPage) + index + 1}</td>\r\n                        <td>{user.userIdNo}</td>\r\n                        <td>{user.username}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{user.phonenumber}</td>\r\n                      </tr>\r\n                    ))\r\n                    }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminList;","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const createWallet = (token,id) => {\r\n    const data={\r\n        userId:id\r\n    }\r\n    return axios.post(`${API}admin/wallet`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUserWallet = (token,id,walletId) => {\r\n    const data={\r\n        wallet:walletId\r\n    }\r\n    return axios.put(`${API}admin/user/walletUpdate/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const editBalance = (token,id,amount) => {\r\n    const data={\r\n        amount:amount\r\n    }\r\n    return axios.put(`${API}admin/wallet/updateUserAmount/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getAllWallet = (token) => {\r\n    return axios.get(`${API}admin/wallet`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getWalletById = (token,id) => {\r\n    return axios.get(`${API}admin/wallet/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateWallet = (token,id,amount,spent) => {\r\n    const data={\r\n        amount,\r\n        spent\r\n    }\r\n    console.log(data)\r\n    return axios.put(`${API}admin/wallet/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const addSpentAmount = (token,id,amount,orderId) => {\r\n    const data={\r\n        amount,\r\n        orderId\r\n    }\r\n    console.log(data)\r\n    return axios.put(`${API}admin/wallet/addSpentAmount/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const removeSpentAmount = (token,id,amount,orderId) => {\r\n    const data={\r\n        amount,\r\n        orderId\r\n    }\r\n    console.log(data)\r\n    return axios.put(`${API}admin/wallet/removeSpentAmount/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteWallet = (token,id) => {\r\n    return axios.delete(`${API}admin/wallet/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n","import React, { useEffect } from 'react';\r\nlet num = 0;\r\n\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate, Number }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    let totalPagination = pageNumbers.length\r\n\r\n    let pages=[]\r\n\r\n    if(totalPagination>10){\r\n        for (let i = 1; i <= 10; i++) {\r\n            pages.push(i);\r\n        }\r\n    }\r\n    else{\r\n        pages=pageNumbers\r\n    }\r\n\r\n    const pageNumber = (number) => () => {\r\n        num = number;\r\n    }\r\n\r\n    const previous = () => {\r\n        num = Number\r\n        if (num > 0) {\r\n            if (num > 1) {\r\n                paginate(num - 1)\r\n                num = num - 1\r\n            } else {\r\n                paginate(1)\r\n            }\r\n        }\r\n        else {\r\n            paginate(1)\r\n        }\r\n    }\r\n\r\n    const next = () => {\r\n        num = Number\r\n        if (num < totalPagination) {\r\n            if (num < totalPagination - 1) {\r\n                paginate(num + 1)\r\n                num = num + 1\r\n            } else {\r\n                paginate(totalPagination)\r\n            }\r\n        }\r\n        else {\r\n            paginate(totalPagination)\r\n        }\r\n    }\r\n\r\n    const start = () => {\r\n        paginate(1)\r\n    }\r\n\r\n    const end = () => {\r\n        paginate(totalPagination)\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {totalPagination > 1 && (\r\n                    <>\r\n                        <li className='page-item'>\r\n                            <a className='page-link' onClick={start}>\r\n                                <span aria-hidden=\"true\"><i class=\"fa fa-angle-double-left\"></i></span>\r\n                                <span class=\"sr-only\">Previous</span>\r\n                            </a>\r\n                        </li>\r\n                        <li className='page-item'>\r\n                            <a className='page-link' onClick={previous}>\r\n                                <span aria-hidden=\"true\"><i class=\"fa fa-angle-left\"></i></span>\r\n                                <span class=\"sr-only\">Previous</span>\r\n                            </a>\r\n                        </li>\r\n                    </>\r\n                )}\r\n\r\n                {pages.map(number => {\r\n                    return (\r\n                        <li key={number} className='page-item' onClick={pageNumber(number)}>\r\n                            <a onClick={() => paginate(number)} className='page-link'>\r\n                                {number}\r\n                            </a>\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n                {totalPagination > 1 && (\r\n                    <>\r\n                        <li className='page-item'>\r\n                            <a className='page-link' onClick={next}>\r\n                                <span aria-hidden=\"true\"><i class=\"fa fa-angle-right\"></i></span>\r\n                                <span class=\"sr-only\">Previous</span>\r\n                            </a>\r\n                        </li>\r\n                        <li className='page-item'>\r\n                            <a className='page-link' onClick={end}>\r\n                                <span aria-hidden=\"true\"><i class=\"fa fa-angle-double-right\"></i></span>\r\n                                <span class=\"sr-only\">Next</span>\r\n                            </a>\r\n                        </li>\r\n                    </>\r\n                )}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { getOrders } from \"../Api/order\";\r\nimport { userInfo } from '../utils/auth';\r\n\r\nimport Tables from \"./TableUser\";\r\nimport Pagination from \"./Pagination\";\r\nimport Tabless from \"./TableOrder\";\r\nimport Tablesss from \"./TableCancelOrder\"\r\nlet totalActive, totalComplete, totalCancel;\r\n\r\nconst Orders = () => {\r\n    const [activeOrders, setActiveOrders] = useState([])\r\n    const [completeOrders, setCompleteOrders] = useState([])\r\n    const [cancelledOrders, setCancelledOrders] = useState([])\r\n    const { token, id } = userInfo();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    const [currentPages, setCurrentPages] = useState(1);\r\n    const [postsPerPages] = useState(10);\r\n    const [currentPagess, setCurrentPagess] = useState(1);\r\n    const [postsPerPagess] = useState(10);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getOrders(token)\r\n            .then(response => {\r\n                const data = response.data\r\n                const active = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n                const complete = data && data.filter(filteredData => filteredData.isComplete === true && filteredData.reject === false)\r\n                const cancel = data && data.filter(filteredData => filteredData.reject === true)\r\n                setActiveOrders(active)\r\n                totalActive = active.length;\r\n                setCompleteOrders(complete)\r\n                totalComplete = complete.length;\r\n                setCancelledOrders(cancel)\r\n                totalCancel = cancel.length;\r\n            })\r\n    }, [])\r\n\r\n\r\n    const searchOrders = (e) => {\r\n        let searchTerm = e.currentTarget.value\r\n        getOrders(token)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    filterContent(res.data, searchTerm)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const filterContent = (orders, searchTerm) => {\r\n        const result = orders.filter((order) =>\r\n            ((parseInt(order.orderId)).toString()).includes(searchTerm) ||\r\n            order.productId?.gameName?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            order.productId?.categoryName?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            order.purchaseId?.product?.option?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(order.purchaseId?.product?.price)).toString()).includes(searchTerm) ||\r\n            ((parseInt(order.userId?.userIdNo)).toString()).includes(searchTerm)\r\n        )\r\n        let value = result.filter(filteredData => filteredData.isComplete === true && filteredData.reject === false)\r\n        setCompleteOrders(value)\r\n\r\n        let value2 = result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n        setActiveOrders(value2)\r\n\r\n        let value3 = result.filter(filteredData => filteredData.reject === true)\r\n        setCancelledOrders(value3)\r\n    }\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = activeOrders.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const indexOfLastPosts = currentPages * postsPerPages;\r\n    const indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n    const currentPosts = completeOrders.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n    const indexOfLastPostss = currentPagess * postsPerPagess;\r\n    const indexOfFirstPostss = indexOfLastPostss - postsPerPagess;\r\n    const currentPostss = cancelledOrders.slice(indexOfFirstPostss, indexOfLastPostss);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const paginates = pageNumber => setCurrentPages(pageNumber);\r\n    const paginatess = pageNumber => setCurrentPagess(pageNumber);\r\n\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <div style={{ float: \"right\", width: \"300px\", marginBottom: \"10px\" }}>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                name=\"serachTerm\"\r\n                                onChange={searchOrders}\r\n                            >\r\n                            </input>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Active Orders</Card.Title>\r\n                                <p className=\"card-category\">\r\n                                    Total active orders: {totalActive}\r\n                                </p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Order Status</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                            <th className=\"border-0\">HandOver Admin</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tables activeOrders={currentPost} loading={loading} paginate={currentPage} />\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPage}\r\n                                    totalPosts={activeOrders.length}\r\n                                    paginate={paginate}\r\n                                />\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Completed Orders</Card.Title>\r\n                                <p className=\"card-category\">\r\n                                    Total completed orders: {totalComplete}\r\n                                </p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Order Status</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                            <th className=\"border-0\">HandOver Admin</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tabless completeOrders={currentPosts} loading={loading} paginate={currentPages} />\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPages}\r\n                                    totalPosts={completeOrders.length}\r\n                                    paginate={paginates}\r\n                                />\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Cancelled Orders</Card.Title>\r\n                                <p className=\"card-category\">\r\n                                    Total cancelled orders: {totalCancel}\r\n                                </p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Order Status</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                            <th className=\"border-0\">HandOver Admin</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tablesss cancelledOrders={currentPostss} loading={loading} paginate={currentPagess} />\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagess}\r\n                                    totalPosts={cancelledOrders.length}\r\n                                    paginate={paginatess}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Orders","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\n\r\nexport const createNewOrder = (token,data) => {\r\n    console.log(\"order\",data)\r\n    return axios.post(`${API}admin/order/`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const orderQueue = () => {\r\n    return axios.get(`${API}admin/order/`)\r\n}\r\n\r\n\r\nexport const getOrders = (token) => {\r\n    return axios.get(`${API}admin/order/all`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getOrdersByAdminId = (token,id) => {\r\n    return axios.get(`${API}admin/order/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getOrdersById = (token,id) => {\r\n    return axios.get(`${API}admin/order/user/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateOrderStatus = (token,id,data) => {\r\n    return axios.put(`${API}admin/order/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const markAllComplete = (token,data) => {\r\n    console.log(token,data)\r\n    return axios.put(`${API}admin/order/mark/All`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst OrderTables = ({ activeOrders, loading, paginate }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {activeOrders && activeOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false).map((order, index) => (\r\n                <tr key={index}>\r\n                <td>{(paginate - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}{order.productId?.categoryName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>Pending</td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    {order.handOverAdmin != null && (<>\r\n                        <td style={{ color: \"blue\" }}>{order.handOverAdmin?.username}</td>\r\n                    </>)}\r\n\r\n                    {order.handOverAdmin === null && (<>\r\n                        <td>\r\n                            N/A\r\n                        </td>\r\n                    </>)}\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst OrderTables = ({ completeOrders, loading, paginate }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {completeOrders && completeOrders.filter(filteredData => filteredData.isComplete === true).map((order, index) => (\r\n                <tr key={index}>\r\n                    <td>{(paginate - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}{order.productId?.categoryName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>Complete</td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    <td style={{ color: \"blue\" }}>{order.handOverAdmin?.username}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst OrderTables = ({ cancelledOrders, loading, paginate }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>{cancelledOrders && cancelledOrders.filter(filteredData => filteredData.reject === true).map((order, index) => (\r\n            <tr key={index}>\r\n                <td>{(paginate - 1) * 10 + index + 1}</td>\r\n                <td>{order.orderId}</td>\r\n                <td>{order.userId?.userIdNo}</td>\r\n                <td>{order.productId?.gameName}{order.productId?.categoryName}</td>\r\n                <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                <td>Cancel ( {order.rejectReason} )</td>\r\n                <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                <td style={{ color: \"blue\" }}>{order.handOverAdmin?.username}</td>\r\n            </tr>\r\n        ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const addBanners = (token,addBanner) => {\r\n    return axios.post(`${API}admin/banner`, addBanner, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateBanner = (token,id,editBanner) => {\r\n    console.log(id)\r\n    return axios.put(`${API}admin/banner/${id}`, editBanner, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const findAllBanner = () => {\r\n    return axios.get(`${API}admin/banner`)\r\n}\r\n\r\nexport const deleteBanner = (token,id) => {\r\n    return axios.delete(`${API}admin/banner/delete/${id}`,{\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { addBanners } from \"../../../Api/utility\";\r\nimport { userInfo } from '../../../utils/auth';\r\nimport { Alert } from \"antd\";\r\nimport { notify } from '../../../utils/notification'\r\n\r\nconst AddBanner = () => {\r\n    const [addBanner, setAddBanner] = useState({\r\n        firstTitle: '',\r\n        secondTitle: '',\r\n        link: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false,\r\n    })\r\n    let { success, alert, disabled } = values;\r\n    const { firstTitle, secondTitle, link, formData } = addBanner\r\n\r\n    useEffect(() => {\r\n        setAddBanner({\r\n            ...addBanner,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAddBanner({\r\n            ...addBanner,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        setValues({\r\n            ...values,\r\n            disabled: true\r\n        })\r\n\r\n        setAddBanner({\r\n            ...addBanner\r\n        })\r\n        const { token } = userInfo();\r\n        addBanners(token, formData)\r\n            .then(response => {\r\n                setAddBanner({\r\n                    firstTitle: '',\r\n                    secondTitle: '',\r\n                    link: '',\r\n                    success: true,\r\n                })\r\n                notify(\"Banner Added successfully!\")\r\n                setValues({\r\n                    ...values,\r\n                    disabled: false\r\n                })\r\n                e.target.reset();\r\n                setAddBanner({\r\n                    formData: new FormData()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                setValues({\r\n                    ...values,\r\n                    disabled: false\r\n                })\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(errMsg)\r\n                e.target.reset();\r\n                setAddBanner({\r\n                    formData: new FormData()\r\n                })\r\n            })\r\n    }\r\n\r\n    const BannerForm = () => (\r\n        <Card>\r\n            <Card.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                        <Form.Label>Upload a file</Form.Label>\r\n                        <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                    <Row>\r\n\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                <Form.Label>First Title</Form.Label>\r\n                                <Form.Control placeholder=\"firstTitle\" type=\"firstTitle\" name=\"firstTitle\"\r\n                                    value={firstTitle} onChange={handleChange} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                <Form.Label>Second Title</Form.Label>\r\n                                <Form.Control placeholder=\"Second Title\" type=\"secondTitle\" name=\"secondTitle\"\r\n                                    value={secondTitle} onChange={handleChange} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                <Form.Label>Link</Form.Label>\r\n                                <Form.Control placeholder=\"Link\" type=\"link\" name=\"link\"\r\n                                    value={link} onChange={handleChange} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={disabled}>\r\n                        Add\r\n                    </Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {BannerForm()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddBanner","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Card, Form, Modal, Table, Row, Col } from \"react-bootstrap\";\r\nimport AddBanner from \"./Child/Add Banner\";\r\nimport { deleteBanner, findAllBanner, updateBanner } from \"../../Api/utility\";\r\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\r\nimport { userInfo } from '../../utils/auth';\r\nimport { API } from '../../utils/config';\r\nimport { notify } from '../../utils/notification'\r\n\r\nconst CarouselComp = () => {\r\n\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [banner, setBanner] = useState([])\r\n    const [remove, setRemove] = useState(false);\r\n    const [edit, setEdit] = useState(false);\r\n    const [ids, setId] = useState('')\r\n    const [editId, setEditIds] = useState('')\r\n    const { token } = userInfo();\r\n\r\n    useEffect(() => {\r\n        findAllBanner()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setBanner(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [banner]);\r\n\r\n\r\n    const [editBanner, setEditBanner] = useState({\r\n        firstTitle: '',\r\n        secondTitle: '',\r\n        link: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false\r\n    })\r\n    const { success, alert } = values;\r\n    const { firstTitle, secondTitle, link, formData } = editBanner\r\n\r\n    useEffect(() => {\r\n        setEditBanner({\r\n            ...editBanner,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleShowDelete = (id) => () => {\r\n        setRemove(true)\r\n        setId(id)\r\n    };\r\n\r\n    const handleCloseDelete = () => {\r\n        setRemove(false)\r\n    }\r\n\r\n    const handleCloseEdit = () => {\r\n        setEdit(false)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        deleteBanner(token, ids)\r\n            .then(response => notify('Banner Delete Successfully'))\r\n            .catch(err => notify('Something Failed! Please try again'))\r\n    }\r\n\r\n    const handleShowEdit = (id) => () => {\r\n        setEdit(true)\r\n        setEditIds(id)\r\n    }\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setEditBanner({\r\n            ...editBanner,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmitEdit = (e) => {\r\n        e.preventDefault()\r\n        setEditBanner({\r\n            ...editBanner\r\n        })\r\n        const { token } = userInfo();\r\n        updateBanner(token,editId, formData)\r\n            .then(response => {\r\n                setEditBanner({\r\n                    firstTitle: '',\r\n                    secondTitle: '',\r\n                    link: '',\r\n                    success: true,\r\n                })\r\n                notify(\"Banner Updated successfully!\")\r\n                e.target.reset();\r\n                setEditBanner({\r\n                    formData: new FormData()\r\n                })\r\n                handleCloseEdit()\r\n            })\r\n            .catch(err => {\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(errMsg)\r\n                e.target.reset();\r\n                setEditBanner({\r\n                    formData: new FormData()\r\n                })\r\n                e.target.reset();\r\n                setEditBanner({\r\n                    formData: new FormData()\r\n                })\r\n                handleCloseEdit()\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <AddBanner />\r\n                </Card.Body>\r\n            </Card>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th style={{ width: \"10%\" }}>Image</th>\r\n                        <th>First Title</th>\r\n                        <th>Second Title</th>\r\n                        <th>Link</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {banner && banner.filter(filteredData => filteredData.disabled === false).map((data, index) => (\r\n                        <Fragment key={index}>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td><img src={`${API}${data.image}`} alt=\"banner\" /></td>\r\n                                <td>{data.firstTitle}</td>\r\n                                <td>{data.secondTitle}</td>\r\n                                <td>{data.link}</td>\r\n                                <td><Button variant=\"light\">\r\n                                    <AiOutlineEdit onClick={handleShowEdit(data._id)} size={24} />\r\n                                </Button></td>\r\n                                <td><Button><AiOutlineDelete onClick={handleShowDelete(data._id)}\r\n                                    size={24} /></Button>\r\n                                </td>\r\n                            </tr>\r\n                        </Fragment>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n            <Modal show={remove} onHide={handleCloseDelete}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Delete Item</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => handleSubmit(e)}>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <Form.Label>Do you want to delete this item? </Form.Label>\r\n                            <Button onClick={handleCloseDelete} type=\"submit\" variant=\"primary\">\r\n                                Yes Delete\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={edit} onHide={handleCloseEdit}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{marginLeft:\"30px\"}}>Edit Banner</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <Form.Label>\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                            <Form.Label>Upload a file</Form.Label>\r\n                                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                                            <Form.Label>First Title</Form.Label>\r\n                                            <Form.Control placeholder=\"firstTitle\" type=\"firstTitle\" name=\"firstTitle\" value={firstTitle} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                                            <Form.Label>Second Title</Form.Label>\r\n                                            <Form.Control placeholder=\"Second Title\" type=\"secondTitle\" name=\"secondTitle\" value={secondTitle} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Link</Form.Label>\r\n                                            <Form.Control placeholder=\"Link\" type=\"link\" name=\"link\" value={link} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Form.Label>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Form onSubmit={e => handleSubmitEdit(e)}>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Update product\r\n                    </Button>\r\n                    </Form>\r\n                    <Button className=\"ml-5\" onClick={handleCloseEdit} type=\"submit\" variant=\"primary\">\r\n                        Close\r\n                    </Button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CarouselComp","import axios from \"axios\";\r\nimport { API } from '../utils/config';\r\n\r\nexport const addPaymentMethod = (token, addBanner) => {\r\n    return axios.post(`${API}paymentMethod`, addBanner, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const findAllPaymentMethod = () => {\r\n    return axios.get(`${API}paymentMethod`)\r\n}\r\n\r\nexport const deletePaymentMethod = (token, id) => {\r\n    return axios.delete(`${API}paymentMethod/delete/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const editPaymentMethod = (token, id, formData) => {\r\n    return axios.put(`${API}paymentMethod/${id}`, formData, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { userInfo } from \"../../../utils/auth\";\r\nimport { addPaymentMethod } from \"../../../Api/paymentMethod\";\r\nimport { notify } from '../../../utils/notification'\r\n\r\nconst PaymentMethod = () => {\r\n    const [addMethod, setAddMethod] = useState({\r\n        name: '',\r\n        number: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled:false\r\n    })\r\n\r\n    const { success, alert,disabled } = values;\r\n    const { name, number, formData } = addMethod\r\n\r\n\r\n    useEffect(() => {\r\n        setAddMethod({\r\n            ...addMethod,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAddMethod({\r\n            ...addMethod,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({\r\n            ...values,\r\n            disabled:true\r\n        })\r\n        setAddMethod({\r\n            ...addMethod\r\n        })\r\n        const { token } = userInfo();\r\n        addPaymentMethod(token, formData)\r\n            .then(response => {\r\n                setAddMethod({\r\n                    name: '',\r\n                    number: '',\r\n                    success: true,\r\n                })\r\n                notify(\"Payment Method Added Successfully!\")\r\n                setValues({\r\n                    ...values,\r\n                    disabled:false\r\n                })\r\n                e.target.reset();\r\n                setAddMethod({\r\n                    formData: new FormData()\r\n                })\r\n                \r\n            })\r\n            .catch(err => {\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(`${errMsg}`)\r\n                setValues({\r\n                    ...values,\r\n                    disabled:false\r\n                })\r\n                e.target.reset();\r\n                setAddMethod({\r\n                    formData: new FormData()\r\n                })\r\n            })\r\n    }\r\n\r\n   \r\n    const addForm = () => (\r\n        <>\r\n            <div>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Header>Add Payment Method</Card.Header>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Payment Method Name</Form.Label>\r\n                                        <Form.Control type=\"name\" placeholder=\"Payment Method Name\" name='name' value={name} onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Number</Form.Label>\r\n                                        <Form.Control type=\"name\" placeholder=\"Number\" name='number' value={number} onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                        <Form.Label>Default file input example</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\" disabled={disabled}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {addForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentMethod;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Button, Form, Modal, Table, Row, Col } from \"react-bootstrap\";\r\nimport { userInfo } from \"../../../utils/auth\";\r\nimport { deletePaymentMethod, findAllPaymentMethod, editPaymentMethod } from \"../../../Api/paymentMethod\";\r\nimport { API } from \"../../../utils/config\";\r\nimport { AiOutlineDelete, AiOutlineEdit } from \"react-icons/ai\";\r\nimport { notify } from \"../../../utils/notification\";\r\n\r\nconst PaymentMethod = () => {\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [banner, setBanner] = useState([])\r\n    const [remove, setRemove] = useState(false);\r\n    const [ids, setId] = useState('')\r\n    const [edit, setEdit] = useState(false);\r\n    const [editId, setEditIds] = useState('')\r\n    const { token } = userInfo();\r\n\r\n    const [editMethod, setEditMethod] = useState({\r\n        name: '',\r\n        number: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false,\r\n    })\r\n    const { success, alert, disabled } = values;\r\n    const { name, number, formData } = editMethod\r\n\r\n    useEffect(() => {\r\n        setEditMethod({\r\n            ...editMethod,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        findAllPaymentMethod()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setBanner(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [banner]);\r\n\r\n\r\n    const handleShowDelete = (id) => () => {\r\n        setRemove(true)\r\n        setId(id)\r\n    };\r\n\r\n\r\n    const handleCloseDelete = () => {\r\n        setRemove(false)\r\n    }\r\n\r\n    const handleCloseEdit = () => {\r\n        setEdit(false)\r\n    }\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setEditMethod({\r\n            ...editMethod,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        deletePaymentMethod(token, ids)\r\n            .then(response => notify('Payment method Deleted Successfully'))\r\n            .catch(err => notify('Something Failed! Please try again'))\r\n    }\r\n\r\n\r\n    const handleShowEdit = (id) => () => {\r\n        setEdit(true)\r\n        setEditIds(id)\r\n    }\r\n\r\n\r\n    const handleSubmitEdit = (e) => {\r\n        e.preventDefault();\r\n        setEditMethod({\r\n            ...editMethod\r\n        })\r\n        setValues({\r\n            disabled: true\r\n        })\r\n        const { token } = userInfo();\r\n        editPaymentMethod(token, editId, formData)\r\n            .then(response => {\r\n                setEditMethod({\r\n                    name: '',\r\n                    number: '',\r\n                    success: true,\r\n                })\r\n                notify(\"Payment Method Updated!\")\r\n                setValues({\r\n                    disabled: false\r\n                })\r\n                setEditMethod({\r\n                    formData: new FormData()\r\n                })\r\n                handleCloseEdit()\r\n            })\r\n            .catch(err => {\r\n                console.log(\"err\", err)\r\n                notify(\"Something wrong!\")\r\n                setValues({\r\n                    disabled: false\r\n                })\r\n                setEditMethod({\r\n                    formData: new FormData()\r\n                })\r\n                handleCloseEdit()\r\n            })\r\n    }\r\n\r\n\r\n    const addForm = () => (\r\n        <>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th style={{ width: \"10%\" }}>Image</th>\r\n                        <th>Payment Method Name</th>\r\n                        <th>Number</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {banner && banner.filter(filteredData => filteredData.disabled === false).map((data, index) => (\r\n                        <Fragment key={index}>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td><img src={`${API}${data.image}`} alt=\"banner\" /></td>\r\n                                <td>{data.name}</td>\r\n                                <td>{data.number}</td>\r\n                                <td><Button variant=\"light\">\r\n                                    <AiOutlineEdit onClick={handleShowEdit(data._id)} size={24} />\r\n                                </Button></td>\r\n                                <td><Button><AiOutlineDelete onClick={handleShowDelete(data._id)}\r\n                                    size={24} /></Button>\r\n                                </td>\r\n                            </tr>\r\n                        </Fragment>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </Table>\r\n            <Modal show={remove} onHide={handleCloseDelete}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Delete Item</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => handleSubmit(e)}>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <Form.Label>Do you want to delete this item? </Form.Label>\r\n                            <Button type=\"submit\" variant=\"primary\" onClick={handleCloseDelete}>\r\n                                Yes Delete\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal show={edit} onHide={handleCloseEdit}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit Payment Method</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <Form.Label>\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                            <Form.Label>Payment Method Name</Form.Label>\r\n                                            <Form.Control type=\"name\" placeholder=\"Payment Method Name\" name='name' value={name} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                            <Form.Label>Number</Form.Label>\r\n                                            <Form.Control type=\"name\" placeholder=\"Number\" name='number' value={number} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                            <Form.Label>Default file input example</Form.Label>\r\n                                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                            </Form>\r\n                        </Form.Label>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Form onSubmit={e => handleSubmitEdit(e)}>\r\n                        <Button type=\"submit\" variant=\"primary\"  disabled={disabled}>\r\n                            Update product\r\n                        </Button>\r\n                    </Form>\r\n                    <Button className=\"ml-5\" onClick={handleCloseEdit} type=\"submit\" variant=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {addForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentMethod;","import axios from \"axios\";\r\nimport {API} from \"../utils/config\";\r\n\r\nexport const addPopUpBanner = (token, addProduct) => {\r\n\r\n    // const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${API}popUpBanner`, addProduct, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const findPopUpBanner = () => {\r\n    return axios.get(`${API}popUpBanner/61deb99e0255c919c3eab429`)\r\n}\r\n\r\nexport const updatePopBanner = (updateProductss) => {\r\n    console.log(updateProductss)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}popUpBanner/61deb99e0255c919c3eab429`, updateProductss, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, ButtonGroup, Card, Col, Form, Row, ToggleButton } from \"react-bootstrap\";\r\nimport { userInfo } from \"../../../utils/auth\";\r\nimport { notify } from '../../../utils/notification'\r\nimport { findPopUpBanner, updatePopBanner } from \"../../../Api/poupbanner\";\r\nimport { API } from \"../../../utils/config\";\r\nimport moment from 'moment-timezone';\r\nmoment.tz.setDefault('Asia/Dhaka');\r\n\r\nconst radios = [\r\n    { name: 'InActive', value: 'inActive' },\r\n    { name: 'Active', value: 'active' },\r\n];\r\nconst PaymentMethod = () => {\r\n    const [addMethod, setAddMethod] = useState({\r\n        text: '',\r\n        link: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [getImage, SetGetImage] = useState({\r\n        image: ''\r\n    })\r\n\r\n    let id = getImage._id\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false,\r\n    })\r\n\r\n    const { success, alert, disabled } = values;\r\n    const { formData } = addMethod\r\n\r\n    useEffect(() => {\r\n        setAddMethod({\r\n            ...addMethod,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        findPopUpBanner()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                SetGetImage(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [getImage]);\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAddMethod({\r\n            ...addMethod,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({\r\n            ...values,\r\n            disabled: true\r\n        })\r\n        setAddMethod({\r\n            ...addMethod\r\n        })\r\n        const { token } = userInfo();\r\n        updatePopBanner(formData)\r\n            .then(response => {\r\n                setValues({\r\n                    ...values,\r\n                    disabled: false\r\n                })\r\n                setAddMethod({\r\n                    success: true,\r\n                })\r\n                notify(\"Popup Banner changed successfully!\")\r\n                \r\n                setAddMethod({\r\n                    formData: new FormData()\r\n                })\r\n                e.target.reset()\r\n            })\r\n            .catch(err => {\r\n                setValues({\r\n                    ...values,\r\n                    disabled: false\r\n                })\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(errMsg)\r\n                e.target.reset();\r\n                setAddMethod({\r\n                    formData: new FormData()\r\n                })\r\n            })\r\n    }\r\n\r\n    \r\n\r\n    function changeActiveStatus(value) {\r\n        const updateData = {\r\n            activeStatus: value\r\n        }\r\n        updatePopBanner(updateData).then(res => console.log(res))\r\n    }\r\n\r\n    const addForm = () => (\r\n        <>\r\n            <div>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Header>Add Popup banner</Card.Header>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                        <Form.Label>Upload popup banner</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                                        <Form.Label>Add Text</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"text\" onChange={handleChange} placeholder=\"Add popup banner text\" />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                                        <Form.Label>Add Link</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"link\" onChange={handleChange} placeholder=\"Add a link\" />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div><ButtonGroup>\r\n                                        {radios.map((radio, idx) => (\r\n                                            <ToggleButton\r\n                                                key={idx}\r\n                                                id={`radio-${idx}`}\r\n                                                type=\"radio\"\r\n                                                variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n                                                name=\"radio\"\r\n                                                value={radio.value}\r\n                                                checked={getImage.activeStatus === radio.value}\r\n                                                onChange={(e) => changeActiveStatus(e.currentTarget.value)}\r\n                                            >\r\n                                                {radio.name}\r\n                                            </ToggleButton>\r\n                                        ))}\r\n                                    </ButtonGroup></div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <img width=\"20%\" src={`${API}${getImage.image}`} alt=\"banner\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Button variant=\"primary\" type=\"submit\" disabled={disabled}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {addForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentMethod;","import React, {useEffect, useState} from \"react\";\r\nimport {Col, Card, Form, Row} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getOneProduct, updateProductss, addItems, itemDelete, updateItem, updateImage} from \"../../Api/products\";\r\nimport {notify} from '../../utils/notification'\r\nimport {Alert} from \"antd\";\r\nimport {\r\n    Box,\r\n    Chip,\r\n    TextField,\r\n    Typography,\r\n    Button,\r\n    Grid, Input, FormControlLabel,\r\n} from \"@mui/material\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nlet formData;\r\nimport Switch from '@mui/material/Switch';\r\nimport {styled} from '@mui/material/styles';\r\nimport Badge from \"@mui/material/Badge\";\r\n\r\n\r\nconst Android12Switch = styled(Switch)(({theme}) => ({\r\n    padding: 8,\r\n    marginRight: 20,\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 22 / 2,\r\n        '&:before, &:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            top: '50%',\r\n            transform: 'translateY(-50%)',\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        '&:before': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n            left: 12,\r\n        },\r\n        '&:after': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n            right: 12,\r\n        },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: 'none',\r\n        width: 16,\r\n        height: 16,\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nconst category = [\r\n    {\r\n        _id: \"0\",\r\n        categoryNames: \"\"\r\n    },\r\n    {\r\n        _id: \"1\",\r\n        categoryNames: \"(InGame)\"\r\n    },\r\n    {\r\n        _id: \"2\",\r\n        categoryNames: \"(IDCode)\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        categoryNames: \"(Offer)\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        categoryNames: \"(Subsc)\"\r\n    }\r\n\r\n]\r\n\r\nconst ProductUpdate = ({id}) => {\r\n\r\n    let [inputLists, setInputLists] = useState([{}]);\r\n    const [inputList, setInputList] = useState([{\r\n        option: \"\",\r\n        price: \"\"\r\n    }]);\r\n    const {option, price} = inputList;\r\n\r\n    const [updateProduct, setUpdateProduct] = useState({\r\n        gameName: '',\r\n        categoryName: '',\r\n        backUpLink: '',\r\n        image: '',\r\n        details: [],\r\n        topUp: [],\r\n        //formData: '',\r\n    });\r\n    const [stocks, setStocks] = useState(true)\r\n    //let { formData } = updateProduct;\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false\r\n    })\r\n\r\n    const {success, alert, disabled} = values;\r\n\r\n    useEffect(() => {\r\n        formData = new FormData()\r\n        // setUpdateProduct({\r\n        //     ...updateProduct,\r\n        //     formData: new FormData()\r\n        // })\r\n    }, []);\r\n\r\n\r\n    // const handleDetailChange = (e, index) => {\r\n    //     const {name, value} = e.target\r\n    //     const list = [...detailsList];\r\n    //     list[index][name] = value;\r\n    //     setDetailsList(list)\r\n    //     setUpdateProduct({\r\n    //         ...updateProduct,\r\n    //         details: detailsList\r\n    //     })\r\n    //     formData.set(\"details\", JSON.stringify(details))\r\n    //\r\n    // }\r\n    // const handleInputChange = (e, index) => {\r\n    //     const {name, value} = e.target;\r\n    //     const list = [...inputList];\r\n    //     list[index][name] = value;\r\n    //     setInputList(list);\r\n    //     setUpdateProduct({\r\n    //         ...updateProduct,\r\n    //         topUp: inputList\r\n    //     })\r\n    //\r\n    //     let prePackage = [];\r\n    //     for (let i = 0; i < inputLists.length; i++) {\r\n    //         prePackage.push({\"option\": inputLists[i].option, \"price\": inputLists[i].price})\r\n    //     }\r\n    //     Array.prototype.push.apply(topUp, prePackage);\r\n    //     formData.set(\"topUp\", JSON.stringify(topUp))\r\n    // };\r\n    const [image, setImage] = useState({})\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files.length) {\r\n            setImage({\r\n                preview: URL.createObjectURL(e.target.files[0]),\r\n                raw: e.target.files[0],\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(async () => {\r\n        await getOneProduct(id)\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setUpdateProduct(allData)\r\n                setInputLists(allData.topUp)\r\n                setProductInfo('gameName', `${allData.gameName}`)\r\n                setProductInfo('categoryName', `${allData.categoryName}`)\r\n                setProductInfo('backUpLink', `${allData.backUpLink}`)\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n    const handleDelete = (index) => async () => {\r\n        await itemDelete(id, index).then(r => {\r\n            console.log(r.data)\r\n            setInputLists(r.data)\r\n            notify(\"deleted successfully\")\r\n        })\r\n    };\r\n\r\n    const [show, setShow] = useState(false)\r\n    //\r\n    const [item, setItem] = useState({})\r\n\r\n\r\n    const {\r\n        register: getItem,\r\n        handleSubmit: submitItem,\r\n        setValue: setItemValue,\r\n        reset: resetItem,\r\n        formState: {errors: errorItem}\r\n    } = useForm();\r\n    const {\r\n        register: getNewItem,\r\n        handleSubmit: submitNewItem,\r\n        setValue: setNewItemValue,\r\n        reset: resetNewItem,\r\n        formState: {errors: errorNewItem}\r\n    } = useForm();\r\n    const {\r\n        register: productInfo,\r\n        handleSubmit: submitProductInfo,\r\n        setValue: setProductInfo,\r\n        reset: resetProductInfo,\r\n        formState: {errors: errorProductInfo}\r\n    } = useForm();\r\n\r\n    function handleClick(option, price, stock, index) {\r\n        setItem({\r\n            id: index,\r\n            option: option,\r\n            price: price,\r\n            stock: stock\r\n        })\r\n        setShow(true)\r\n        setStocks(stock)\r\n        setItemValue(\"option\", `${option}`)\r\n        setItemValue(\"price\", `${price}`)\r\n        setItemValue(\"stock\", `${stock}`)\r\n    }\r\n\r\n    const stockFilter = (data) => {\r\n        if (data) {\r\n            return (<>In Stock</>)\r\n        } else {\r\n            return (<>Stock Out</>)\r\n        }\r\n    }\r\n\r\n    async function submitItemData(data) {\r\n        const submitData = {\r\n            topUpId: item.id,\r\n            option: data.option,\r\n            price: data.price,\r\n            stock : data.stock\r\n        }\r\n\r\n        console.log(submitData)\r\n        await updateItem(id, submitData).then(r => {\r\n\r\n            setInputLists(r.data),\r\n                notify(\"updated successfully\")\r\n        })\r\n        resetItem({option: \"\"})\r\n        resetItem({price: \"\"})\r\n        resetItem({stock: \"\"})\r\n        setShow(false)\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        if (success) return (<>\r\n            <Redirect to='/admin/product'/>\r\n            <Alert message=\"Product updated\" type=\"success\"/>\r\n        </>)\r\n    }\r\n\r\n    function addItem(data) {\r\n        const addData = {\r\n            id: item._id,\r\n            option: data.option,\r\n            price: data.price,\r\n            stock: data.stock\r\n        }\r\n        addItems(id, addData).then(r => {\r\n            setInputLists(r.data),\r\n                notify(\"added successfully\")\r\n        })\r\n\r\n    }\r\n\r\n    async function submitInfo(data) {\r\n        await updateProductss(id, data).then(r => {\r\n            notify(\"updated successfully\")\r\n        })\r\n    }\r\n\r\n    const photoUpdate = () => {\r\n        formData.set(\"image\", image.raw)\r\n        updateImage(id, formData)\r\n            .then(r => {\r\n                notify(\"Photo updated!\")\r\n            })\r\n    }\r\n\r\n    function updateForm() {\r\n        return (\r\n            <>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Update & Delete Product Item</Card.Title>\r\n                        <Form.Label>Change Image</Form.Label>\r\n\r\n                        <form onSubmit={submitProductInfo(submitInfo)}>\r\n                            <div>\r\n                                <label htmlFor=\"contained-button-file\">\r\n                                    <Input accept=\"image/*\" id=\"contained-button-file\" type=\"file\"\r\n                                           onChange={e => handleChange(e)}/>\r\n                                    <Button onClick={photoUpdate} style={{backgroundColor: \"#1565C0\", color: \"white\"}}>\r\n                                        Save Photo\r\n                                    </Button>\r\n                                </label>\r\n                            </div>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} md={6} xl={6}>\r\n                                    <Form.Label>Select Game</Form.Label>\r\n                                    <TextField id=\"outlined-basic\" size=\"small\"\r\n                                               style={{width: '100%'}}\r\n                                               variant=\"outlined\"\r\n                                               {...productInfo(\"gameName\")} />\r\n                                </Grid>\r\n                                <Grid item xs={12} md={6} xl={6}>\r\n                                    <Form.Label>Select Category</Form.Label>\r\n                                    <Form.Control as=\"select\" aria-label=\"Default select example\"\r\n                                                  name=\"categoryName\"\r\n                                                  {...productInfo(\"categoryName\")}>\r\n                                        <option>Select an account type</option>\r\n                                        {\r\n                                            category.map((data, index) => {\r\n                                                    return (\r\n                                                        <option key={index}>{data.categoryNames}</option>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Form.Label>Backup Link</Form.Label>\r\n                            <TextField id=\"outlined-basic\" size=\"small\"\r\n                                       style={{width: '100%', marginBottom: 10}}\r\n                                       variant=\"outlined\"\r\n                                       {...productInfo(\"backUpLink\")} />\r\n                            <Button type='submit' variant='outline'\r\n                                    style={{backgroundColor: \"#1565C0\", color: \"white\"}}> Update </Button>\r\n                        </form>\r\n\r\n                        <hr/>\r\n                        <Form.Label>\r\n                            Update & Delete Item\r\n                        </Form.Label>\r\n                        <div style={{display: \"flex\", flexWrap: 'wrap'}}>\r\n\r\n                            {inputLists?.map((x, index) => {\r\n                                return (\r\n                                    <Badge style={{marginRight: 30, marginTop: 15}} color=\"secondary\"\r\n                                           badgeContent={stockFilter(x.stock)}>\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            style={{marginTop: 10}}\r\n                                            label={`${x.option}  (${x.price} Taka)`}\r\n                                            onClick={e => handleClick(x.option, x.price, x.stock, x._id)}\r\n                                            onDelete={handleDelete(x._id)}\r\n                                            // avatar={}\r\n\r\n                                        />\r\n                                    </Badge>\r\n                                    // <Box>\r\n                                    //\r\n                                    //     {/*<FormControlLabel*/}\r\n                                    //     {/*    sx={{mt:2}}*/}\r\n                                    //     {/*    checked={x.stock}*/}\r\n                                    //     {/*    onClick={e=> setStocks(!x.stock) }*/}\r\n                                    //     {/*    name={x.stock}*/}\r\n                                    //     {/*    control={<Android12Switch defaultChecked />}*/}\r\n                                    //     {/*    label=''/>*/}\r\n                                    // </Box>\r\n\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div style={{marginTop: 10, marginBottom: 10}}>\r\n                            {\r\n                                show && (\r\n                                    <form onSubmit={submitItem(submitItemData)}>\r\n                                        <Typography>\r\n                                            Update Product\r\n                                        </Typography>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item>\r\n                                                <TextField size=\"small\"\r\n                                                           style={{width: '100%', marginTop: 10}} label=\"Option\"\r\n\r\n                                                           variant=\"outlined\" {...getItem(\"option\")} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <TextField size=\"small\"\r\n\r\n                                                           style={{width: '100%', marginTop: 10}} label=\"Price\"\r\n                                                           variant=\"outlined\" {...getItem(\"price\")}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                                    <FormControlLabel\r\n                                                        //onClick={e=>setChecks(!check)}\r\n                                                        //onChange={e => handleInputChange(e, i)}\r\n                                                        name=\"stock\"\r\n                                                        {...getItem(\"stock\")}\r\n                                                        checked={stocks}\r\n                                                        onClick={e => setStocks(!stocks)}\r\n                                                        control={<Android12Switch defaultChecked/>}\r\n                                                        label=\"\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Box style={{\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: 'center',\r\n                                                    marginTop: 10\r\n                                                }}>\r\n                                                    <Button variant=\"outlined\" style={{marginRight: 5}}\r\n                                                            type='submit'>\r\n                                                        update\r\n                                                    </Button>\r\n                                                    <Button variant=\"outlined\" onClick={e => setShow(false)}>\r\n                                                        cancel\r\n                                                    </Button>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n\r\n                                    </form>\r\n                                )\r\n                            }\r\n\r\n                        </div>\r\n                        <form onSubmit={submitNewItem(addItem)}>\r\n                            <hr/>\r\n                            <Form.Label>\r\n                                Add new Item\r\n                            </Form.Label>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item> <TextField size=\"small\"\r\n                                                       style={{width: '100%', marginTop: 10}} label=\"Option\"\r\n                                                       variant=\"outlined\" {...getNewItem(\"option\")} /></Grid>\r\n                                <Grid item> <TextField size=\"small\"\r\n                                                       style={{width: '100%', marginTop: 10}} label=\"Price\"\r\n                                                       variant=\"outlined\" {...getNewItem(\"price\")} /></Grid>\r\n                                <Grid item>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                        <FormControlLabel\r\n                                            //onClick={e=>setChecks(!check)}\r\n                                            //onChange={e => handleInputChange(e, i)}\r\n                                            name=\"stock\"\r\n                                            {...getNewItem(\"stock\")}\r\n                                            checked={stocks}\r\n                                            onClick={e => setStocks(!stocks)}\r\n                                            control={<Android12Switch defaultChecked/>}\r\n                                            label=\"\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Grid>\r\n                                <Grid item><Button type='submit' style={{width: '100%', marginTop: 10}}\r\n                                                   variant=\"outlined\">Add Item</Button></Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {updateForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductUpdate;","import React, { useEffect, useState } from \"react\";\r\nimport { adminProfile } from \"../Api/userAdmin\";\r\nimport { getAllProducts, filterAdminProduct } from \"../Api/products\";\r\nimport { updateUserActiveStatus, addProduct, deleteProduct } from \"../Api/user\";\r\nimport { Button, Select, Radio, Card } from \"antd\";\r\nimport { getOrdersByAdminId, updateOrderStatus, markAllComplete } from '../Api/order'\r\nimport { userInfo } from '../utils/auth';\r\nimport { ButtonGroup, Col, Form, Row, ToggleButton, Table, Alert, Modal } from \"react-bootstrap\";\r\nimport { createNotifications } from '../Api/notification'\r\nimport { notify } from '../utils/notification'\r\nimport { AiOutlineDelete, } from \"react-icons/ai\";\r\nimport { addSpentAmount, removeSpentAmount } from '../Api/wallet';\r\nimport Tablessss from './inGameOrderTable';\r\nimport Tables from './idCodeOrderTable';\r\nimport Tabless from './cancelInGameOrderTable';\r\nimport Tablesss from './cancelIdcodeOrderTable';\r\nimport Tablesssss from './offerOrderTable';\r\nimport Tablessssss from './subscOrderTable';\r\nimport Tablesssssss from './cancelOfferOrderTable';\r\nimport Tablessssssss from './cancelSubscOrderTable';\r\nimport Pagination from \"./Pagination\";\r\nlet orderId, orderUser, game_name, category_name, game_option, game_price, message, paymentStatus;\r\nlet search = false;\r\nlet inGameTable = false, idCodeTable = false, offerTable = false, subscTable = false;\r\nlet totalIngame, totalIngameCancel, totalIdcode, totalIdcodeCancel, totalOffer, totalOfferCancel, totalSubsc, totalSubscCancel, filterFunctionActive = false, srchTerm;\r\nlet buttonAllActive = false, mark = false;\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction TabPanels(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanels.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yPropss(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst OrderHandle = () => {\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChanges = (event, newValue) => {\r\n        console.log(\"newValue\",newValue)\r\n        setValue(newValue);\r\n        localStorage.setItem(\"orderArray\", [])\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"orderArray\", [])\r\n    }, [])\r\n\r\n    const { token, id } = userInfo();\r\n    const [product, setProduct] = useState(false);\r\n    const [products, setProducts] = useState([]);\r\n    const [filteredProduct, setFilteredProduct] = useState([])\r\n    const [adminData, setAdminData] = useState([])\r\n    const [idCodeOrders, setIdCodeOrders] = useState([])\r\n    const [idCodeOrdersSearch, setIdCodeOrdersSearch] = useState([])\r\n    const [inGameOrders, setInGameOrders] = useState([])\r\n    const [inGameOrdersSearch, setInGameOrdersSearch] = useState([])\r\n    const [offerOrders, setOfferOrders] = useState([])\r\n    const [offerOrdersSearch, setOfferOrdersSearch] = useState([])\r\n    const [subscOrders, setSubscOrders] = useState([])\r\n    const [subscOrdersSearch, setSubscOrdersSearch] = useState([])\r\n    const [cancelledOrdersInGame, setCancelledOrdersInGame] = useState([])\r\n    const [cancelledOrdersIdCode, setCancelledOrdersIdCode] = useState([])\r\n    const [cancelledOrdersOffer, setCancelledOrdersOffer] = useState([])\r\n    const [cancelledOrdersSubsc, setCancelledOrdersSubsc] = useState([])\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    const rowSelectForIngameTable = (e) => {\r\n        setPostsPerPage(e.target.value)\r\n    }\r\n    const rowSelectForIdcodeTable = (e) => {\r\n        setPostsPerPages(e.target.value)\r\n    }\r\n    const rowSelectForOfferTable = (e) => {\r\n        setPostsPerPagessss(e.target.value)\r\n    }\r\n    const rowSelectForSubscTable = (e) => {\r\n        setPostsPerPagesssss(e.target.value)\r\n    }\r\n    const rowSelectForCancelIngameTable = (e) => {\r\n        setPostsPerPagess(e.target.value)\r\n    }\r\n    const rowSelectForCancelIdcodeTable = (e) => {\r\n        setPostsPerPagesss(e.target.value)\r\n    }\r\n    const rowSelectForCancelOfferTable = (e) => {\r\n        setPostsPerPagessssss(e.target.value)\r\n    }\r\n    const rowSelectForCancelSubscTable = (e) => {\r\n        setPostsPerPagesssssss(e.target.value)\r\n    }\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(10);\r\n    const [currentPages, setCurrentPages] = useState(1);\r\n    const [postsPerPages, setPostsPerPages] = useState(10);\r\n    const [currentPagess, setCurrentPagess] = useState(1);\r\n    const [postsPerPagess, setPostsPerPagess] = useState(10);\r\n    const [currentPagesss, setCurrentPagesss] = useState(1);\r\n    const [postsPerPagesss, setPostsPerPagesss] = useState(10);\r\n    const [currentPagessss, setCurrentPagessss] = useState(1);\r\n    const [postsPerPagessss, setPostsPerPagessss] = useState(10);\r\n    const [currentPagesssss, setCurrentPagesssss] = useState(1);\r\n    const [postsPerPagesssss, setPostsPerPagesssss] = useState(10);\r\n    const [currentPagessssss, setCurrentPagessssss] = useState(1);\r\n    const [postsPerPagessssss, setPostsPerPagessssss] = useState(10);\r\n    const [currentPagesssssss, setCurrentPagesssssss] = useState(1);\r\n    const [postsPerPagesssssss, setPostsPerPagesssssss] = useState(10);\r\n\r\n\r\n    const radios = [\r\n        { name: 'InActive', value: 'inActive' },\r\n        { name: 'Active', value: 'active' },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"orderArray\", [])\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        adminProfile()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setAdminData(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [adminData]);\r\n\r\n\r\n    const [productsId, setProductsId] = useState([]);\r\n    const [productId, setProductId] = useState({});\r\n\r\n    useEffect(() => {\r\n        getAllProducts()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setProduct(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        filterAdminProduct(id)\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setFilteredProduct(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [filteredProduct]);\r\n\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelIdcode = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(IDCode)')\r\n                setCancelledOrdersIdCode(cancelIdcode)\r\n                totalIdcodeCancel = cancelIdcode.length\r\n                const cancelIngame = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(InGame)')\r\n                setCancelledOrdersInGame(cancelIngame)\r\n                totalIngameCancel = cancelIngame.length\r\n                const cancelOffer = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Offer)')\r\n                setCancelledOrdersOffer(cancelOffer)\r\n                totalOfferCancel = cancelOffer.length\r\n                const cancelSubsc = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Subsc)')\r\n                setCancelledOrdersSubsc(cancelSubsc)\r\n                totalSubscCancel = cancelSubsc.length\r\n            })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const igame = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(InGame)')\r\n                setInGameOrders(igame)\r\n                totalIngame = igame.length\r\n            })\r\n    }, [inGameOrders]);\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const idcode = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(IDCode)')\r\n                setIdCodeOrders(idcode)\r\n                totalIdcode = idcode.length\r\n            })\r\n    }, [idCodeOrders]);\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const offer = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Offer)')\r\n                setOfferOrders(offer)\r\n                totalOffer = offer.length\r\n            })\r\n    }, [offerOrders]);\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const subsc = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Subsc)')\r\n                setSubscOrders(subsc)\r\n                totalSubsc = subsc.length\r\n            })\r\n    }, [subscOrders]);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = inGameOrders.slice(indexOfFirstPost, indexOfLastPost);\r\n    const currentPostSearch = inGameOrdersSearch.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const indexOfLastPosts = currentPages * postsPerPages;\r\n    const indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n    const currentPosts = idCodeOrders.slice(indexOfFirstPosts, indexOfLastPosts);\r\n    const currentPostsSearch = idCodeOrdersSearch.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n    const indexOfLastPostss = currentPagess * postsPerPagess;\r\n    const indexOfFirstPostss = indexOfLastPostss - postsPerPagess;\r\n    const currentPostss = cancelledOrdersInGame.slice(indexOfFirstPostss, indexOfLastPostss);\r\n\r\n    const indexOfLastPostsss = currentPagesss * postsPerPagesss;\r\n    const indexOfFirstPostsss = indexOfLastPostsss - postsPerPagesss;\r\n    const currentPostsss = cancelledOrdersIdCode.slice(indexOfFirstPostsss, indexOfLastPostsss);\r\n\r\n    const indexOfLastPostssss = currentPagessss * postsPerPagessss;\r\n    const indexOfFirstPostssss = indexOfLastPostssss - postsPerPagessss;\r\n    const currentPostssss = offerOrders.slice(indexOfFirstPostssss, indexOfLastPostssss);\r\n    const currentPostssSearch = offerOrdersSearch.slice(indexOfFirstPostssss, indexOfLastPostssss);\r\n\r\n    const indexOfLastPostsssss = currentPagesssss * postsPerPagesssss;\r\n    const indexOfFirstPostsssss = indexOfLastPostsssss - postsPerPagesssss;\r\n    const currentPostsssss = subscOrders.slice(indexOfFirstPostsssss, indexOfLastPostsssss);\r\n    const currentPostsssSearch = subscOrdersSearch.slice(indexOfFirstPostsssss, indexOfLastPostsssss);\r\n\r\n    const indexOfLastPostssssss = currentPagessssss * postsPerPagessssss;\r\n    const indexOfFirstPostssssss = indexOfLastPostssssss - postsPerPagessssss;\r\n    const currentPostssssss = cancelledOrdersOffer.slice(indexOfFirstPostssssss, indexOfLastPostssssss);\r\n\r\n\r\n    const indexOfLastPostsssssss = currentPagesssssss * postsPerPagesssssss;\r\n    const indexOfFirstPostsssssss = indexOfLastPostsssssss - postsPerPagesssssss;\r\n    const currentPostsssssss = cancelledOrdersSubsc.slice(indexOfFirstPostsssssss, indexOfLastPostsssssss);\r\n\r\n\r\n    const [ingame, setIngame] = useState(0);\r\n    const [idcode, setIdcode] = useState(0);\r\n    const [offer, setOffer] = useState(0);\r\n    const [subsc, setSubsc] = useState(0);\r\n    const [ingameCancel, setIngameCancel] = useState(0);\r\n    const [idcodeCancel, setIdcodeCancel] = useState(0);\r\n    const [offerCancel, setOfferCancel] = useState(0);\r\n    const [subscCancel, setSubscCancel] = useState(0);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber)\r\n        setIngame(pageNumber)\r\n    };\r\n    const paginates = pageNumber => {\r\n        setCurrentPages(pageNumber)\r\n        setIdcode(pageNumber)\r\n    };\r\n    const paginatess = pageNumber => {\r\n        setCurrentPagess(pageNumber)\r\n        setIngameCancel(pageNumber)\r\n    };\r\n    const paginatesss = pageNumber => {\r\n        setCurrentPagesss(pageNumber)\r\n        setIdcodeCancel(pageNumber)\r\n    };\r\n    const paginatessss = pageNumber => {\r\n        setCurrentPagessss(pageNumber)\r\n        setOffer(pageNumber)\r\n    };\r\n    const paginatesssss = pageNumber => {\r\n        setCurrentPagesssss(pageNumber)\r\n        setSubsc(pageNumber)\r\n    };\r\n    const paginatessssss = pageNumber => {\r\n        setCurrentPagessssss(pageNumber)\r\n        setOfferCancel(pageNumber)\r\n    };\r\n    const paginatesssssss = pageNumber => {\r\n        setCurrentPagesssssss(pageNumber)\r\n        setSubscCancel(pageNumber)\r\n    };\r\n\r\n\r\n\r\n    const findInGameOrder = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const igame = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(InGame)')\r\n                setInGameOrders(igame)\r\n            })\r\n    }\r\n\r\n    const findIdCodeOrder = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const idcode = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(IDCode)')\r\n                setIdCodeOrders(idcode)\r\n            })\r\n    }\r\n\r\n    const findOfferOrder = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const offer = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Offer)')\r\n                setOfferOrders(offer)\r\n            })\r\n    }\r\n\r\n    const findSubscOrder = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const subsc = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Subsc)')\r\n                setSubscOrders(subsc)\r\n            })\r\n    }\r\n\r\n    const findInGameOrderCancel = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelIngame = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(InGame)')\r\n                setCancelledOrdersInGame(cancelIngame)\r\n            })\r\n    }\r\n\r\n    const findIdCodeOrderCancel = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelIdcode = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(IDCode)')\r\n                setCancelledOrdersIdCode(cancelIdcode)\r\n            })\r\n    }\r\n\r\n    const findOfferOrderCancel = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelOffer = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Offer)')\r\n                setCancelledOrdersOffer(cancelOffer)\r\n            })\r\n    }\r\n\r\n    const findSubscOrderCancel = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelSubsc = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Subsc)')\r\n                setCancelledOrdersSubsc(cancelSubsc)\r\n            })\r\n    }\r\n\r\n\r\n    const changeActiveStatus = value => {\r\n        updateUserActiveStatus(value)\r\n            .catch(err => notify('Something wrong! please try again'))\r\n    }\r\n\r\n    const [disabledButton, setDisabledButton] = useState({\r\n        disabled: false,\r\n    });\r\n\r\n    const { disabled } = disabledButton\r\n\r\n\r\n    async function handleChange(selectedId) {\r\n        productId[\"productList\"] = selectedId\r\n    }\r\n\r\n    function handleSubmit() {\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        productsId.push(productId)\r\n        addProduct(token, productsId)\r\n            .then(res => {\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n                notify('Category added successfully')\r\n            })\r\n            .catch(err => {\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n                notify('Something Failed! Please try again')\r\n            })\r\n    }\r\n\r\n    const categotyDelete = (productId, categoryName) => {\r\n        deleteProduct(productId)\r\n            .then(res => notify('Categoty removed!'))\r\n            .catch(err => notify('Something wrong!'))\r\n\r\n        if (categoryName === '(InGame)') {\r\n            setTimeout(() => { inGameTable = false }, 5000)\r\n        }\r\n        if (categoryName === '(IDCode)') {\r\n            setTimeout(() => { idCodeTable = false }, 5000)\r\n        }\r\n        if (categoryName === '(Offer)') {\r\n            setTimeout(() => { offerTable = false }, 5000)\r\n        }\r\n        if (categoryName === '(Subsc)') {\r\n            setTimeout(() => { subscTable = false }, 5000)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const searchOrder = (e) => {\r\n        let searchTerm = e.target.value\r\n        srchTerm = searchTerm\r\n        filterFunctionActive = true;\r\n        if (searchTerm === undefined) {\r\n            search = false\r\n            filterFunctionActive = true;\r\n        }\r\n        else {\r\n            search = true\r\n        }\r\n        getOrdersByAdminId(token, id)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    filterContent(res.data, searchTerm)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const filterContent = (orders, searchTerm) => {\r\n        const result = orders.filter((item) =>\r\n            item.userId?.email?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.userId?.username?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.userId?.phonenumber?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.orderId)).toString()).includes(searchTerm) ||\r\n            item.productId?.gameName?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.productId?.categoryName?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.product?.option?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.purchaseId?.product?.price)).toString()).includes(searchTerm) ||\r\n            item.purchaseId?.accountType?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.Number?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.Password?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.backupCode?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.idCode?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.userId?.userIdNo)).toString()).includes(searchTerm)\r\n        )\r\n\r\n        let value = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(InGame)')\r\n        setInGameOrdersSearch(value)\r\n\r\n        let value2 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(IDCode)')\r\n        setIdCodeOrdersSearch(value2)\r\n\r\n        let value3 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(InGame)')\r\n        setCancelledOrdersInGame(value3)\r\n\r\n        let value4 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(IDCode)')\r\n        setCancelledOrdersIdCode(value4)\r\n\r\n        let value5 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Offer)')\r\n        setOfferOrdersSearch(value5)\r\n\r\n        let value6 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Subsc)')\r\n        setSubscOrdersSearch(value6)\r\n\r\n        let value7 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Offer)')\r\n        setCancelledOrdersOffer(value7)\r\n\r\n        let value8 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Subsc)')\r\n        setCancelledOrdersSubsc(value8)\r\n    }\r\n\r\n    const makeActive = (id, user, game, category, product, price) => () => {\r\n        orderId = id;\r\n        orderUser = user;\r\n        game_name = game;\r\n        category_name = category;\r\n        game_option = product;\r\n        game_price = price;\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            reject: false,\r\n            rejectReason: null\r\n        }\r\n        updateOrderStatus(token, id, data)\r\n            .then(res => {\r\n                if (res.data === 'marked') {\r\n                    console.log(\"marked\")\r\n                }\r\n                else {\r\n                    removeSpentAmount(token, orderUser, game_price, orderId)\r\n                        .then(res => {\r\n                            createNotifications(token, orderUser, `Your order has been reactive for ${game_name}. Purchase Package: ${game_option} ${game_price} Taka`)\r\n                                .then(res => {\r\n                                    notify('Order reactive successfully!')\r\n                                    findInGameOrder()\r\n                                    findIdCodeOrder()\r\n                                    findOfferOrder()\r\n                                    findSubscOrder()\r\n                                    findInGameOrderCancel()\r\n                                    findIdCodeOrderCancel()\r\n                                    findOfferOrderCancel()\r\n                                    findSubscOrderCancel()\r\n                                    if (filterFunctionActive === true) {\r\n                                        filterOrder()\r\n                                    }\r\n                                    setDisabledButton({\r\n                                        disabled: false\r\n                                    })\r\n                                })\r\n                                .catch(res => {\r\n                                    notify('Something wrong! Please try again')\r\n                                    setDisabledButton({\r\n                                        disabled: false\r\n                                    })\r\n                                    findInGameOrder()\r\n                                    findIdCodeOrder()\r\n                                    findOfferOrder()\r\n                                    findSubscOrder()\r\n                                    findInGameOrderCancel()\r\n                                    findIdCodeOrderCancel()\r\n                                    findOfferOrderCancel()\r\n                                    findSubscOrderCancel()\r\n                                })\r\n                        })\r\n                }\r\n\r\n\r\n            })\r\n            .catch(res => {\r\n                notify('Something wrong! Please try again')\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n            })\r\n    }\r\n\r\n    const markComplete = (id, notificationId, phonenumber, gameName, categoryName, option, spent, walletId) => () => {\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            isComplete: true,\r\n            userId: notificationId,\r\n            paymentComplete: true\r\n        }\r\n        let sms = `Your order from Sizishop has been confirmed for ${gameName}. Purchase Package: ${option} ${spent} Taka`\r\n        let sendMessage = {\r\n            number: phonenumber,\r\n            message: sms.replaceAll(\" \", \"%20\")\r\n        }\r\n        updateOrderStatus(token, id, data)\r\n            .then(res => {\r\n                if (res.data === 'marked') {\r\n                    console.log(\"marked\")\r\n                }\r\n                else {\r\n                    const amount = 0\r\n                    notify('Order confirmed!')\r\n                    //sendMessageAPI(sendMessage)\r\n                    findInGameOrder()\r\n                    findIdCodeOrder()\r\n                    findOfferOrder()\r\n                    findSubscOrder()\r\n                    if (filterFunctionActive === true) {\r\n                        filterOrder()\r\n                    }\r\n                    createNotifications(token, notificationId, `Your order has been confirmed for ${gameName}. Purchase Package: ${option} ${spent} Taka. `)\r\n                        .then(res => {\r\n                            setDisabledButton({\r\n                                disabled: false\r\n                            })\r\n                        })\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n                notify('Something Failed! Please try again')\r\n            })\r\n\r\n    }\r\n\r\n    const modalOpen = (id, user, gameName, categoryName, option, price, complete) => () => {\r\n        handleShow()\r\n        orderId = id;\r\n        orderUser = user;\r\n        game_name = gameName;\r\n        category_name = categoryName;\r\n        game_option = option;\r\n        game_price = price;\r\n        paymentStatus = complete\r\n    }\r\n\r\n    const [note, setNote] = useState({\r\n        noteText: '',\r\n        disabled: false\r\n    });\r\n\r\n    const handleOnChange = e => {\r\n        setNote({\r\n            ...note,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        message = e.target.value\r\n    }\r\n\r\n    const createNote = () => {\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            reject: true,\r\n            message: `${message}`\r\n        }\r\n        updateOrderStatus(token, orderId, data)\r\n            .then(res => {\r\n                if (res.data === 'marked') {\r\n                    console.log(\"marked\")\r\n                }\r\n                else {\r\n                    addSpentAmount(token, orderUser, game_price, orderId)\r\n                        .then(res => {\r\n                            createNotifications(token, orderUser, `Your order has been cancelled for ${game_name} ${category_name}. Purchase Package: ${game_option}(${game_price}). Reason: ${message}`)\r\n                                .then(res => {\r\n                                    handleClose()\r\n                                    notify('Order cancelled')\r\n                                    findInGameOrder()\r\n                                    findIdCodeOrder()\r\n                                    findOfferOrder()\r\n                                    findSubscOrder()\r\n                                    findInGameOrderCancel()\r\n                                    findIdCodeOrderCancel()\r\n                                    findOfferOrderCancel()\r\n                                    findSubscOrderCancel()\r\n                                    if (filterFunctionActive === true) {\r\n                                        filterOrder()\r\n                                    }\r\n                                    setDisabledButton({\r\n                                        disabled: false\r\n                                    })\r\n                                })\r\n                                .catch(res => {\r\n                                    notify('Something wrong! Please try again')\r\n                                    findInGameOrder()\r\n                                    findIdCodeOrder()\r\n                                    findOfferOrder()\r\n                                    findSubscOrder()\r\n                                    findInGameOrderCancel()\r\n                                    findIdCodeOrderCancel()\r\n                                    findOfferOrderCancel()\r\n                                    findSubscOrderCancel()\r\n                                    setDisabledButton({\r\n                                        disabled: false\r\n                                    })\r\n                                })\r\n                        })\r\n                        .catch(res => {\r\n                            notify('Something wrong! Please try again')\r\n                            setDisabledButton({\r\n                                disabled: false\r\n                            })\r\n                            findInGameOrder()\r\n                            findIdCodeOrder()\r\n                            findOfferOrder()\r\n                            findSubscOrder()\r\n                            findInGameOrderCancel()\r\n                            findIdCodeOrderCancel()\r\n                            findOfferOrderCancel()\r\n                            findSubscOrderCancel()\r\n                        })\r\n                }\r\n\r\n            })\r\n            .catch(res => {\r\n                notify('Something wrong! Please try again')\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n            })\r\n    }\r\n\r\n    const filterOrder = async () => {\r\n        if (srchTerm !== undefined) {\r\n            await getOrdersByAdminId(token, id)\r\n                .then(res => {\r\n                    if (res.data) {\r\n                        filterContent(res.data, srchTerm)\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    if (localStorage.getItem('orderArray') != null) {\r\n        buttonAllActive = localStorage.getItem('orderArray').length !== 0;\r\n    }\r\n\r\n    if (!localStorage.getItem('orderArray')) {\r\n        buttonAllActive = false\r\n    }\r\n\r\n\r\n    const markAll = () => {\r\n        const myArray = localStorage.getItem('orderArray').split(\",\");\r\n        markAllComplete(token, myArray)\r\n            .then(res => {\r\n                localStorage.setItem(\"orderArray\", [])\r\n                notify(\"Order Confirmed!\")\r\n            })\r\n\r\n    }\r\n\r\n    let selectArray = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\r\n\r\n    return (\r\n        <>\r\n            <Alert variant=\"danger\">\r\n                Please turn off active status before leaving the admin panel\r\n            </Alert>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Body style={{ margin: \"30px 10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Why do you want to cancel this order?</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"noteText\" placeholder=\"Add a short note\" onChange={handleOnChange} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn btn-primary\" disabled={disabled} onClick={createNote}>\r\n                        Send\r\n                    </button>\r\n                    <button className=\"btn btn-primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n            <Card title={`Hello ${adminData.username}`} extra={<p href=\"#\">Pick A Category</p>} >\r\n                <Select\r\n                    mode=\"multiple\"\r\n                    allowClear\r\n                    style={{ width: '100%' }}\r\n                    placeholder=\"Please select\"\r\n                    onChange={e => handleChange(e)}\r\n                >\r\n                    {filteredProduct && filteredProduct.map((productData, index) => (\r\n                        <Select.Option key={index} value={productData._id} name='productId' >\r\n                            {productData.gameName}{productData.categoryName}\r\n                        </Select.Option>\r\n                    ))}\r\n\r\n                </Select>\r\n\r\n                <div className=\"pt-4 d-flex justify-content-center\">\r\n                    <Button type=\"primary\" onClick={handleSubmit} disabled={disabled}>\r\n                        Add Selected Items\r\n                    </Button>\r\n                </div>\r\n                <div className=\"pt-4 text-center\">\r\n                    <div className='text-center'><Form.Label>Active Order Status</Form.Label></div>\r\n                    <div><ButtonGroup>\r\n                        {radios.map((radio, idx) => (\r\n                            <ToggleButton\r\n                                key={idx}\r\n                                id={`radio-${idx}`}\r\n                                type=\"radio\"\r\n                                variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n                                name=\"radio\"\r\n                                value={radio.value}\r\n                                checked={adminData.activeStatus === radio.value}\r\n                                onChange={(e) => changeActiveStatus(e.currentTarget.value)}\r\n                            >\r\n                                {radio.name}\r\n                            </ToggleButton>\r\n                        ))}\r\n                    </ButtonGroup></div>\r\n                </div>\r\n            </Card>\r\n            <br />\r\n\r\n            <Card title={`Your Category`}>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th className=\"border-0\">Your Category</th>\r\n                            <th className=\"border-0\" />\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {adminData.productList && adminData.productList.map((productId, index) => {\r\n                            if (product) {\r\n                                for (var i = 0; i < product.length; i++) {\r\n                                    if (product[i]._id === productId) {\r\n                                        if (product[i].categoryName === '(InGame)') {\r\n                                            inGameTable = true\r\n                                        }\r\n                                        if (product[i].categoryName === '(IDCode)') {\r\n                                            idCodeTable = true\r\n                                        }\r\n                                        if (product[i].categoryName === '(Offer)') {\r\n                                            offerTable = true\r\n                                        }\r\n                                        if (product[i].categoryName === '(Subsc)') {\r\n                                            subscTable = true\r\n                                        }\r\n                                        return (\r\n                                            <>\r\n                                                <tr>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>{product[i].gameName} {product[i].categoryName}</td>\r\n                                                    <td style={{ textAlign: \"center\" }}>\r\n                                                        <Button variant=\"light\" onClick={() => categotyDelete(productId, product[i].categoryName)} >\r\n                                                            <AiOutlineDelete size={20} />\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                }\r\n                            }\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </Card>\r\n            <br />\r\n\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <div style={{ float: \"right\", width: \"300px\", marginBottom: \"10px\" }}>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            name=\"serachTerm\"\r\n                            onChange={searchOrder}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Box sx={{ width: '100%' }}>\r\n                <Typography>Pending Orders</Typography>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <Tabs value={value} onChange={handleChanges} aria-label=\"basic tabs example\">\r\n                        <Tab label=\"In Game\" {...a11yProps(0)} />\r\n                        <Tab label=\"ID Code\" {...a11yProps(1)} />\r\n                        <Tab label=\"Offer\" {...a11yProps(2)} />\r\n                        <Tab label=\"Subscribe\" {...a11yProps(3)} />\r\n                    </Tabs>\r\n                </Box>\r\n                <TabPanel value={value} index={0} >\r\n                    {inGameTable && (\r\n                        <div>\r\n                            <Card title={`InGame Orders`}>\r\n\r\n                                <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Ingame orders: {totalIngame}</p>\r\n                                {buttonAllActive && (\r\n                                    <>\r\n                                        <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                    </>\r\n                                )}\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\"/>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Account Name</th>\r\n                                            <th className=\"border-0\">Account Number</th>\r\n                                            <th className=\"border-0\">Account password</th>\r\n                                            <th className=\"border-0\">Backup Number</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {search === true && (<>\r\n                                            <Tablessss inGameOrders={currentPostSearch} loading={loading} paginate={currentPage} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPage={postsPerPage} />\r\n                                        </>)}\r\n                                        {search === false && (<>\r\n                                            <Tablessss inGameOrders={currentPost} loading={loading} paginate={currentPage} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPage={postsPerPage} />\r\n                                        </>)}\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPage}\r\n                                        totalPosts={inGameOrders.length}\r\n                                        paginate={paginate}\r\n                                        Number={ingame}\r\n                                    />\r\n                                    {inGameOrders.length > 0 && (\r\n                                        <div className='ml-5' >\r\n                                            <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForIngameTable(e)}>\r\n                                                {selectArray.map(number => {\r\n                                                    return (\r\n                                                        <option value={number} >{number}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card>\r\n                            <br />\r\n                        </div>\r\n                    )}\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n\r\n                    {idCodeTable && (\r\n                        <div>\r\n                            <Card title={`IdCode Orders`}>\r\n                                <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Idcode orders: {totalIdcode}</p>\r\n                                {buttonAllActive && (\r\n                                    <>\r\n                                        <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                    </>\r\n                                )}\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\"></th>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Id Code</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {search === true && (<>\r\n                                            <Tables idCodeOrders={currentPostsSearch} loading={loading} paginates={currentPages} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPages={postsPerPages} />\r\n                                        </>)}\r\n                                        {search === false && (<>\r\n                                            <Tables idCodeOrders={currentPosts} loading={loading} paginates={currentPages} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPages={postsPerPages} />\r\n                                        </>)}\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPages}\r\n                                        totalPosts={idCodeOrders.length}\r\n                                        paginate={paginates}\r\n                                        Number={idcode}\r\n                                    />\r\n                                    {idCodeOrders.length > 0 && (\r\n                                        <div className='ml-5' >\r\n                                            <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForIdcodeTable(e)}>\r\n                                                {selectArray.map(number => {\r\n                                                    return (\r\n                                                        <option value={number} >{number}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card>\r\n                            <br />\r\n                        </div>\r\n                    )}\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                    {offerTable && (<div>\r\n                        <Card title={`Offer Orders`}>\r\n                            <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Offer orders: {totalOffer}</p>\r\n                            {buttonAllActive && (\r\n                                <>\r\n                                    <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                </>\r\n                            )}\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th className=\"border-0\">Order ID</th>\r\n                                        <th className=\"border-0\">User ID</th>\r\n                                        <th className=\"border-0\">Product Name</th>\r\n                                        <th className=\"border-0\">Purchased Package</th>\r\n                                        <th className=\"border-0\">Account Name</th>\r\n                                        <th className=\"border-0\">Account Number</th>\r\n                                        <th className=\"border-0\">Account password</th>\r\n                                        <th className=\"border-0\">Backup Number</th>\r\n                                        <th className=\"border-0\">Order Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {search === true && (<>\r\n                                        <Tablesssss offerOrders={currentPostssSearch} loading={loading} paginatessss={currentPagessss} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPagessss={postsPerPagessss} />\r\n                                    </>)}\r\n                                    {search === false && (<>\r\n                                        <Tablesssss offerOrders={currentPostssss} loading={loading} paginatessss={currentPagessss} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPagessss={postsPerPagessss} />\r\n                                    </>)}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                            <div className='d-flex'>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagessss}\r\n                                    totalPosts={offerOrders.length}\r\n                                    paginate={paginatessss}\r\n                                    Number={offer}\r\n                                />\r\n                                {offerOrders.length > 0 && (\r\n                                    <div className='ml-5' >\r\n                                        <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForOfferTable(e)}>\r\n                                            {selectArray.map(number => {\r\n                                                return (\r\n                                                    <option value={number} >{number}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Card>\r\n                        <br />\r\n                    </div>)}\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                    {subscTable && (<div>\r\n                        <Card title={`Subsc Orders`}>\r\n                            <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Subsc orders: {totalSubsc}</p>\r\n                            {buttonAllActive && (\r\n                                <>\r\n                                    <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                </>\r\n                            )}\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th className=\"border-0\">Order ID</th>\r\n                                        <th className=\"border-0\">User ID</th>\r\n                                        <th className=\"border-0\">Product Name</th>\r\n                                        <th className=\"border-0\">Purchased Package</th>\r\n                                        <th className=\"border-0\">Account Name</th>\r\n                                        <th className=\"border-0\">Account Number</th>\r\n                                        <th className=\"border-0\">Account password</th>\r\n                                        <th className=\"border-0\">Backup Number</th>\r\n                                        <th className=\"border-0\">Order Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {search === true && (<>\r\n                                        <Tablessssss subscOrders={currentPostsssSearch} loading={loading} paginatesssss={currentPagesssss} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPagesssss={postsPerPagesssss} />\r\n                                    </>)}\r\n                                    {search === false && (<>\r\n                                        <Tablessssss subscOrders={currentPostsssss} loading={loading} paginatesssss={currentPagesssss} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPagesssss={postsPerPagesssss} />\r\n                                    </>)}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                            <div className='d-flex'>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagesssss}\r\n                                    totalPosts={subscOrders.length}\r\n                                    paginate={paginatesssss}\r\n                                    Number={subsc}\r\n                                />\r\n                                {subscOrders.length > 0 && (\r\n                                    <div className='ml-5' >\r\n                                        <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForSubscTable(e)}>\r\n                                            {selectArray.map(number => {\r\n                                                return (\r\n                                                    <option value={number} >{number}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Card>\r\n                        <br />\r\n                    </div>)}\r\n                </TabPanel>\r\n            </Box>\r\n\r\n\r\n            <Box sx={{ width: '100%' }}>\r\n                <Typography>Cancelled Order</Typography>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n                        <Tab label=\"In Game\" {...a11yPropss(0)} />\r\n                        <Tab label=\"ID Code\" {...a11yPropss(1)} />\r\n                        <Tab label=\"Offer\" {...a11yPropss(2)} />\r\n                        <Tab label=\"Subscribe\" {...a11yPropss(3)} />\r\n                    </Tabs>\r\n                </Box>\r\n                <TabPanels value={value} index={0}>\r\n                    {inGameTable && (\r\n                        <div>\r\n                            <Card title={`Cancelled Orders (InGame)`}>\r\n                                <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Cancel Ingame orders: {totalIngameCancel}</p>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Account Name</th>\r\n                                            <th className=\"border-0\">Account Number</th>\r\n                                            <th className=\"border-0\">Account password</th>\r\n                                            <th className=\"border-0\">Backup Number</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tabless cancelledOrdersInGame={currentPostss} loading={loading} paginatess={currentPagess} makeActive={makeActive} disabled={disabled} postsPerPagess={postsPerPagess} />\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPagess}\r\n                                        totalPosts={cancelledOrdersInGame.length}\r\n                                        paginate={paginatess}\r\n                                        Number={ingameCancel}\r\n                                    />\r\n                                    {cancelledOrdersInGame.length > 0 && (\r\n                                        <div className='ml-5' >\r\n                                            <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForCancelIngameTable(e)}>\r\n                                                {selectArray.map(number => {\r\n                                                    return (\r\n                                                        <option value={number} >{number}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card>\r\n                            <br />\r\n                        </div>\r\n                    )}\r\n                </TabPanels>\r\n                <TabPanels value={value} index={1}>\r\n                    {idCodeTable && (\r\n                        <div>\r\n                            <Card title={`Cancelled Orders (IdCode)`}>\r\n                                <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Cancel Idcode orders: {totalIdcodeCancel}</p>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Id Code</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tablesss cancelledOrdersIdCode={currentPostsss} loading={loading} paginatesss={currentPagesss} makeActive={makeActive} disabled={disabled} postsPerPagesss={postsPerPagesss} />\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPagesss}\r\n                                        totalPosts={cancelledOrdersIdCode.length}\r\n                                        paginate={paginatesss}\r\n                                        Number={idcodeCancel}\r\n                                    />\r\n                                    {cancelledOrdersIdCode.length > 0 && (\r\n                                        <div className='ml-5' >\r\n                                            <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForCancelIdcodeTable(e)}>\r\n                                                {selectArray.map(number => {\r\n                                                    return (\r\n                                                        <option value={number} >{number}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    )}\r\n                </TabPanels>\r\n                <TabPanels value={value} index={2}>\r\n                    {offerTable && (<div>\r\n                        <Card title={`Cancelled Orders (Offer)`}>\r\n                            <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Cancel Offer orders: {totalOfferCancel}</p>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th className=\"border-0\">Order ID</th>\r\n                                        <th className=\"border-0\">User ID</th>\r\n                                        <th className=\"border-0\">Product Name</th>\r\n                                        <th className=\"border-0\">Purchased Package</th>\r\n                                        <th className=\"border-0\">Account Name</th>\r\n                                        <th className=\"border-0\">Account Number</th>\r\n                                        <th className=\"border-0\">Account password</th>\r\n                                        <th className=\"border-0\">Backup Number</th>\r\n                                        <th className=\"border-0\">Order Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <Tablesssssss cancelledOrdersOffer={currentPostssssss} loading={loading} paginatessssss={currentPagessssss} makeActive={makeActive} disabled={disabled} postsPerPagessssss={postsPerPagessssss} />\r\n                                </tbody>\r\n                            </table>\r\n                            <div className='d-flex'>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagessssss}\r\n                                    totalPosts={cancelledOrdersOffer.length}\r\n                                    paginate={paginatessssss}\r\n                                    Number={offerCancel}\r\n                                />\r\n                                {cancelledOrdersOffer.length > 0 && (\r\n                                    <div className='ml-5' >\r\n                                        <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForCancelOfferTable(e)}>\r\n                                            {selectArray.map(number => {\r\n                                                return (\r\n                                                    <option value={number} >{number}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Card>\r\n                        <br />\r\n                    </div>)}\r\n                </TabPanels>\r\n                <TabPanels value={value} index={3}>\r\n                    {subscTable && (<div>\r\n                        <Card title={`Cancelled Orders (Subsc)`}>\r\n                            <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Cancel Subs orders: {totalSubscCancel}</p>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th className=\"border-0\">Order ID</th>\r\n                                        <th className=\"border-0\">User ID</th>\r\n                                        <th className=\"border-0\">Product Name</th>\r\n                                        <th className=\"border-0\">Purchased Package</th>\r\n                                        <th className=\"border-0\">Account Name</th>\r\n                                        <th className=\"border-0\">Account Number</th>\r\n                                        <th className=\"border-0\">Account password</th>\r\n                                        <th className=\"border-0\">Backup Number</th>\r\n                                        <th className=\"border-0\">Order Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <Tablessssssss cancelledOrdersSubsc={currentPostsssssss} loading={loading} paginatesssssss={currentPagesssssss} makeActive={makeActive} disabled={disabled} postsPerPagesssssss={postsPerPagesssssss} />\r\n                                </tbody>\r\n                            </table>\r\n                            <div className='d-flex'>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagesssssss}\r\n                                    totalPosts={cancelledOrdersSubsc.length}\r\n                                    paginate={paginatesssssss}\r\n                                    Number={subscCancel}\r\n                                />\r\n                                {cancelledOrdersSubsc.length > 0 && (\r\n                                    <div className='ml-5' >\r\n                                        <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForCancelSubscTable(e)}>\r\n                                            {selectArray.map(number => {\r\n                                                return (\r\n                                                    <option value={number} >{number}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Card>\r\n                        <br />\r\n                    </div>)}\r\n                </TabPanels>\r\n            </Box>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default OrderHandle","import React from 'react';\r\nimport { updateUserActiveStatus2 } from \"../../Api/user\";\r\nimport { notify } from '../../utils/notification'\r\n\r\nconst adminActiveStatus = ({ adminData, paginate }) => {\r\n   \r\n    const changeStatus = (user) => () => {\r\n        let activeStatus = user.activeStatus === \"active\" ? \"InActive\" : \"active\";\r\n        let id=user._id\r\n        updateUserActiveStatus2(activeStatus,id)\r\n                .then((response) => {\r\n                    notify('Admin active status updated')\r\n                })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {adminData && adminData.map((user, index) => (\r\n                <>\r\n                    <div >\r\n                        <span style={{ marginRight: \"10px\" }}>{(paginate - 1) * 10 + index + 1}</span>\r\n                        <span style={{ maxWidth: \"50px\" }}> {user.username}</span>\r\n\r\n                        <span>\r\n                            <button id=\"role-btn\" className=\"role-btn\">{user.activeStatus}</button>\r\n                            <div className=\"dropdown\">\r\n                                <button className=\"role-btn\" style={{ borderLeft: \"1px solid #0d8bf2\", width: '35px' }}>\r\n                                    <i className=\"fa fa-caret-down\"></i>\r\n                                </button>\r\n                                <div id=\"role-dropdown\" className=\"dropdown-content\">\r\n                                    <p onClick={changeStatus(user)}>{user.activeStatus === \"active\" ? \"InActive\" : \"active\"}</p>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n                    </div><br />\r\n                </>\r\n\r\n            ))}\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default adminActiveStatus;","import React, { useState, useEffect } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { getAllUser } from '../../Api/user';\r\nimport { userInfo } from '../../utils/auth';\r\nimport Tables from \"./adminActiveStatus\";\r\nimport Pagination from \"../../views/Pagination\";\r\n\r\nconst StatusChange = () => {\r\n    const { token } = userInfo();\r\n    const [adminData, setAdminData] = useState([]);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = adminData.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    useEffect(() => {\r\n        getAllUser(token)\r\n            .then((res) => {\r\n                let data = res.data\r\n                const admin = data && data.filter(filteredData => filteredData.role === 'admin')\r\n                setAdminData(admin)\r\n                console.log(admin)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [adminData]);\r\n\r\n    return (\r\n        <div>\r\n            <Card title={`Admin Active Status`}>\r\n\r\n                <Tables adminData={currentPost} paginate={currentPage} />\r\n\r\n                <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={adminData.length}\r\n                    paginate={paginate}\r\n                />\r\n            </Card>\r\n        </div >\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default StatusChange;","import React, { useEffect } from \"react\";\r\nimport CarouselComp from \"../components/Utility/CarosolComp\";\r\nimport Instruction from \"../components/Utility/Instraction/PaymentMethod\";\r\nimport PaymentMethodData from \"../components/Utility/Instraction/PaymentMethodData\";\r\nimport Popupbanner from \"../components/Utility/PopupBanner/Popupbanner\";\r\nimport StatusChange from \"../components/Utility/statusChange\";\r\nimport { userInfo } from '../utils/auth';\r\nlet superadmin = false;\r\n\r\nconst Utility = () => {\r\n\r\n    const { role } = userInfo();\r\n\r\n    if (role === 'superadmin') {\r\n        superadmin = true\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {superadmin && (\r\n                <StatusChange />\r\n            )}<br />\r\n            <div>Banners</div>\r\n            <CarouselComp />\r\n            <div>Instruction</div>\r\n            <Instruction />\r\n            <PaymentMethodData />\r\n            <Popupbanner />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Utility","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const getProducts = () => {\r\n    return axios.get(\r\n        `${API}admin/product/`\r\n    );\r\n};\r\n\r\nexport const logOut = () => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.get(\r\n        `${API}admin/logout`,{\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n};","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n    AiOutlineDelete,\r\n    AiOutlineEdit, AiOutlineUpload,\r\n} from \"react-icons/ai\";\r\nimport { Card, Row, Col, Button, Form, Modal } from \"react-bootstrap\";\r\nimport ProductUpdate from \"../components/product/ProductUpdate\";\r\nimport { deleteOneProducts } from \"../Api/products\";\r\nimport { notify } from '../utils/notification'\r\nimport { API } from '../utils/config';\r\nimport { userInfo } from \"../utils/auth\";\r\nimport {Chip} from \"@mui/material\";\r\nimport Badge from \"@mui/material/Badge\";\r\n\r\nconst ProductList = ({ data }) => {\r\n\r\n    const id = data._id\r\n    const [update, setUpdate] = useState(false);\r\n    const [remove, setRemove] = useState(false);\r\n    const { token } = userInfo();\r\n\r\n    const handleClose = () => setUpdate(false);\r\n\r\n    const handleShow = () => setUpdate(true)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        deleteOneProducts(token, id)\r\n            .then(response => notify('Product Delete Successfully'))\r\n            .catch(err => notify('Something Failed! Please try again'))\r\n    }\r\n\r\n    const handleCloseDelete = () => {\r\n        setRemove(false)\r\n    }\r\n\r\n    const stockFilter = (data) => {\r\n        if (data) {\r\n            return (<>In Stock</>)\r\n        } else {\r\n            return (<>Stock Out</>)\r\n        }\r\n    }\r\n\r\n    const handleShowDelete = () => setRemove(true);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col sm={12} md={6} lg={4} xl={3}>\r\n                    <Card>\r\n                        <Card.Img\r\n                            variant=\"top\"\r\n                            className=\"cart_image\"\r\n                            src={`${API}${data.images}`}\r\n                        />\r\n                        <Card.Body>\r\n                            <Card.Title className=\"text-dark bg-white text-center\">\r\n                                {data.gameName}\r\n                            </Card.Title>\r\n                            <Row className='mt-4'>\r\n                                <Col className=\"text-center text-lg\">\r\n                                    <Button variant=\"light\">\r\n                                        <AiOutlineEdit onClick={handleShow} size={24} />\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col className=\"text-center\">\r\n                                    <Button variant=\"light\">\r\n                                        <AiOutlineDelete onClick={e => handleShowDelete(e)} size={24} />\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12} md={6} lg={8} xl={9}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col>\r\n                                    Game Name\r\n                                    <Card>\r\n                                        <Card.Body>\r\n                                            {data.gameName}\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col>\r\n                                    Category Name\r\n                                    <Card>\r\n                                        <Card.Body>\r\n                                            {data.categoryName}\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                {data.topUp.map((product, index) => {\r\n                                    return (\r\n                                        <Badge style={{marginRight: 30, marginTop: 15}} color=\"secondary\"\r\n                                               badgeContent={stockFilter(product.stock)}>\r\n                                            <Chip\r\n                                                variant=\"outlined\"\r\n                                                style={{marginTop: 10}}\r\n                                                label={`${product.option}  (${product.price} Taka)`}\r\n                                                // avatar={}\r\n\r\n                                            />\r\n                                        </Badge>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <Form>\r\n                                <Modal show={update} size='lg' onHide={handleClose}>\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title ><div style={{marginLeft: 10}}>Update Product</div></Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body ><ProductUpdate  id={id} /></Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                            </Form>\r\n\r\n                            <Modal show={remove} size='lg' onHide={handleCloseDelete}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Delete Item</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <Form onSubmit={e => handleSubmit(e)}>\r\n                                        <div className=\"d-flex justify-content-around\">\r\n                                            <Form.Label>Do you want to delete this item?</Form.Label>\r\n                                            <Button type=\"submit\" variant=\"primary\">\r\n                                                Yes Delete\r\n                                            </Button>\r\n                                        </div>\r\n\r\n                                    </Form>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={handleCloseDelete}>\r\n                                        No\r\n                                    </Button>\r\n                                    <Button onClick={handleCloseDelete} type=\"submit\" variant=\"primary\"\r\n                                    >\r\n                                        Done\r\n                                    </Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ProductList","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { addProductss, addProductImage, deleteProductImage } from \"../../Api/products\";\r\nimport {Alert} from \"antd\";\r\nimport { notify } from '../../utils/notification'\r\nimport {FormControlLabel, Switch} from \"@mui/material\";\r\nimport { styled } from '@mui/material/styles';\r\nlet productId;\r\n\r\nconst category = [\r\n    {\r\n        _id: \"0\",\r\n        categoryNames: \"\"\r\n    },\r\n    {\r\n        _id: \"1\",\r\n        categoryNames: \"(InGame)\"\r\n    },\r\n    {\r\n        _id: \"2\",\r\n        categoryNames: \"(IDCode)\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        categoryNames: \"(Offer)\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        categoryNames: \"(Subsc)\"\r\n    }\r\n\r\n]\r\n\r\nconst Android12Switch = styled(Switch)(({ theme }) => ({\r\n    padding: 8,\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 22 / 2,\r\n        '&:before, &:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            top: '50%',\r\n            transform: 'translateY(-50%)',\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        '&:before': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n            left: 12,\r\n        },\r\n        '&:after': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n            right: 12,\r\n        },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: 'none',\r\n        width: 16,\r\n        height: 16,\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nconst ProductAdd = () => {\r\n    const [inputList, setInputList] = useState([{\r\n        option: \"\",\r\n        price: \"\",\r\n        stock: true\r\n    }]);\r\n\r\n    const [check, setCheck] = useState(false)\r\n\r\n    const [detailsList, setDetailsList] = useState([{\r\n        region: '',\r\n        platform: '',\r\n        publisher: '',\r\n    }]);\r\n\r\n    const [addProduct, setAddProduct] = useState({\r\n        gameName: '',\r\n        categoryName: '',\r\n        image: '',\r\n        backUpLink: '',\r\n        topUp: [],\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false\r\n    })\r\n    const label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n    const { success, disabled } = values;\r\n\r\n    const { option, price, stock } = inputList;\r\n\r\n    const { gameName, categoryName, image, backUpLink, details, topUp, formData } = addProduct;\r\n\r\n    useEffect(() => {\r\n        setAddProduct({\r\n            ...addProduct,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    const handleDetailChange = (e, index) => {\r\n        const { name, value } = e.target\r\n        const list = [...detailsList];\r\n        list[index][name] = value;\r\n        setDetailsList(list)\r\n        setAddProduct({\r\n            ...addProduct,\r\n            details: detailsList\r\n        })\r\n        formData.set(\"details\", JSON.stringify(details))\r\n    }\r\n    const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAddProduct({\r\n            ...addProduct,\r\n            topUp: inputList\r\n        })\r\n        console.log(inputList)\r\n        formData.set(\"topUp\", JSON.stringify(topUp))\r\n    };\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAddProduct({\r\n            ...addProduct,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, { option: \"\", price: \"\" }]);\r\n    };\r\n\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        setValues({...values, disabled: true});\r\n\r\n        await addProductss(formData)\r\n            .then(response => {\r\n                setAddProduct({\r\n                    ...addProduct,\r\n                    gameName: '',\r\n                    categoryName: '',\r\n                    image: '',\r\n                    backUpLink: '',\r\n                    detail: detailsList,\r\n                    topUp: inputList,\r\n                    success: true,\r\n                })\r\n                setValues({\r\n                    success: true,\r\n                    alert: false,\r\n                    disabled: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(`${errMsg}`)\r\n                setValues({\r\n                    disabled: false\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    const addForm = () => (\r\n        <>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Upload a file</Form.Label>\r\n                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Backup Code Link</Form.Label>\r\n                            <Form.Control type=\"game\" name=\"backUpLink\" placeholder=\"Backup Code Link\" value={backUpLink}\r\n                                onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Game</Form.Label>\r\n                            <Form.Control type=\"game\" name=\"gameName\" placeholder=\"Game name\" value={gameName}\r\n                                onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Select Category</Form.Label>\r\n                        <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                            value={categoryName} name=\"categoryName\" onChange={handleChange}>\r\n                            <option>Select an account type</option>\r\n                            {\r\n                                category.map((data, index) => {\r\n                                    return (\r\n                                        <option key={index}>{data.categoryNames}</option>\r\n                                    )\r\n                                }\r\n                                )\r\n                            }\r\n                        </Form.Control>\r\n                        {/*<Form.Group className=\"mb-3\" controlId=\"addCategory\">*/}\r\n                        {/*    <Form.Label>Add Category</Form.Label>*/}\r\n                        {/*    <Form.Control type=\"category\" name=\"categoryName\" placeholder=\"Category name\"*/}\r\n                        {/*        value={categoryName} onChange={handleChange} />*/}\r\n                        {/*</Form.Group>*/}\r\n                    </Col>\r\n                </Row>\r\n\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Product Option</Form.Label>\r\n                                    <Form.Control type=\"option\" name=\"option\" placeholder=\"option\"\r\n                                        value={option} checked={true} onChange={e => handleInputChange(e, i)} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Product price</Form.Label>\r\n                                    <Form.Control type=\"price\" name=\"price\" placeholder=\"Product price\"\r\n                                        value={price} onChange={e => handleInputChange(e, i)} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Product Stock</Form.Label>\r\n                                    <FormControlLabel\r\n                                        onClick={e=>setCheck(!check)}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        name=\"stock\"\r\n                                        value={check}\r\n                                        control={<Android12Switch defaultChecked />}\r\n                                        label=\"In Stock\"\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                            </Col>\r\n                            <Col className=\"mt-4\">\r\n                                {inputList.length !== 1 && <Button\r\n                                    className=\"mr10\"\r\n                                    onClick={() => handleRemoveClick(i)}>Remove</Button>}\r\n                                {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\" disabled={disabled}>\r\n                        Add new product\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n\r\n    const showSuccess = () => {\r\n        if (success) return (<>\r\n            <Redirect to='/admin/product' />\r\n            <Alert message=\"Product added\" type=\"success\" />\r\n        </>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductAdd;","import React, { useEffect, useState } from \"react\";\r\nimport { getProducts } from \"../Api\";\r\nimport { Button, Card, Col, Modal, Row } from \"react-bootstrap\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProductAdd from \"../components/product/ProductAdd\";\r\nimport \"./product.css\"\r\n\r\nconst Products = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [product, setProduct] = useState([])\r\n\r\n    useEffect(() => {\r\n        getProducts()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setProduct(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [product]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\"  className=\"mb-4\" onClick={handleShow}>\r\n                Add Products\r\n            </Button>\r\n            <Modal show={show} size='lg' onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                </Modal.Header>\r\n                <Modal.Body><ProductAdd /></Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-center\">Product List</Card.Title>\r\n                    <Row>\r\n                        {product && product.map((product, index) => {\r\n                            if (product.disabled === false) {\r\n                                return (\r\n                                    <Col key={index}\r\n                                        lg=\"12\" sm=\"12\"\r\n                                        className=\" text-decoration-none\">\r\n                                        <div to={`category/${index}/${product.gameName}`}><ProductList key={index} data={product} />\r\n                                        </div>\r\n                                    </Col>\r\n                                );\r\n                            }\r\n                        })}\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nexport default Products;","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\n\r\nexport const createNotifications = (token,id,notification) => {\r\n    const value={\r\n        notifications:notification\r\n    }\r\n    return axios.post(`${API}notification/${id}`,value,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getNotifications = (token,id) => {\r\n    return axios.get(`${API}notification/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const editNotifications = (token,id) => {\r\n    return axios.put(`${API}notification/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport moment from \"moment\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport {Checkbox} from \"@mui/material\";\r\n\r\nlet array = [];\r\nlet orderIds = []\r\nlet arrayItem=['1']\r\n\r\nconst inGameOrderTable = ({inGameOrders, loading, paginate, markComplete, modalOpen, disabled, postsPerPage}) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    const selectAll = (orderId) => () => {\r\n        if (!localStorage.getItem('orderArray')) {\r\n            array = []\r\n            orderIds=[]\r\n        }\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            localStorage.setItem(\"orderArray\", array)\r\n            console.log(\"array\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        }\r\n        orderIds=localStorage.getItem('orderArray').split(',')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {inGameOrders && inGameOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(InGame)').map((order, index) => (\r\n                <tr>\r\n                    {orderIds.length===0 && (\r\n                        <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} /></td>\r\n                    )}\r\n                    {orderIds.length>0 && arrayItem.map(item=>{\r\n                        if(orderIds.indexOf(order._id) !== -1){\r\n                            return(\r\n                                <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={true} /></td>\r\n                            )\r\n                        }\r\n                        else{\r\n                            return(\r\n                                <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} value={true}/></td>\r\n                            )\r\n                        }\r\n                    })}\r\n                    <td>{(paginate - 1) * parseInt(postsPerPage) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    {order.isComplete === false && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" disabled={disabled}\r\n                                    onClick={markComplete(order._id, order.userId?._id, order.userId?.phonenumber, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order.walletId?._id)}>Mark\r\n                                as Complete\r\n                            </button>\r\n                        </td>\r\n                    </>)}\r\n                    {order.isComplete === true && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\">Completed</button>\r\n                        </td>\r\n                    </>)}\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\"\r\n                                onClick={modalOpen(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order?.paymentComplete)}>Cancel\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default inGameOrderTable;","import React, {useEffect, useState} from 'react';\r\nimport moment from \"moment\";\r\nlet array = []\r\nlet orderIds = []\r\nlet arrayItem=['1']\r\n\r\nconst idCodeOrderTable = ({ idCodeOrders, loading, paginates, markComplete, modalOpen, disabled,postsPerPages }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n\r\n    }\r\n\r\n    const selectAll = (orderId) => () => {\r\n        if (!localStorage.getItem('orderArray')) {\r\n            array = []\r\n            orderIds=[]\r\n        }\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        }\r\n\r\n         orderIds=localStorage.getItem('orderArray').split(',')\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {idCodeOrders && idCodeOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(IDCode)').map((order, index) => (\r\n                <tr>\r\n                    {orderIds.length===0 && (\r\n                        <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} /></td>\r\n                    )}\r\n                    {orderIds.length>0 && arrayItem.map(item=>{\r\n                            if(orderIds.indexOf(order._id) !== -1){\r\n                                return(\r\n                                    <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={true} /></td>\r\n                                )\r\n                            }\r\n                            else{\r\n                                return(\r\n                                    <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} value={true}/></td>\r\n                                )\r\n                            }\r\n                    })}\r\n                    <td>{(paginates - 1) * parseInt(postsPerPages) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.idCode} </td>\r\n                    \r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    {order.isComplete === false && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(order._id, order.userId?._id, order.userId?.phonenumber, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order.walletId?._id)}>Mark as Complete</button>\r\n                        </td>\r\n                    </>)}\r\n                    {order.isComplete === true && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\">Completed</button>\r\n                        </td>\r\n                    </>)}\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" onClick={modalOpen(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order?.paymentComplete)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default idCodeOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst cancelInGameOrderTable = ({ cancelledOrdersInGame, loading, paginatess,makeActive,disabled,postsPerPagess }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {cancelledOrdersInGame && cancelledOrdersInGame.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(InGame)').map((order, index) => (\r\n                <tr>\r\n                    <td>{(paginatess - 1) * parseInt(postsPerPagess) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default cancelInGameOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst cancelIdcodeOrderTable = ({ cancelledOrdersIdCode, loading, paginatesss,makeActive,disabled,postsPerPagesss }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {cancelledOrdersIdCode && cancelledOrdersIdCode.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(IDCode)').map((order, index) => (\r\n                <tr>\r\n                    <td>{(paginatesss - 1) * parseInt(postsPerPagesss) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.idCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default cancelIdcodeOrderTable;","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nlet array = []\r\nlet orderIds = []\r\nlet arrayItem=['1']\r\n\r\n\r\nconst offerOrderTable = ({ offerOrders, loading, paginatessss, markComplete, modalOpen, disabled,postsPerPagessss }) => {\r\n\r\n    const selectAll = (orderId) => () => {\r\n        if (!localStorage.getItem('orderArray')) {\r\n            array = []\r\n            orderIds=[]\r\n        }\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            localStorage.setItem(\"orderArray\", array)\r\n            console.log(\"array\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        }\r\n        orderIds=localStorage.getItem('orderArray').split(',')\r\n    }\r\n\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {offerOrders && offerOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Offer)').map((order, index) => (\r\n                <tr>\r\n                    {orderIds.length===0 && (\r\n                        <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} /></td>\r\n                    )}\r\n                    {orderIds.length>0 && arrayItem.map(item=>{\r\n                        if(orderIds.indexOf(order._id) !== -1){\r\n                            return(\r\n                                <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={true} /></td>\r\n                            )\r\n                        }\r\n                        else{\r\n                            return(\r\n                                <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} value={true}/></td>\r\n                            )\r\n                        }\r\n                    })}\r\n                    <td>{(paginatessss - 1) * parseInt(postsPerPagessss) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    {order.isComplete === false && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(order._id, order.userId?._id, order.userId?.phonenumber, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order.walletId?._id)}>Mark as Complete</button>\r\n                        </td>\r\n                    </>)}\r\n                    {order.isComplete === true && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\">Completed</button>\r\n                        </td>\r\n                    </>)}\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" onClick={modalOpen(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order?.paymentComplete)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default offerOrderTable;","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nlet array = []\r\nlet orderIds = []\r\nlet arrayItem=['1']\r\n\r\nconst subscOrderTable = ({ subscOrders, loading, paginatesssss, markComplete, modalOpen, disabled,postsPerPagesssss }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    const selectAll = (orderId) => () => {\r\n        if (!localStorage.getItem('orderArray')) {\r\n            array = []\r\n            orderIds=[]\r\n        }\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            localStorage.setItem(\"orderArray\", array)\r\n            console.log(\"array\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        }\r\n        orderIds=localStorage.getItem('orderArray').split(',')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {subscOrders && subscOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Subsc)').map((order, index) => (\r\n                <tr>\r\n                    {orderIds.length===0 && (\r\n                        <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} /></td>\r\n                    )}\r\n                    {orderIds.length>0 && arrayItem.map(item=>{\r\n                        if(orderIds.indexOf(order._id) !== -1){\r\n                            return(\r\n                                <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={true} /></td>\r\n                            )\r\n                        }\r\n                        else{\r\n                            return(\r\n                                <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} value={true}/></td>\r\n                            )\r\n                        }\r\n                    })}\r\n                    <td>{(paginatesssss - 1) * parseInt(postsPerPagesssss) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    {order.isComplete === false && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(order._id, order.userId?._id, order.userId?.phonenumber, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order.walletId?._id)}>Mark as Complete</button>\r\n                        </td>\r\n                    </>)}\r\n                    {order.isComplete === true && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\">Completed</button>\r\n                        </td>\r\n                    </>)}\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" onClick={modalOpen(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order?.paymentComplete)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default subscOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst cancelOfferOrderTable = ({ cancelledOrdersOffer, loading, paginatessssss,makeActive,disabled,postsPerPagessssss }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {cancelledOrdersOffer && cancelledOrdersOffer.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Offer)').map((order, index) => (\r\n                <tr>\r\n                    <td>{(paginatessssss - 1) * parseInt(postsPerPagessssss) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default cancelOfferOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst cancelSubscOrderTable = ({ cancelledOrdersSubsc, loading, paginatesssssss,makeActive,disabled,postsPerPagesssssss }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {cancelledOrdersSubsc && cancelledOrdersSubsc.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Subsc)').map((order, index) => (\r\n                <tr>\r\n                    <td>{(paginatesssssss - 1) * parseInt(postsPerPagesssssss) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default cancelSubscOrderTable;","import { BsPencilSquare } from \"react-icons/bs\";\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport { updateAddWallet, findOneWallet, editBalance } from '../Api/addWallet';\r\nimport { updateWallet } from '../Api/wallet';\r\nimport { createNotifications } from '../Api/notification';\r\nimport { userInfo } from '../utils/auth';\r\nimport { notify } from '../utils/notification';\r\nimport moment from \"moment\";\r\nimport { sendMessageAPI } from '../Api/sendMessage'\r\nlet transactionId, transactionUser, transactionUserName, message, cancelAmount, transactionNum;\r\n\r\nlet array = [];\r\nlet transactionIds = []\r\nlet arrayItem=['1']\r\nlet restart=false;\r\n\r\nconst OrderTables = ({ setMark,activePayment, loading, paginates, findActivePayment, findCompletePayment, findCancelledPayment, filterPayment, filterFunctionActive, filterPaymentTypeActive, filterPaymentType, filtersBoth, postsPerPages,mark }) => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [edit, setEdit] = useState(false);\r\n    const handleCloseEdit = () => setEdit(false);\r\n    const handleShowEdit = () => setEdit(true);\r\n    const { token } = userInfo();\r\n\r\n    const [walletBalance, setWalletBalance] = useState({\r\n        amount: '',\r\n        disabled: false\r\n    });\r\n\r\n\r\n    const { amount } = walletBalance;\r\n\r\n    const handleChangeAmount = e => {\r\n        setWalletBalance({\r\n            ...walletBalance,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    const [note, setNote] = useState({\r\n        noteText: '',\r\n        disabled: false\r\n    });\r\n\r\n    const { noteText, disabled } = note;\r\n\r\n    const markComplete = (id, transactionId, taka, phonenumber) => () => {\r\n        restart=false\r\n        setMark()\r\n        mark=false\r\n        setNote({\r\n            ...note,\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            isComplete: true\r\n        }\r\n        let sms = `${taka} Taka has been added to your sizishop wallet for TransactionId: ${transactionId}`\r\n        let sendMessage = {\r\n            number: phonenumber,\r\n            message: sms.replaceAll(\" \", \"%20\")\r\n        }\r\n        updateAddWallet(token, id, data)\r\n            .then(response => {\r\n                if (response.data === 'marked') {\r\n                    console.log('marked')\r\n                }\r\n                else {\r\n                    findOneWallet(token, id)\r\n                        .then(response => {\r\n                            console.log(response.data)\r\n                            const walletId = response.data.walletId;\r\n                            const amount = response.data.amount;\r\n                            const walletUser = response.data.userId;\r\n                            const spent = 0\r\n                            updateWallet(token, walletId, amount, spent)\r\n                                .then(res => {\r\n                                    setNote({\r\n                                        ...note,\r\n                                        disabled: false\r\n                                    })\r\n                                    createNotifications(token, walletUser, `${taka} Taka has been added to your wallet for TransactionId: ${transactionId}`)\r\n                                        .then(res => {\r\n                                            notify('Transaction confirmed!!!!')\r\n                                            setNote({\r\n                                                ...note,\r\n                                                disabled: false\r\n                                            })\r\n                                            findActivePayment()\r\n                                            findCompletePayment()\r\n                                            if (filterFunctionActive === true) {\r\n                                                filterPayment()\r\n                                            }\r\n                                            if (filterPaymentTypeActive === true) {\r\n                                                filterPaymentType()\r\n                                            }\r\n                                            filtersBoth()\r\n                                        })\r\n                                })\r\n                        })\r\n                        .catch(err => {\r\n                            let data = {\r\n                                isComplete: false\r\n                            }\r\n                            notify('Something Failed!! Please try again')\r\n                            updateAddWallet(token, id, data)\r\n                                .then(response => {\r\n                                    if (response.data === 'marked') {\r\n                                        console.log('marked')\r\n                                    }\r\n                                    else {\r\n                                        findActivePayment()\r\n                                        notify('Something Failed!!! Please try again')\r\n                                        setNote({\r\n                                            ...note,\r\n                                            disabled: false\r\n                                        })\r\n                                    }\r\n                                    \r\n                                })\r\n                        })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setNote({\r\n                    ...note,\r\n                    disabled: false\r\n                })\r\n                notify('Something Failed!!! Please try again')\r\n            })\r\n\r\n\r\n    }\r\n\r\n    const modalOpen = (id, userId, name, amount, tran) => () => {\r\n        handleShow()\r\n        transactionId = id\r\n        transactionUser = userId\r\n        transactionUserName = name\r\n        cancelAmount = amount\r\n        transactionNum = tran\r\n    }\r\n\r\n    const modalOpen2 = (id, userId, name, amount) => () => {\r\n        handleShowEdit()\r\n        transactionId = id\r\n        transactionUser = userId\r\n        transactionUserName = name\r\n        cancelAmount = amount\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setNote({\r\n            ...note,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        message = e.target.value\r\n    }\r\n\r\n\r\n    const createNote = () => {\r\n        setNote({\r\n            ...note,\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            reject: true,\r\n            message: `${message}`\r\n        }\r\n\r\n        updateAddWallet(token, transactionId, data)\r\n            .then(res => {\r\n                if (response.data === 'marked') {\r\n                    console.log('marked')\r\n                }\r\n                else {\r\n                    createNotifications(token, transactionUser, `Your tranaction has been canceled for ${cancelAmount} Taka (TransactionId: ${transactionNum}). Reason: ${message}`)\r\n                        .then(res => {\r\n                            findActivePayment();\r\n                            findCancelledPayment();\r\n                            if (filterFunctionActive === true) {\r\n                                filterPayment()\r\n                            }\r\n                            if (filterPaymentTypeActive === true || filtersBoth === true) {\r\n                                filterPaymentType()\r\n                            }\r\n\r\n                            handleClose();\r\n                            notify('Transaction cancelled');\r\n                            setNote({\r\n                                ...note,\r\n                                disabled: false\r\n                            })\r\n                        })\r\n                }\r\n            })\r\n            .catch(res => {\r\n                findActivePayment()\r\n                notify('Something wrong! Please try again')\r\n                setNote({\r\n                    ...note,\r\n                    disabled: false\r\n                })\r\n            })\r\n    }\r\n\r\n    const editUserAmount = () => {\r\n        handleCloseEdit();\r\n        setWalletBalance({\r\n            ...walletBalance\r\n        })\r\n        editBalance(token, transactionId, parseInt(amount))\r\n            .then(res => {\r\n                setWalletBalance({\r\n                    amount: ''\r\n                })\r\n                findActivePayment()\r\n                notify(`${transactionUserName}'s transaction balance updated`)\r\n            })\r\n            .catch(err => {\r\n                setWalletBalance({\r\n                    amount: ''\r\n                })\r\n                notify(`Something went wrong. Please try again`)\r\n            })\r\n    }\r\n\r\n\r\n    const selectAll = (orderId) => () => {\r\n        mark=false\r\n        restart=true\r\n        console.log(\"orderId\",orderId)\r\n\r\n        if (!localStorage.getItem('transactionArray')) {\r\n            array = []\r\n            transactionIds=[]\r\n        }\r\n        const foundId = array.indexOf(orderId);\r\n        console.log(\"foundId\",foundId)\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            //transactionIds.push(orderId);\r\n            localStorage.setItem(\"transactionArray\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            //transactionIds.splice(foundId, 1);\r\n            localStorage.setItem(\"transactionArray\", array)\r\n        }\r\n        transactionIds=localStorage.getItem('transactionArray').split(',')\r\n        console.log(\"transactionIds\",transactionIds,array)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Body style={{ margin: \"30px 10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Why do you want to cancel this transaction?</Form.Label>\r\n                            <Form.Control type=\"email\" name=\"noteText\" placeholder=\"Add a short note\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" disabled={disabled} onClick={createNote}>\r\n                        Send\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={edit} onHide={handleCloseEdit} >\r\n                <Modal.Header style={{ margin: \"40px 10px 0px 15px\" }}>\r\n                    Edit {transactionUserName}'s transaction amount\r\n                </Modal.Header>\r\n                <Modal.Body style={{ margin: \"10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Enter the amount</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"amount\" placeholder=\"Enter amount\" onChange={handleChangeAmount} style={{ width: \"80%\" }} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={editUserAmount}>\r\n                        Edit\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleCloseEdit}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {activePayment && activePayment.map((item, index) => (\r\n                <tr>\r\n                    {mark===false && (\r\n                        <>\r\n                            <td><input onClick={selectAll(item._id)} type=\"checkbox\" /></td>\r\n                        </>\r\n                    )}\r\n                    {mark===true && restart===false &&(\r\n                        <>\r\n                            <td><input onClick={selectAll(item._id)} type=\"checkbox\" checked={false} value={true}/></td>\r\n                        </>\r\n                    )}\r\n                    {mark===true && restart===true &&(\r\n                        <>\r\n                            <td><input onClick={selectAll(item._id)} type=\"checkbox\" /></td>\r\n                        </>\r\n                    )}\r\n\r\n\r\n                    <td>{(paginates - 1) * parseInt(postsPerPages) + index + 1}</td>\r\n                    <td>{item.userId?.userIdNo}</td>\r\n                    <td>{item.paymentType}</td>\r\n                    <td>{item.transactionID}</td>\r\n                    <td>{item.mobileNumber}</td>\r\n                    <td><div className='d-flex justify-content-around'>\r\n                        <div>{item.amount}</div>\r\n                        <div className=\"ml-2\"><BsPencilSquare style={{ fontSize: 'x-large', cursor: \"pointer\" }} onClick={modalOpen2(item._id, item.userId?._id, item.userId?.username, item.amount)} /></div>\r\n                    </div></td>\r\n                    <td>{moment(item.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(item._id, item.transactionID, item.amount, item.userId?.phonenumber)}>Mark as Complete</button>\r\n                    </td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={modalOpen(item._id, item.userId?._id, item.userId?.username, item.amount, item.transactionID)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React, { useState, useEffect } from 'react';\r\nimport { Card, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { findAllWallet, filterTransaction,markAllPurchaseComplete } from '../Api/addWallet';\r\nimport { findAllPaymentMethod } from '../Api/paymentMethod';\r\nimport { userInfo } from '../utils/auth';\r\nimport Pagination from \"./Pagination\";\r\nimport Tables from \"./CompletePurchacheTable\";\r\nimport Tabless from \"./ActivePurchacheTable\";\r\nimport Tablesss from \"./CancelPurchacheTable\";\r\nimport {markAllComplete} from \"../Api/order\";\r\nimport {notify} from \"../utils/notification\";\r\nlet search = false, filter = false, search2 = false, filter2 = false, srchTerm;\r\nlet both = false, filterFunctionActive = false;\r\nlet activePaymentFilterBoth = [], completePaymentFilterBoth = [], cancelPaymentFilterBoth = [];\r\nlet totalActive, totalComplete, totalCancel, type, filterPaymentTypeActive = false, filtersBoth = false;\r\nlet buttonAllActive = false,mark=false;\r\n\r\nconst PurchaseApprove = () => {\r\n    const [activePayment, setActivePayment] = useState([]);\r\n    const [activePaymentSearch, setActivePaymentSearch] = useState([]);\r\n    const [activePaymentFilter, setActivePaymentFilter] = useState([]);\r\n    const [activePaymentFilter2, setActivePaymentFilter2] = useState([]);\r\n\r\n    const [completePayment, setCompletePayment] = useState([]);\r\n    const [completePaymentFilter, setCompletePaymentFilter] = useState([]);\r\n\r\n    const [cancelledPayment, setCancelledPayment] = useState([]);\r\n    const [cancelledPaymentFilter, setCancelledPaymentFilter] = useState([]);\r\n\r\n\r\n    const [allPaymentMethod, setAllPaymentMethod] = useState([]);\r\n    const [checked, setChecked] = useState([]);\r\n    const checkedIds = [...checked];\r\n\r\n    const rowSelectRorActivePayment = (e) => {\r\n        setPostsPerPages(e.target.value)\r\n    }\r\n\r\n    const rowSelectForCompletePayment = (e) => {\r\n        setPostsPerPage(e.target.value)\r\n    }\r\n\r\n    const rowSelectForCancelPayment = (e) => {\r\n        setPostsPerPagess(e.target.value)\r\n    }\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage,setPostsPerPage] = useState(10);\r\n    const [currentPages, setCurrentPages] = useState(1);\r\n    const [postsPerPages,setPostsPerPages] = useState(10);\r\n    const [currentPagess, setCurrentPagess] = useState(1);\r\n    const [postsPerPagess,setPostsPerPagess] = useState(10);\r\n\r\n    const [active, setActive] = useState(0);\r\n    const [complete, setComplete] = useState(0);\r\n    const [cancel, setCancel] = useState(0);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [filters, setFilters] = useState({\r\n        paymentType: []\r\n    })\r\n\r\n    const { token } = userInfo();\r\n\r\n    useEffect(() => {\r\n        findAllWallet(token)\r\n            .then(response => {\r\n                const complete = response.data && response.data.filter(filteredData => filteredData.isComplete === true)\r\n                setCompletePayment(complete)\r\n                totalComplete = complete.length\r\n                const cancel = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true)\r\n                setCancelledPayment(cancel)\r\n                totalCancel = cancel.length\r\n            })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        findAllWallet(token)\r\n            .then(response => {\r\n                const active = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n                setActivePayment(active)\r\n                totalActive = active.length\r\n            })\r\n    }, [activePayment])\r\n\r\n\r\n    const findActivePayment =  () => {\r\n         findAllWallet(token)\r\n            .then(response => {\r\n                const active = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n                setActivePayment(active)\r\n            })\r\n    }\r\n\r\n    const findCompletePayment =  () => {\r\n         findAllWallet(token)\r\n            .then(response => {\r\n                const complete = response.data && response.data.filter(filteredData => filteredData.isComplete === true)\r\n                setCompletePayment(complete)\r\n            })\r\n    }\r\n\r\n    const findCancelledPayment =  () => {\r\n         findAllWallet(token)\r\n            .then(response => {\r\n                const cancel = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true)\r\n                if (filterPaymentTypeActive === false) {\r\n                    setCancelledPayment(cancel)\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        findAllPaymentMethod()\r\n            .then(res => setAllPaymentMethod(res.data))\r\n    }, [])\r\n\r\n\r\n\r\n    if (filter2 === true && search2 === true) {\r\n        filtersBoth = true\r\n        const result = completePaymentFilter.filter((item) =>\r\n            item.userId?.username?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            item.paymentType?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            item.transactionID?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.mobileNumber)).toString()).includes(srchTerm) ||\r\n            ((parseInt(item.amount)).toString()).includes(srchTerm) ||\r\n            ((parseInt(item.userId?.userIdNo)).toString()).includes(srchTerm)\r\n        )\r\n        completePaymentFilterBoth = result\r\n\r\n        const result2 = activePaymentFilter2.filter((item) =>\r\n            item.userId?.username?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            item.paymentType?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            item.transactionID?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.mobileNumber)).toString()).includes(srchTerm) ||\r\n            ((parseInt(item.amount)).toString()).includes(srchTerm) ||\r\n            ((parseInt(item.userId?.userIdNo)).toString()).includes(srchTerm)\r\n        )\r\n        activePaymentFilterBoth = result2\r\n\r\n        const result3 = cancelledPaymentFilter.filter((item) =>\r\n            item.userId?.username?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            item.paymentType?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            item.transactionID?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.mobileNumber)).toString()).includes(srchTerm) ||\r\n            ((parseInt(item.amount)).toString()).includes(srchTerm) ||\r\n            ((parseInt(item.userId?.userIdNo)).toString()).includes(srchTerm)\r\n        )\r\n        cancelPaymentFilterBoth = result3\r\n        both = true\r\n        search = ''\r\n        filter = ''\r\n    }\r\n\r\n    const handleFilters = (myfilters) => {\r\n        const newFilters = { ...filters };\r\n        newFilters[\"paymentType\"] = myfilters;\r\n        setFilters(newFilters);\r\n        filterTransaction(newFilters)\r\n            .then(response => {\r\n                const active = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n                setActivePaymentFilter(active)\r\n                setActivePaymentFilter2(active)\r\n                const complete = response.data && response.data.filter(filteredData => filteredData.isComplete === true)\r\n                setCompletePayment(complete)\r\n                setCompletePaymentFilter(complete)\r\n                const cancel = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true)\r\n                setCancelledPayment(cancel)\r\n                setCancelledPaymentFilter(cancel)\r\n\r\n            })\r\n\r\n    }\r\n\r\n    const filterPaymentType =  () => {\r\n         handleFilters(checkedIds)\r\n    }\r\n\r\n    const handleToogle = paymentType => () => {\r\n        type = paymentType;\r\n        filterPaymentTypeActive = true\r\n        const foundId = checked.indexOf(paymentType);\r\n        if (foundId === -1) {\r\n            checkedIds.push(paymentType);\r\n        } else {\r\n            checkedIds.splice(foundId, 1);\r\n        }\r\n        if (checkedIds.length === 0) {\r\n            filter = false\r\n            filterPaymentTypeActive = false\r\n            if (srchTerm === undefined) {\r\n                search = false\r\n            }\r\n            else {\r\n                search = true\r\n                both = false\r\n            }\r\n            filter2 = false\r\n        }\r\n        else {\r\n            filter = true\r\n            search = ''\r\n            filter2 = true\r\n            both = false\r\n        }\r\n        setChecked(checkedIds);\r\n        handleFilters(checkedIds)\r\n\r\n    }\r\n\r\n    if (localStorage.getItem('transactionArray') != null) {\r\n        buttonAllActive = localStorage.getItem('transactionArray').length !== 0;\r\n    }\r\n\r\n    if (!localStorage.getItem('transactionArray')) {\r\n        buttonAllActive = false\r\n    }\r\n\r\n    const markAll = () => {\r\n        mark=true\r\n         const myArray = localStorage.getItem('transactionArray').split(\",\");\r\n        markAllPurchaseComplete(token, myArray)\r\n            .then(res => {\r\n                localStorage.setItem(\"transactionArray\", [])\r\n                notify(\"Transaction Confirmed!\")\r\n                mark=false;\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"transactionArray\", [])\r\n    }, [])\r\n\r\n\r\n    const filterPayment = async () => {\r\n        if (srchTerm != undefined) {\r\n            await findAllWallet(token)\r\n                .then(res => {\r\n                    if (res.data) {\r\n                        filterContent(res.data, srchTerm)\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const searchPayment = (e) => {\r\n        let searchTerm = e.currentTarget.value\r\n        srchTerm = searchTerm\r\n        filterFunctionActive = true;\r\n        if (searchTerm === undefined) {\r\n            search = false\r\n            search2 = false\r\n            filterFunctionActive = false\r\n        }\r\n        else {\r\n            search = true\r\n            search2 = true\r\n        }\r\n        findAllWallet(token)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    filterContent(res.data, searchTerm)\r\n                }\r\n            })\r\n    }\r\n\r\n    const filterContent = (payments, searchTerm) => {\r\n        const result = payments.filter((item) =>\r\n            item.userId?.username?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.paymentType?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.transactionID?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.mobileNumber)).toString()).includes(searchTerm) ||\r\n            ((parseInt(item.amount)).toString()).includes(searchTerm) ||\r\n            ((parseInt(item.userId?.userIdNo)).toString()).includes(srchTerm)\r\n        )\r\n\r\n        let value = result.filter(filteredData => filteredData.isComplete === true)\r\n        setCompletePayment(value)\r\n\r\n\r\n        let value2 = result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n        setActivePaymentSearch(value2)\r\n\r\n        let value3 = result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true)\r\n        setCancelledPayment(value3)\r\n    }\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = completePayment.slice(indexOfFirstPost, indexOfLastPost);\r\n    const currentPostsFilterBoths = completePaymentFilterBoth.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const indexOfLastPosts = currentPages * postsPerPages;\r\n    const indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n    const currentPosts = activePayment.slice(indexOfFirstPosts, indexOfLastPosts);\r\n    const currentPostsSearch = activePaymentSearch.slice(indexOfFirstPosts, indexOfLastPosts);\r\n    const currentPostsFilter = activePaymentFilter.slice(indexOfFirstPosts, indexOfLastPosts);\r\n    const currentPostsFilterBoth = activePaymentFilterBoth.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n    const indexOfLastPostss = currentPagess * postsPerPagess;\r\n    const indexOfFirstPostss = indexOfLastPostss - postsPerPagess;\r\n    const currentPostss = cancelledPayment.slice(indexOfFirstPostss, indexOfLastPostss);\r\n    const currentPostsFilterBothss = cancelPaymentFilterBoth.slice(indexOfFirstPostss, indexOfLastPostss);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber)\r\n        setComplete(pageNumber)\r\n    }\r\n    const paginates = pageNumber => {\r\n        setCurrentPages(pageNumber)\r\n        setActive(pageNumber)\r\n    }\r\n    const paginatess = pageNumber => {\r\n        setCurrentPagess(pageNumber)\r\n        setCancel(pageNumber)\r\n    };\r\n\r\n    let selectArray = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\r\n\r\n    //console.log(postsPerPages,postsPerPage,postsPerPagess)\r\n\r\n    const setMark=()=>{\r\n        console.log('mark')\r\n        mark=false\r\n    }\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <div className='mt-3 mb-3 d-flex'>\r\n                    {allPaymentMethod && allPaymentMethod.map(item => (\r\n                        <form>\r\n                            <input type=\"checkbox\" className='ml-2' onChange={handleToogle(item.name)} /> {item.name}\r\n                        </form>\r\n                    ))}\r\n                </div>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <div style={{ float: \"right\", width: \"300px\", marginBottom: \"10px\" }}>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                name=\"serachTerm\"\r\n                                onChange={searchPayment}\r\n                            >\r\n                            </input>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Active Payment</Card.Title>\r\n                                <p style={{ fontSize: \".8rem\" }} className=\"text-muted\">Total active payments: {totalActive}</p>\r\n                                {buttonAllActive && (\r\n                                    <>\r\n                                        <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                    </>\r\n                                )}\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">User ID</th>\r\n                                            <th scope=\"col\">Payment Type</th>\r\n                                            <th scope=\"col\">Transaction ID</th>\r\n                                            <th scope=\"col\">Mobile Number</th>\r\n                                            <th scope=\"col\">Amount</th>\r\n                                            <th scope=\"col\">Transaction date</th>\r\n                                            <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {search === true && (<>\r\n                                            <Tabless activePayment={currentPostsSearch} loading={loading} paginates={currentPages} findActivePayment={findActivePayment} findCompletePayment={findCompletePayment} findCancelledPayment={findCancelledPayment} filterPayment={filterPayment} filterFunctionActive={filterFunctionActive} filtersBoth={filtersBoth} postsPerPages={postsPerPages} />\r\n                                        </>)}\r\n                                        {search === false && (<>\r\n                                            <Tabless setMark={setMark} activePayment={currentPosts} loading={loading} paginates={currentPages} findActivePayment={findActivePayment} findCompletePayment={findCompletePayment} findCancelledPayment={findCancelledPayment} postsPerPages={postsPerPages} mark={mark}/>\r\n                                        </>)}\r\n                                        {filter === true && (<>\r\n                                            <Tabless activePayment={currentPostsFilter} loading={loading} paginates={currentPages} findActivePayment={findActivePayment} findCompletePayment={findCompletePayment} findCancelledPayment={findCancelledPayment} filterPaymentTypeActive={filterPaymentTypeActive} filterPaymentType={filterPaymentType} postsPerPages={postsPerPages}/>\r\n                                        </>)}\r\n                                        {both === true && (<>\r\n                                            <Tabless activePayment={currentPostsFilterBoth} loading={loading} paginates={currentPages} findActivePayment={findActivePayment} findCompletePayment={findCompletePayment} findCancelledPayment={findCancelledPayment} filtersBoth={filtersBoth} postsPerPages={postsPerPages}/>\r\n                                        </>)}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPages}\r\n                                        totalPosts={activePayment.length}\r\n                                        paginate={paginates}\r\n                                        Number={active}\r\n                                    />\r\n                                    {activePayment.length > 0 && (\r\n                                        <div className='ml-5' >\r\n                                            <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectRorActivePayment(e)}>\r\n                                                {selectArray.map(number => {\r\n                                                    return (\r\n                                                        <option value={number} >{number}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Complete Payment</Card.Title>\r\n                                <p style={{ fontSize: \".8rem\" }} className=\"text-muted\">Total complete payments: {totalComplete}</p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">User ID</th>\r\n                                            <th scope=\"col\">Payment Type</th>\r\n                                            <th scope=\"col\">Transaction ID</th>\r\n                                            <th scope=\"col\">Mobile Number</th>\r\n                                            <th scope=\"col\">Amount</th>\r\n                                            <th scope=\"col\">Transaction date</th>\r\n                                            <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {both === false && (<>\r\n                                            <Tables completePayment={currentPost} loading={loading} paginate={currentPage} postsPerPage={postsPerPage}/>\r\n                                        </>)}\r\n\r\n                                        {both === true && (<>\r\n                                            <Tables completePayment={currentPostsFilterBoths} loading={loading} paginate={currentPage} postsPerPage={postsPerPage}/>\r\n                                        </>)}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPage}\r\n                                        totalPosts={completePayment.length}\r\n                                        paginate={paginate}\r\n                                        Number={complete}\r\n                                    />\r\n                                    {completePayment.length > 0 && (\r\n                                        <div className='ml-5' >\r\n                                            <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForCompletePayment(e)}>\r\n                                                {selectArray.map(number => {\r\n                                                    return (\r\n                                                        <option value={number} >{number}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Cancelled Payment</Card.Title>\r\n                                <p style={{ fontSize: \".8rem\" }} className=\"text-muted\">Total cancelled payments: {totalCancel}</p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">User ID</th>\r\n                                            <th scope=\"col\">Payment Type</th>\r\n                                            <th scope=\"col\">Transaction ID</th>\r\n                                            <th scope=\"col\">Mobile Number</th>\r\n                                            <th scope=\"col\">Amount</th>\r\n                                            <th scope=\"col\">Transaction date</th>\r\n                                            <th scope=\"col\">Cancel Reason</th>\r\n                                            <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {both === false && (<>\r\n                                            <Tablesss cancelledPayment={currentPostss} loading={loading} paginatess={currentPagess} findActivePayment={findActivePayment} findCancelledPayment={findCancelledPayment} filterPayment={filterPayment} filterFunctionActive={filterFunctionActive} filterPaymentTypeActive={filterPaymentTypeActive} filterPaymentType={filterPaymentType} postsPerPagess={postsPerPagess}/>\r\n                                        </>)}\r\n\r\n                                        {both === true && (<>\r\n                                            <Tablesss cancelledPayment={currentPostsFilterBothss} loading={loading} paginatess={currentPagess} findActivePayment={findActivePayment} findCancelledPayment={findCancelledPayment} postsPerPagess={postsPerPagess}/>\r\n                                        </>)}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPagess}\r\n                                        totalPosts={cancelledPayment.length}\r\n                                        paginate={paginatess}\r\n                                        Number={cancel}\r\n                                    />\r\n                                    {cancelledPayment.length > 0 && (\r\n                                        <>\r\n                                            <div className='ml-5' >\r\n                                                <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForCancelPayment(e)}>\r\n                                                    {selectArray.map(number => {\r\n                                                        return (\r\n                                                            <option value={number} >{number}</option>\r\n                                                        )\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default PurchaseApprove","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const addWallet = (token,data) => {\r\n    return axios.post(`${API}admin/addwallet`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const findAllWallet = (token) => {\r\n    return axios.get(`${API}admin/addwallet/`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateAddWallet = (token,id,data) => {\r\n    return axios.put(`${API}admin/addwallet/${id}`,data,{\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const findOneWallet = (token,id) => {\r\n    return axios.get(`${API}admin/addwallet/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const findTransactionById = (token,id) => {\r\n    return axios.get(`${API}admin/addwallet/transaction/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getTransactions = (token,id) => {\r\n    return axios.get(`${API}admin/addwallet/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const filterTransaction = (filters = {}) => {\r\n    const data = {\r\n        filters: { ...filters }\r\n    }\r\n    //console.log(newFilters)\r\n    return axios.post(`${API}admin/addwallet/filter/product`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const editBalance = (token,id,amount) => {\r\n    const data={\r\n        amount:amount\r\n    }\r\n    return axios.put(`${API}admin/addwallet/editAmount/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const markAllPurchaseComplete = (token,data) => {\r\n    return axios.put(`${API}admin/addwallet/mark/All`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n","import React from 'react';\r\nimport moment from \"moment\";\r\nimport {BsPencilSquare} from \"react-icons/bs\";\r\n\r\nconst OrderTables = ({completePayment, loading,  paginate,postsPerPage }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {completePayment && completePayment.filter(filteredData => filteredData.isComplete === true).map((item, index) => (\r\n                <tr>\r\n                    <td>{(paginate-1)*parseInt(postsPerPage)+ index + 1}</td>\r\n                    <td>{item.userId?.userIdNo}</td>\r\n                    <td>{item.paymentType}</td>\r\n                    <td>{item.transactionID}</td>\r\n                    <td>{item.mobileNumber}</td>\r\n                    <td>{item.amount}</td>\r\n                    <td>{moment(item.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React, { useEffect, useState } from 'react';\r\nimport moment from \"moment\";\r\nimport { userInfo } from '../utils/auth';\r\nimport { createNotifications } from '../Api/notification';\r\nimport { updateAddWallet } from '../Api/addWallet';\r\nimport { notify } from '../utils/notification';\r\n\r\nconst CancelPurchacheTable = ({ cancelledPayment, loading, paginatess, findActivePayment, findCancelledPayment, filterPayment, filterFunctionActive, filterPaymentTypeActive, filterPaymentType, postsPerPagess }) => {\r\n    const { token, id } = userInfo();\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    const [disabledButton, setDisabledButton] = useState({\r\n        disabled: false,\r\n    });\r\n\r\n    const { disabled } = disabledButton\r\n\r\n    const makeActive = (tranId, userId, transactionID) => () => {\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            reject: false,\r\n            rejectReason: null\r\n        }\r\n        updateAddWallet(token, tranId, data)\r\n            .then(res => {\r\n                createNotifications(token, userId, `Your transaction has been reactive for TransactionId:${transactionID}`)\r\n                    .then(res => {\r\n                        notify('Transaction reactive successfully!')\r\n                        findCancelledPayment()\r\n                        findActivePayment()\r\n                        if (filterFunctionActive === true) {\r\n                            filterPayment()\r\n                        }\r\n                        if (filterPaymentTypeActive === true) {\r\n                            filterPaymentType()\r\n                        }\r\n\r\n                        setDisabledButton({\r\n                            disabled: false\r\n                        })\r\n                    })\r\n                    .catch(res => {\r\n                        setDisabledButton({\r\n                            disabled: false\r\n                        })\r\n                    })\r\n            })\r\n            .catch(res => {\r\n                notify('Something wrong! Please try again')\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {cancelledPayment && cancelledPayment.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true).map((item, index) => (\r\n                <tr>\r\n                    <td>{(paginatess - 1) * parseInt(postsPerPagess) + index + 1}</td>\r\n                    <td>{item.userId?.userIdNo}</td>\r\n                    <td>{item.paymentType}</td>\r\n                    <td>{item.transactionID}</td>\r\n                    <td>{item.mobileNumber}</td>\r\n                    <td>{item.amount}</td>\r\n                    <td>{moment(item.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    <td>{item.rejectReason}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(item._id, item.userId?._id, item.transactionID)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CancelPurchacheTable;","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const login = (user) => {\r\n    console.log(user)\r\n    return axios.post(`${API}admin/login`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n};\r\n\r\nconst googleLogin = async (code) => {\r\n    return axios.post(`${API}auth/google`, code, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    // console.log(code)\r\n    // return fetch('/api/auth/google', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //     },\r\n    //     body: JSON.stringify({ code }),\r\n    // }).then((res) => {\r\n    //     if (res.ok) {\r\n    //         return res.json();\r\n    //     } else {\r\n    //         return Promise.reject(res);\r\n    //     }\r\n    // });\r\n};\r\n\r\nexport { googleLogin };\r\n\r\nexport const registration = (user) => { \r\n    return axios.post(`${API}admin/register`, user, { \r\n        headers: { \r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n};\r\n\r\nexport const forgotPassword = (user) => {\r\n    return axios.post(`${API}admin/forgotPassword`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n}\r\n\r\nexport const resetPassword = (user) => {\r\n    const token = user.token\r\n    console.log(user.token)\r\n    return axios.put(`${API}admin/resetPassword/${token}`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n}","export default __webpack_public_path__ + \"static/media/logo.18ca7585.png\";","import * as React from 'react';\r\nimport {styled, alpha} from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Badge from '@mui/material/Badge';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MoreIcon from '@mui/icons-material/MoreVert'\r\nimport Logo from \"../../../assets/img/logo.png\"\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {\r\n    AiFillWallet, AiOutlineLogout,\r\n    AiOutlineNotification,\r\n    AiOutlineShoppingCart,\r\n    AiOutlineUser,\r\n    AiOutlineWallet\r\n} from \"react-icons/ai\";\r\nimport {BiSupport} from \"react-icons/bi\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {isAuthenticated, userInfo} from \"../../../utils/auth\";\r\nimport {getNotifications} from \"../../../Api/notification\";\r\nimport {deleteAllProduct, removeJwt, updateUserActiveStatus} from \"../../../Api/user\";\r\nimport {Button} from \"@mui/material\";\r\nimport {getProducts} from \"../../../Api\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Search = styled('div')(({theme}) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({theme}) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({theme}) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n    const [viewNotifications, setViewNotifications] = useState([]);\r\n    const [notifications, setNotifications] = useState([]);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated()) {\r\n            const {token, id} = userInfo();\r\n            getNotifications(token, id)\r\n                .then(res => {\r\n                    if (res.data[0]) {\r\n                        setNotifications(res.data[0].notifications)\r\n                        setViewNotifications(res.data[0].view)\r\n                    }\r\n                })\r\n        }\r\n\r\n    }, []);\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        removeJwt()\r\n        updateUserActiveStatus('inActive')\r\n        deleteAllProduct()\r\n        handleMenuClose()\r\n        localStorage.clear()\r\n        history.push({\r\n            pathname: '/'\r\n        });\r\n    }\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem as={Link} to='/profile' eventKey=\"1\" onClick={handleMenuClose}><Link\r\n                to='profile'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineUser/></div>\r\n                    <div className=\"ml-2\"> My Profile</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem as={Link} to='userWallet' eventKey=\"2\" onClick={handleMenuClose}><Link\r\n                to='userWallet'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineWallet/></div>\r\n                    <div className=\"ml-2\"> My Wallet</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem onClick={handleMenuClose} as={Link} to='notification' eventKey=\"2\"><Link\r\n                to='notification'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineNotification/>\r\n                    </div>\r\n                    <div className=\"ml-2\">notification\r\n                        {viewNotifications === false && <>\r\n                            <i className=\"fas fa-circle\" style={{fontSize: \".5rem\", color: \"blue\"}}/>\r\n                        </>}\r\n\r\n                    </div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem onClick={handleMenuClose} as={Link} to='confirmation' eventKey=\"3\"><Link\r\n                to='confirmation'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiFillWallet/></div>\r\n                    <div className=\"ml-2\">Add Wallet</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem onClick={handleMenuClose} as={Link} to='myOrder' eventKey=\"4\"><Link\r\n                to='myOrder'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineShoppingCart/>\r\n                    </div>\r\n                    <div className=\"ml-2\">My Order</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem onClick={handleMenuClose} as={Link} to='support' eventKey=\"5\"><Link\r\n                to='support'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><BiSupport/></div>\r\n                    <div className=\"ml-2\">Support</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem as={Link} to='/' eventKey=\"6\" onClick={handleMenuClose}><Link\r\n                to='/' onClick={logout}>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineLogout/></div>\r\n                    <div className=\"ml-2\">Logout</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    size=\"large\"\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle/>\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    useEffect(() => {\r\n        getProducts()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setProducts(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n    const [searchBar, setSearchBar] = useState({\r\n        product: ''\r\n    })\r\n    const [products, setProducts] = useState([])\r\n    const {product} = searchBar\r\n\r\n    const handleSearch = e => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    function setSearchItem(e) {\r\n        setSearchBar({\r\n            ...searchBar,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    let result\r\n    const history = useHistory();\r\n    let redirect = false\r\n    const filterContent = (e) => {\r\n        let searchTerm = product\r\n        result = products.filter((order) =>\r\n            order.gameName && order.gameName.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            order.categoryName?.toLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n        );\r\n\r\n        history.push({\r\n            pathname: '/search-result',\r\n            state: result\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            {redirect && <Redirect to='/search-result'\r\n            ><Search data={result}/></Redirect>}\r\n            <AppBar position=\"static\" style={{backgroundColor: '#004d25'}}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        sx={{mr: 2, flexGrow:.1}}\r\n                        as={Link} to='/'\r\n                    >\r\n                        <img src={Logo} alt='ads' width='100px'/>\r\n                    </IconButton>\r\n                    <Box sx={{flexGrow: 1}} className=\" px-12 hidden md:block\">\r\n                        <div className=\"w-full\">\r\n                            <form onSubmit={handleSearch}>\r\n                                <div className=\"relative overflow-hidden\">\r\n                                    <input type=\"text\"\r\n                                           style={{borderColor: \"white\"}}\r\n                                           placeholder=\"Search..\"\r\n                                           className=\"w-full border-[3px] rounded text-lg text-gray-800 font-normal py-1.5 px-4 pr-[110px] focus:outline-none\"\r\n                                        //className=\"w-full border-[3px] border-primary-500 rounded text-lg text-gray-800 font-normal py-1.5 px-4 pr-[110px] focus:outline-none focus:border-primary-300\"\r\n                                           name=\"product\" value={product}\r\n                                           onChange={(e) => setSearchItem(e)}/>\r\n                                    <input type=\"submit\" value=\"Search\"\r\n                                           style={{backgroundColor: '#004d25', border: '2px solid white'}}\r\n                                           className=\"absolute top-1/2 right-[2px] -translate-y-1/2 w-[100px]  duration-100  flex items-center  justify-center text-white font-normal text-lg cursor-pointer abc \"\r\n                                           onClick={e => filterContent(e)}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Box>\r\n                    <Box sx={{display: {xs: 'none', md: 'flex'}, flexGrow: .05}}>\r\n                        {!isAuthenticated() && (<Box style={{position: \"relative\", right: '0%'}}>\r\n                            <Button\r\n                                style={{color: 'white', borderColor: \"white\", padding: 5, fontSize: 15, marginLeft: 50}}\r\n                                color=\"success\" variant=\"outlined\"> <Link to='/login' aria-current=\"page\"\r\n                                                                          data-v-70c6da4e>Login </Link></Button>\r\n                            <Button\r\n                                style={{color: 'white', borderColor: \"white\", padding: 5, fontSize: 15, marginLeft: 20}}\r\n                                color=\"success\" variant=\"outlined\"> <Link to='/registration' data-v-70c6da4e>Sign\r\n                                Up </Link></Button>\r\n                        </Box>)}\r\n                        {isAuthenticated() && (\r\n                            <IconButton\r\n                                size=\"large\"\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle/>\r\n                            </IconButton>\r\n                        )}\r\n\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: {xs: 'flex', md: 'none', marginLeft: 120}, flexGrow: 1}}>\r\n\r\n                        {!isAuthenticated() && (<>\r\n                            <li className=\"hidden xs:block\" data-v-70c6da4e>\r\n                                <Link to='/login' aria-current=\"page\" data-v-70c6da4e>Login </Link>\r\n                            </li>\r\n                            <li data-v-70c6da4e><Link to='/registration' data-v-70c6da4e>Sign Up </Link>\r\n                            </li>\r\n                        </>)}\r\n                        {isAuthenticated() && (\r\n                            <IconButton\r\n                                sx={{flexGrow: 1}}\r\n                                size=\"large\"\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle/>\r\n                            </IconButton>\r\n                        )}\r\n\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </Box>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { registration } from '../Api/auth';\r\nimport \"../components/User/User.css\"\r\nimport { notify } from '../utils/notification'\r\nimport NavBar from \"../layouts/NavBar\";\r\nimport Footer from \"../components/Main/Footer\";\r\nimport animationData from \"../assets/lotte/50124-user-profile.json\";\r\nimport Lottie from \"react-lottie\";\r\n\r\nconst setPasswordAlert = () => {\r\n    notify('Password Miss-matched')\r\n}\r\n\r\nfunction UserCreate() {\r\n\r\n    const [user, setUser] = useState('');\r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        phonenumber: '',\r\n        password: '',\r\n        role: '',\r\n        success: false,\r\n        error: false,\r\n        disabled: false\r\n    });\r\n\r\n    const { username, email, password, phonenumber, role, success,disabled, error, repassword } = values;\r\n\r\n    const handleChange = e => {\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        if (e.target.name === 'role') {\r\n            setUser(e.target.value)\r\n        }\r\n        console.log(e.target.name,e.target.value)\r\n    }\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({ ...values, error: false,disabled: true });\r\n        if (password === repassword) {\r\n            registration({ username, email, phonenumber, role, password })\r\n                .then(response => {\r\n                    notify(`${role[0].toUpperCase() + role.slice(1)} created Successfully`)\r\n                    setValues({\r\n                        username: '',\r\n                        email: '',\r\n                        phonenumber: '',\r\n                        password: '',\r\n                        repassword: '',\r\n                        success: true,\r\n                        error: false,\r\n                        disabled: false,\r\n                    })\r\n                    setUser({\r\n                        user: ''\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    let errMsg = 'Something went wrong!';\r\n                    if (err.response) {\r\n                        errMsg = err.response.data;\r\n                    } else {\r\n                        errMsg = 'Something went wrong!';\r\n                    }\r\n                    setValues({ ...values, error: errMsg,disabled: false, })\r\n                })\r\n        }\r\n        else {\r\n            setPasswordAlert()\r\n        }\r\n\r\n    }\r\n\r\n    const signUpForm = () => (\r\n        <>\r\n           \r\n            <div className=\"mx-auto\" data-v-791b20d9>\r\n                <div data-v-791b20d9>\r\n                    <div data-v-791b20d9>\r\n                        <div\r\n                            className=\"min-w-screen bg-gray-200 flex items-center justify-center md:px-5 py-10 md:py-6\">\r\n                            <div className=\"bg-white text-gray-500 w-full overflow-hidden\">\r\n                                <div className=\"md:flex w-full\">\r\n\r\n                                    <div className=\"w-full md:w-2/3 py-10 px-5 md:px-10 relative\">\r\n                                        <div className=\"text-center mb-10\">\r\n                                            <h1 className=\"text-xl md:text-2xl font-bold leading-tight text-gray-900 text-left\">\r\n                                                Create new User\r\n                                            </h1>\r\n                                        </div>\r\n\r\n                                        <form onSubmit={handleSubmit}>\r\n                                            <div className=\"flex -mx-3 flex-wrap\">\r\n                                                <div className=\"w-full md:w-1/2 px-3 mb-5\">\r\n                                                    <div><label className=\"block text-gray-700\">Username</label> <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter Username\" autoFocus=\"autofocus\" autoComplete\r\n                                                        name=\"username\"\r\n                                                        value={username}\r\n                                                        className=\"tw_form_input\" required onChange={handleChange} />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div className=\"w-full md:w-1/2 px-3 mb-5\">\r\n                                                    <div><label className=\"block text-gray-700\">Phone Number</label> <input\r\n                                                        placeholder=\"Phone Number\" autoFocus=\"autofocus\" autoComplete\r\n                                                        type=\"tel\" value={phonenumber} name=\"phonenumber\"\r\n                                                        className=\"tw_form_input\" required onChange={handleChange} />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex -mx-3\">\r\n                                                <div className=\"w-full px-3 mb-5\">\r\n                                                    <div><label className=\"block text-gray-700\">Email</label> <input\r\n                                                        type=\"email\"\r\n                                                        placeholder=\"Enter Email\" autoComplete value={email}\r\n                                                        name=\"email\" required onChange={handleChange}\r\n                                                        className=\"tw_form_input\" /></div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex -mx-3\">\r\n                                                <div className=\"w-full px-3 mb-5\">\r\n                                                    <div>\r\n                                                        <label className=\"block text-gray-700\">Role</label>\r\n                                                        <input type=\"radio\" id=\"html\" name=\"role\" value=\"admin\" checked={user === 'admin'} onChange={handleChange} />Admin\r\n                                                        <input type=\"radio\" id=\"html\" name=\"role\" value=\"user\" checked={user === 'user'} className='ml-3' onChange={handleChange} />User\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex flex-wrap -mx-3\">\r\n                                                <div className=\"w-full md:w-1/2 px-3 mb-5\">\r\n                                                    <div><label className=\"block text-gray-700\">Password</label> <input\r\n                                                        type=\"password\"\r\n                                                        placeholder=\"Enter Password\" autoComplete value={password}\r\n                                                        name=\"password\" required onChange={handleChange}\r\n                                                        className=\"tw_form_input\" /></div>\r\n\r\n                                                </div>\r\n                                                <div className=\"w-full md:w-1/2 px-3 mb-5\">\r\n                                                    <div>\r\n                                                        <label className=\"block text-gray-700\">Confirm Password</label>\r\n                                                        <input type=\"password\"\r\n                                                            placeholder=\"Re Enter Password\" autoComplete value={repassword}\r\n                                                            name=\"repassword\" required onChange={handleChange}\r\n                                                            className=\"tw_form_input\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex -mx-3\">\r\n                                                <div className=\"w-full px-3 mb-5\">\r\n                                                    <button type=\"submit\" disabled={disabled} className=\"w-full block bg-primary-500 hover:bg-primary-400 focus:bg-primary-400 text-white font-semibold rounded-lg px-4 py-3 mt-6\">\r\n                                                        Create User\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div style={{marginTop : \"100Px\"}}>\r\n                                        <Lottie\r\n                                            options={defaultOptions}\r\n                                            height={500}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n\r\n    const showError = (error) => {\r\n        if (error) return (\r\n            notify(`${error}`)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showError(error)}\r\n            {signUpForm()}\r\n            <hr />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserCreate;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getSupportMessage, markSupport } from '../Api/support'\r\nimport { userInfo } from '../utils/auth';\r\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { notify } from '../utils/notification';\r\n\r\nfunction Support() {\r\n    const [support, setSupport] = useState([]);\r\n    const { token } = userInfo();\r\n\r\n    useEffect(() => {\r\n        getSupportMessage(token)\r\n            .then(res => setSupport(res.data))\r\n    }, [support])\r\n\r\n\r\n    const markResolved = (id) =>()=> {\r\n        markSupport(id)\r\n            .catch(err => {\r\n                notify('Something went wrong!')\r\n            })\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {support && support.map((data, index) => (\r\n                <Card key={index}>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col>\r\n                                <p>Name: {data.name}</p>\r\n                                <p>Email: {data.email}</p>\r\n                                <p>Phone No: {data.phone}</p>\r\n                            </Col>\r\n                            <Col>\r\n                                <p>requestType: {data.requestType}</p>\r\n                                <p>Message: {data.requestDescription}</p>\r\n                                <p>Date :{moment(data.createdAt).format('MMMM Do, YYYY, h:mm:ss a')}</p>\r\n                            </Col>\r\n                            <Col>\r\n                                <div className=\"font-bold\">Status</div>\r\n                                {data.active === true && (<>\r\n                                    <Button variant=\"danger\" onClick={markResolved(data._id)}>Mark as Resolved</Button>\r\n                                </>)}\r\n                                {data.active === false && (<>\r\n                                    <div style={{ color: '#01bf71',fontWeight:\"bold\" }}>Resolved</div>\r\n                                </>)}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Support;\r\n","import axios from \"axios\";\r\n\r\nimport { API } from \"../utils/config\";\r\n\r\nexport const createSupport = (token, id, data) => {\r\n    console.log(token, id, data)\r\n    return axios.post(`${API}support/${id}`, data, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getSupportMessage = (token) => {\r\n    return axios.get(`${API}support/`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const markSupport = (id) => {\r\n    return axios.put(`${API}support/${id}`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        }\r\n    })\r\n}","import React, {useState} from 'react';\r\n\r\nlet array = [];\r\nlet userIds = []\r\nlet arrayItem=['1']\r\nlet restart=false\r\nconst sendSmsAll = ({sendSmsAll, paginate, postsPerPage, allClick, done}) => {\r\n\r\n    const selectAll = (userId) => () => {\r\n        restart=true\r\n        if (!localStorage.getItem('phoneNumberArray')) {\r\n            array = []\r\n            userIds = []\r\n        }\r\n        const foundId = array.indexOf(userId);\r\n        if (foundId === -1) {\r\n            array.push(userId);\r\n            localStorage.setItem(\"phoneNumberArray\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"phoneNumberArray\", array)\r\n        }\r\n        userIds = localStorage.getItem('phoneNumberArray').split(',')\r\n    }\r\n\r\n    console.log(allClick,done)\r\n    return (\r\n        <>\r\n            {sendSmsAll && sendSmsAll.map((user, index) => (\r\n                <tr>\r\n                    {allClick === true && done === false && (\r\n                        <td><input onClick={selectAll(user.phonenumber)} type=\"checkbox\" checked={true} value={true}/>\r\n                        </td>\r\n                    )}\r\n                    {allClick===false &&  done===false &&(\r\n                        <td ><input onClick={selectAll(user.phonenumber)} type=\"checkbox\" /></td>\r\n                    )}\r\n                    {done===true &&(\r\n                        <td ><input onClick={selectAll(user.phonenumber)} type=\"checkbox\" checked={false} value={true}/></td>\r\n                    )}\r\n\r\n                    <td>{(paginate - 1) * parseInt(postsPerPage) + index + 1}</td>\r\n                    <td>{user.userIdNo}</td>\r\n                    <td>{user.username}</td>\r\n                    <td>{user.phonenumber}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default sendSmsAll;","import React, {useState} from 'react';\r\n\r\nlet array = [];\r\nlet userIds = []\r\nlet arrayItem=['1']\r\n\r\nconst sendSmsAll = ({sendSmsAll, paginate, postsPerPage, allActiveClick, activeDone}) => {\r\n\r\n    const selectAll = (userId) => () => {\r\n\r\n        if (!localStorage.getItem('activeUserPhoneNumberArray')) {\r\n            array = []\r\n            userIds = []\r\n        }\r\n        const foundId = array.indexOf(userId);\r\n        if (foundId === -1) {\r\n            array.push(userId);\r\n            localStorage.setItem(\"activeUserPhoneNumberArray\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"activeUserPhoneNumberArray\", array)\r\n        }\r\n        userIds = localStorage.getItem('activeUserPhoneNumberArray').split(',')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {sendSmsAll && sendSmsAll.map((user, index) => (\r\n                <tr>\r\n                    {allActiveClick === true && activeDone === false && (\r\n                        <td><input onClick={selectAll(user.userId.phonenumber)} type=\"checkbox\" checked={true} value={true}/>\r\n                        </td>\r\n                    )}\r\n                    {allActiveClick===false &&  activeDone===false &&(\r\n                        <td ><input onClick={selectAll(user.userId.phonenumber)} type=\"checkbox\" /></td>\r\n                    )}\r\n                    {activeDone===true &&(\r\n                        <td ><input onClick={selectAll(user.userId.phonenumber)} type=\"checkbox\" /></td>\r\n                    )}\r\n                    <td>{(paginate - 1) * parseInt(postsPerPage) + index + 1}</td>\r\n                    <td>{user.userId.userIdNo}</td>\r\n                    <td>{user.userId.username}</td>\r\n                    <td>{user.userId.phonenumber}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default sendSmsAll;","import React, {useState, useEffect} from 'react';\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {Card} from \"antd\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"./sendSmsAll\";\r\nimport Tables from './sendSmsAllActive'\r\nimport {getAllUserList,getActiveUserList} from \"../Api/user\";\r\nimport {userInfo} from '../utils/auth';\r\nimport Pagination from \"./Pagination\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Button, Form, Modal} from \"react-bootstrap\";\r\nimport {sendMessageAllUser} from \"../Api/sendMessage\";\r\nimport {notify} from '../utils/notification';\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{p: 3}}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction SendSms() {\r\n    let history = useHistory();\r\n\r\n    const {token, role} = userInfo();\r\n\r\n    const [allUserList, setAllUserList] = useState([]);\r\n\r\n    const [activeUserList, setActiveUserList] = useState([]);\r\n\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const [user, setUser] = useState(0);\r\n\r\n    const [activeUser, setActiveUser] = useState(0);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [show2, setShow2] = useState(false);\r\n\r\n    const [done, setDone] = useState(false);\r\n\r\n    const [activeDone, setActiveDone] = useState(false);\r\n\r\n    const [allClick, setAllClick] = useState(false);\r\n\r\n    const [allActiveClick, setAllActiveClick] = useState(false);\r\n\r\n    const handleChanges = (event,newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(10);\r\n\r\n    const [currentPages, setCurrentPages] = useState(1);\r\n    const [postsPerPages, setPostsPerPages] = useState(10);\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = allUserList.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const indexOfLastPosts = currentPages * postsPerPages;\r\n    const indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n    const currentPosts = activeUserList.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber)\r\n        setUser(pageNumber)\r\n    }\r\n\r\n    const paginates = pageNumber => {\r\n        setCurrentPages(pageNumber)\r\n        setActiveUser(pageNumber)\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllUserList(token)\r\n            .then(response => {\r\n                setAllUserList(response.data)\r\n            })\r\n        getActiveUserList(token)\r\n            .then(response => {\r\n                setActiveUserList(response.data)\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    const rowSelectForAllUserTable = (e) => {\r\n        setPostsPerPage(e.target.value)\r\n    }\r\n    let selectArray = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\r\n\r\n    const nextPage = () => {\r\n        if (allClick === true) {\r\n            setShow(true)\r\n        } else if (!localStorage.getItem('phoneNumberArray')) {\r\n            notify(\"Please select at least one number\")\r\n        } else {\r\n            setShow(true)\r\n        }\r\n    }\r\n\r\n    const nextPageActive = () => {\r\n        if (allActiveClick === true) {\r\n            setShow2(true)\r\n        } else if (!localStorage.getItem('activeUserPhoneNumberArray')) {\r\n            notify(\"Please select at least one number\")\r\n        } else {\r\n            setShow2(true)\r\n        }\r\n    }\r\n\r\n    const [text, setText] = useState({\r\n        text: '',\r\n        disabled: false\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setText({\r\n            ...text,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n        setShow2(false)\r\n    };\r\n\r\n    const sendSms = () => {\r\n        setDone(true)\r\n        let numberArray = [];\r\n        if (allClick === true) {\r\n            for (let user of allUserList) {\r\n                numberArray.push(user.phonenumber)\r\n            }\r\n        } else {\r\n            numberArray = localStorage.getItem(\"phoneNumberArray\").split(\",\")\r\n        }\r\n\r\n        let sendMessage = {\r\n            numbers: numberArray,\r\n            message: text.text.replaceAll(\" \", \"%20\").replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n        }\r\n        sendMessageAllUser(sendMessage)\r\n\r\n            .then(res => {\r\n                handleClose()\r\n                setDone(false)\r\n                setAllClick(false)\r\n                notify(\"Message send successfully\")\r\n                localStorage.setItem(\"phoneNumberArray\", [])\r\n            })\r\n            .catch(err => {\r\n                console.log(\"err\", err)\r\n                notify(\"Something went wrong! Please try again\")\r\n            })\r\n    }\r\n\r\n    const sendSmsActiveUser = () => {\r\n        setActiveDone(true)\r\n        let numberArray = [];\r\n        if (allActiveClick === true) {\r\n            for (let user of activeUserList) {\r\n                numberArray.push(user.userId.phonenumber)\r\n            }\r\n        } else {\r\n            numberArray = localStorage.getItem(\"activeUserPhoneNumberArray\").split(\",\")\r\n        }\r\n\r\n        let sendMessage = {\r\n            numbers: numberArray,\r\n            message: text.text.replaceAll(\" \", \"%20\").replace(/(\\r\\n|\\n|\\r)/gm, \"\\n\")\r\n        }\r\n\r\n        sendMessageAllUser(sendMessage)\r\n            .then(res => {\r\n                handleClose()\r\n                setActiveDone(false)\r\n                setAllActiveClick(false)\r\n                notify(\"Message send successfully\")\r\n                localStorage.setItem(\"phoneNumberArray\", [])\r\n            })\r\n            .catch(err => {\r\n                console.log(\"err\", err)\r\n                notify(\"Something went wrong! Please try again\")\r\n            })\r\n    }\r\n\r\n    const allCheckbox = () => {\r\n        setDone(false)\r\n        setAllClick(!allClick)\r\n    }\r\n\r\n    const allActiveCheckbox = () => {\r\n        setActiveDone(false)\r\n        setAllActiveClick(!allActiveClick)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"phoneNumberArray\", [])\r\n        localStorage.setItem(\"activeUserPhoneNumberArray\", [])\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Body style={{margin: \"10px\"}}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Send SMS</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={5} placeholder={\"Write something....\"}\r\n                                          onChange={handleChange} name=\"text\"/>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={sendSms}>\r\n                        Send\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={show2} onHide={handleClose}>\r\n                <Modal.Body style={{margin: \"10px\"}}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Send SMS</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={5} placeholder={\"Write something....\"}\r\n                                          onChange={handleChange} name=\"text\"/>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={sendSmsActiveUser}>\r\n                        Send\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Box sx={{width: '100%'}}>\r\n                <Box sx={{borderBottom: 1, borderColor: 'divider'}}>\r\n                    <Tabs value={value} onChange={handleChanges} aria-label=\"basic tabs example\">\r\n                        <Tab label=\"All user list\" {...a11yProps(0)} />\r\n                        <Tab label=\"Active user list\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                </Box>\r\n\r\n                <TabPanel value={value} index={0}>\r\n                    <Card title={`All User List`}>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                            <tr>\r\n                                {done === false && (\r\n                                    <th scope=\"col\"><input onClick={allCheckbox} type=\"checkbox\"/></th>\r\n                                )}\r\n                                {done === true && (\r\n                                    <th scope=\"col\"><input onClick={allCheckbox} type=\"checkbox\" checked={false}\r\n                                                           value={true}/></th>\r\n                                )}\r\n\r\n                                <th className=\"border-0\">#</th>\r\n                                <th className=\"border-0\">Customer ID</th>\r\n                                <th className=\"border-0\">Customer Name</th>\r\n                                <th className=\"border-0\">Customer Phone Number</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <Table sendSmsAll={currentPost} paginate={currentPage} postsPerPage={postsPerPage}\r\n                                   allClick={allClick} done={done}/>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className='d-flex'>\r\n                            <Pagination\r\n                                postsPerPage={postsPerPage}\r\n                                totalPosts={allUserList.length}\r\n                                paginate={paginate}\r\n                                Number={user}\r\n                            />\r\n                            {allUserList.length > 0 && (\r\n                                <div className='ml-5'>\r\n                                    <select style={{cursor: 'pointer'}} onChange={(e) => rowSelectForAllUserTable(e)}>\r\n                                        {selectArray.map(number => {\r\n                                            return (\r\n                                                <option value={number}>{number}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"btn btn-danger\" onClick={nextPage}>Next</button>\r\n                        </div>\r\n                    </Card>\r\n                    <br/>\r\n                </TabPanel>\r\n\r\n                <TabPanel value={value} index={1}>\r\n                    <Card title={`Active User List`}>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                            <tr>\r\n                                {activeDone === false && (\r\n                                    <th scope=\"col\"><input onClick={allActiveCheckbox} type=\"checkbox\"/></th>\r\n                                )}\r\n                                {activeDone === true && (\r\n                                    <th scope=\"col\"><input onClick={allActiveCheckbox} type=\"checkbox\" checked={false}\r\n                                                           value={true}/></th>\r\n                                )}\r\n                                <th className=\"border-0\">#</th>\r\n                                <th className=\"border-0\">Customer ID</th>\r\n                                <th className=\"border-0\">Customer Name</th>\r\n                                <th className=\"border-0\">Customer Phone Number</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <Tables sendSmsAll={currentPosts} paginate={currentPages} postsPerPage={postsPerPages} allActiveClick={allActiveClick}\r\n                                    activeDone={activeDone}/>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className='d-flex'>\r\n                            <Pagination\r\n                                postsPerPage={postsPerPages}\r\n                                totalPosts={activeUserList.length}\r\n                                paginate={paginates}\r\n                                Number={activeUser}\r\n                            />\r\n                            {allUserList.length > 0 && (\r\n                                <div className='ml-5'>\r\n                                    <select style={{cursor: 'pointer'}} onChange={(e) => rowSelectForAllUserTable(e)}>\r\n                                        {selectArray.map(number => {\r\n                                            return (\r\n                                                <option value={number}>{number}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"btn btn-danger\" onClick={nextPageActive}>Next</button>\r\n                        </div>\r\n                    </Card>\r\n                    <br/>\r\n                </TabPanel>\r\n\r\n            </Box>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendSms;\r\n","/*!\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v2.0.0\r\n=========================================================\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n* Coded by Creative Tim\r\n=========================================================\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\nimport Dashboard from \"views/Dashboard.js\";\r\nimport UserProfile from \"views/UserProfile.js\";\r\nimport TableList from \"views/TableList.js\";\r\nimport Orders from \"views/Orders\";\r\nimport Utility from \"views/Utility\";\r\nimport Products from \"./views/Products\";\r\nimport OrderHandle from \"./views/OrderHandle\";\r\nimport PurchaseApprove from \"./views/PurchaseApprove\";\r\nimport UserCreate from './views/UserCreate';\r\nimport Support from './views/Support';\r\nimport sendSms from './views/SendSms';\r\n\r\nconst dashboardRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"nc-icon nc-chart-pie-35\",\r\n    component: Dashboard,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/createUser\",\r\n    name: \"User Create\",\r\n    icon: \"nc-icon nc-chart-pie-35\",\r\n    component: UserCreate,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/user\",\r\n    name: \"Admin Profile\",\r\n    icon: \"nc-icon nc-circle-09\",\r\n    component: UserProfile,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/table\",\r\n    name: \"Table List\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: TableList,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/product\",\r\n    name: \"Products\",\r\n    icon: \"nc-icon nc-paper-2\",\r\n    component: Products,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/orders\",\r\n    name: \"Orders\",\r\n    icon: \"nc-icon nc-atom\",\r\n    component: Orders,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/purchase\",\r\n    name: \"Approval Purchase\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: PurchaseApprove,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/handleOrder\",\r\n    name: \"Handle Order\",\r\n    icon: \"nc-icon nc-bell-55\",\r\n    component: OrderHandle,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/utility\",\r\n    name: \"Utility\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: Utility,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/support\",\r\n    name: \"Support\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: Support,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/sendSms\",\r\n    name: \"Send Sms\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: sendSms,\r\n    layout: \"/admin\",\r\n  },\r\n];\r\n\r\nexport default dashboardRoutes;","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Navbar, Container, Nav, Dropdown, Button } from \"react-bootstrap\";\r\n\r\nimport routes from \"routes.js\";\r\nimport { userInfo } from '../../utils/auth';\r\nimport { deleteAllProduct } from \"../../Api/user\";\r\nimport { updateUserActiveStatus } from \"../../Api/user\";\r\nimport { getNotifications,editNotifications } from '../../Api/notification'\r\nimport {removeJwt} from \"../../Api/user\";\r\n\r\nfunction Header() {\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [viewNotifications, setViewNotifications] = useState([]);\r\n    const { token, id } = userInfo();\r\n    const location = useLocation();\r\n    const mobileSidebarToggle = (e) => {\r\n        e.preventDefault();\r\n        document.documentElement.classList.toggle(\"nav-open\");\r\n        const node = document.createElement(\"div\");\r\n        node.id = \"bodyClick\";\r\n        node.onclick = function () {\r\n            this.parentElement.removeChild(this);\r\n            document.documentElement.classList.toggle(\"nav-open\");\r\n        };\r\n        document.body.appendChild(node);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNotifications(token, id)\r\n            .then(res => {\r\n                if (res.data[0]) {\r\n                    setNotifications(res.data[0].notifications)\r\n                    setViewNotifications(res.data[0].view)\r\n                }\r\n            })\r\n    }, [notifications]);\r\n\r\n\r\n    const getBrandText = () => {\r\n        for (let i = 0; i < routes.length; i++) {\r\n            if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\r\n                return routes[i].name;\r\n            }\r\n        }\r\n        return \"Brand\";\r\n    };\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        removeJwt()\r\n        updateUserActiveStatus('inActive')\r\n        deleteAllProduct()\r\n        localStorage.clear()\r\n    }\r\n\r\n    const viewNotification=()=>{\r\n        editNotifications(token,id)\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Container fluid>\r\n                <div className=\"d-flex justify-content-center align-items-center ml-2 ml-lg-0\">\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"d-lg-none btn-fill d-flex justify-content-center align-items-center rounded-circle p-2\"\r\n                        onClick={mobileSidebarToggle}\r\n                    >\r\n                        <i className=\"fas fa-ellipsis-v\" />\r\n                    </Button>\r\n                    <Navbar.Brand\r\n                        href=\"#home\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                        className=\"mr-2\"\r\n                    >\r\n                        {getBrandText()}\r\n                    </Navbar.Brand>\r\n                </div>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mr-2\">\r\n                    <span className=\"navbar-toggler-bar burger-lines\" />\r\n                    <span className=\"navbar-toggler-bar burger-lines\" />\r\n                    <span className=\"navbar-toggler-bar burger-lines\" />\r\n                </Navbar.Toggle>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"nav mr-auto\" navbar>\r\n                        <Nav.Item>\r\n                            <Nav.Link\r\n                                data-toggle=\"dropdown\"\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                                className=\"m-0\"\r\n                            >\r\n                                <i className=\"nc-icon nc-palette\" />\r\n                                <span className=\"d-lg-none ml-1\">Dashboard</span>\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Dropdown as={Nav.Item}>\r\n                            <Dropdown.Toggle\r\n                                as={Nav.Link}\r\n                                data-toggle=\"dropdown\"\r\n                                id=\"dropdown-67443507\"\r\n                                variant=\"default\"\r\n                                className=\"m-0\"\r\n                                \r\n                            >\r\n                                <i className=\"nc-icon nc-planet\" onClick={viewNotification}/>\r\n                                {viewNotifications === false && <>\r\n                                    <span className=\"notification\"></span>\r\n                                    \r\n                                </>}\r\n                                <span className=\"d-lg-none ml-1\" >Notification</span>\r\n\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                {notifications && notifications.map((notification, index) => (\r\n                                    <Dropdown.Item >\r\n                                        {notification}\r\n                                    </Dropdown.Item>\r\n                                ))}\r\n\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        <Nav.Item>\r\n                            <Nav.Link\r\n                                className=\"m-0\"\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                            >\r\n\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n\r\n                        <Nav.Item>\r\n                            <Nav.Link\r\n                                className=\"m-0\"\r\n                                onClick={(e) => logout(e)}\r\n\r\n                            >\r\n                                <Link to=\"/\" className=\"no-icon\">Log out</Link>\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v2.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer px-0 px-lg-3\">\r\n        <Container fluid>\r\n          <nav>\r\n            {/*<ul className=\"footer-menu\">*/}\r\n            {/*  <li>*/}\r\n            {/*    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>*/}\r\n            {/*      Home*/}\r\n            {/*    </a>*/}\r\n            {/*  </li>*/}\r\n            {/*  <li>*/}\r\n            {/*    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>*/}\r\n            {/*      Company*/}\r\n            {/*    </a>*/}\r\n            {/*  </li>*/}\r\n            {/*  <li>*/}\r\n            {/*    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>*/}\r\n            {/*      Portfolio*/}\r\n            {/*    </a>*/}\r\n            {/*  </li>*/}\r\n            {/*  <li>*/}\r\n            {/*    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>*/}\r\n            {/*      Blog*/}\r\n            {/*    </a>*/}\r\n            {/*  </li>*/}\r\n            {/*</ul>*/}\r\n            <p className=\"copyright text-center\">\r\n              © {new Date().getFullYear()}{\" \"}\r\n              <a href=\"https://www.bengalsoftware.com/\">Bengal Software</a>, made with\r\n              love for a better web\r\n            </p>\r\n          </nav>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/reactlogo.55f6660b.png\";","\r\nimport React, { Component } from \"react\";\r\nimport { useLocation, NavLink } from \"react-router-dom\";\r\n\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nimport logo from \"assets/img/reactlogo.png\";\r\n\r\nfunction Sidebar({ color, image, routes }) {\r\n  const location = useLocation();\r\n  const activeRoute = (routeName) => {\r\n    return location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  };\r\n  return (\r\n    <div className=\"sidebar\" data-image={image} data-color={color}>\r\n      <div\r\n        className=\"sidebar-background\"\r\n        style={{\r\n          backgroundImage: \"url(\" + image + \")\",\r\n        }}\r\n      />\r\n      <div className=\"sidebar-wrapper\">\r\n        <div className=\"logo d-flex align-items-center justify-content-start\">\r\n          <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-mini mx-1\"\r\n          >\r\n            <div className=\"logo-img\">\r\n              {/*<img*/}\r\n              {/*  src=\"#\"*/}\r\n              {/*  alt=\"logo\"*/}\r\n              {/*/>*/}\r\n            </div>\r\n          </a>\r\n          <a className=\"simple-text\" href=\"https://www.bengalsoftware.com\" target=\"_blank\">\r\n            Cizishop\r\n          </a>\r\n        </div>\r\n        <Nav>\r\n          {routes.map((prop, key) => {\r\n            if (!prop.redirect)\r\n              return (\r\n                <li\r\n                  className={\r\n                    prop.upgrade\r\n                      ? \"active active-pro\"\r\n                      : activeRoute(prop.layout + prop.path)\r\n                  }\r\n                  key={key}\r\n                >\r\n                  <NavLink\r\n                    to={prop.layout + prop.path}\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <i className={prop.icon} />\r\n                    <p>{prop.name}</p>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            return null;\r\n          })}\r\n        </Nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","export default __webpack_public_path__ + \"static/media/sidebar-3.9992d0ce.jpg\";","\r\nimport React, { Component,useEffect } from \"react\";\r\n\r\nimport { useLocation, Route, Switch } from \"react-router-dom\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\nimport Footer from \"components/Footer/Footer\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport sidebarImage from \"assets/img/sidebar-3.jpg\";\r\n\r\nfunction Admin() {\r\n  \r\n  useEffect(() => {\r\n    localStorage.removeItem('values');\r\n  }, []);\r\n\r\n  const [image, setImage] = React.useState(sidebarImage);\r\n  const [color, setColor] = React.useState(\"black\");\r\n  const [hasImage, setHasImage] = React.useState(true);\r\n  const location = useLocation();\r\n  const mainPanel = React.useRef(null);\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            render={(props) => <prop.component {...props} />}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  React.useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainPanel.current.scrollTop = 0;\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n      const element = document.getElementById(\"bodyClick\");\r\n      element.parentNode.removeChild(element);\r\n    }\r\n  }, [location]);\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Sidebar color={color} image={hasImage ? image : \"\"} routes={routes} />\r\n        <div className=\"main-panel\" ref={mainPanel}>\r\n          <AdminNavbar />\r\n          <div className=\"content\">\r\n            <Switch>{getRoutes(routes)}</Switch>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n      {/*<FixedPlugin*/}\r\n      {/*  hasImage={hasImage}*/}\r\n      {/*  setHasImage={() => setHasImage(!hasImage)}*/}\r\n      {/*  color={color}*/}\r\n      {/*  setColor={(color) => setColor(color)}*/}\r\n      {/*  image={image}*/}\r\n      {/*  setImage={(image) => setImage(image)}*/}\r\n      {/*/>*/}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { isAuthenticated ,userInfo} from '../../utils/auth';\r\n\r\nconst AdminRoute = ({ children, ...rest }) => { \r\n    const {role}=userInfo();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                isAuthenticated() && role==='admin' || role==='superadmin'? (\r\n                    children \r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AdminRoute;","export default __webpack_public_path__ + \"static/media/3930.461e59fc.jpg\";","import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Card, Col, Form, Row, Button} from \"react-bootstrap\";\r\nimport \"./gameinfo.css\"\r\nimport styled from 'styled-components';\r\nimport {isAuthenticated} from '../../../../utils/auth';\r\nimport {getOneUser} from '../../../../Api/user';\r\nimport {userInfo} from '../../../../utils/auth';\r\nimport NotificationModal from './NotificationModal';\r\nimport {updateWallet, getWalletById} from '../../../../Api/wallet';\r\nimport {createNewPurchase} from '../../../../Api/purchase';\r\nimport {createNewOrder} from '../../../../Api/order';\r\nimport {notify} from '../../../../utils/notification'\r\nimport {getOneProduct} from \"../../../../Api/products\";\r\nimport Logo2 from \"../../../../assets/img/logo.png\";\r\nimport {createNotifications} from '../../../../Api/notification'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nlet activeIdCode = false;\r\nlet activeError = false;\r\n\r\nconst Buttons = styled.button`\r\n  background-color: #28af3a;\r\n  color: whitesmoke;\r\n  font-size: 15px;\r\n  padding: 5px 40px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  width: 250px;\r\n  min-height: 50px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  @media screen and (max-width: 882px) {\r\n    padding: 5px 20px;\r\n    margin-top: 2px;\r\n    width: 150px;\r\n    font-size: 13px;\r\n  }\r\n  @media screen and (max-width: 640px) {\r\n    padding: 5px 20px;\r\n    margin-top: 2px;\r\n    width: 120px;\r\n    font-size: 10px;\r\n  }\r\n  &:disabled {\r\n    color: #28af3a;\r\n    background-color: white;\r\n    opacity: 1;\r\n    cursor: default;\r\n  }\r\n`;\r\n\r\nconst ButtonToggle = styled(Buttons)`\r\n  color: #28af3a;\r\n  background-color: white;\r\n  border: 1px solid #28af3a;\r\n  ${({active}) =>\r\n          active &&\r\n          `\r\n    color: white;\r\n    background-color: #28af3a;\r\n    \r\n  `}\r\n`;\r\n\r\n\r\nconst account = [\r\n    {\r\n        type: \"Facebook\"\r\n    },\r\n    {\r\n        type: \"Google\"\r\n    }\r\n]\r\n\r\n\r\nconst GameInfo = (props) => {\r\n    const [accountSelect, setAccountType] = useState({\r\n            accountType: ''\r\n        }\r\n    )\r\n\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const [form, setForm] = useState({})\r\n    const [user, setUser] = useState({})\r\n    const [topUp, setTopUP] = useState([])\r\n    const [active, setActive] = useState(topUp[0]);\r\n    const idData = useParams()\r\n    const sid = idData.id\r\n    const productId = idData.productId\r\n    const {accountName} = account\r\n    const [show, setShow] = useState(false);\r\n    const [msg, setMsg] = useState('');\r\n    const [isWallet, setIsWallet] = useState(false);\r\n    const [walletId, setWalletId] = useState('');\r\n    const [balance, setBalance] = useState({});\r\n    const [recharge, setRecharge] = useState(0);\r\n    const [caategoryType, setcategoryType] = useState({})\r\n    const [productInfo, setProductInfo] = useState({})\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [buttonDisabled, setButtonDisabled] = useState({\r\n        disabled: false\r\n    })\r\n\r\n    const {disabled} = buttonDisabled;\r\n\r\n    function handleOption(e) {\r\n        setAccountType({\r\n            ...accountSelect,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n        console.log(accountSelect)\r\n    }\r\n\r\n\r\n    function func2(option, price) {\r\n        setValues({\r\n            ...values,\r\n            product: {\r\n                [option]: price\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n    function addBalance() {\r\n        history.push({\r\n            pathname: '/confirmation',\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        activeIdCode = false;\r\n        getOneProduct(productId)\r\n            .then((res) => {\r\n                let allData = res.data.categoryName\r\n                setcategoryType(allData)\r\n                setProductInfo(res)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated()) {\r\n            const {token, id} = userInfo();\r\n            getOneUser(id)\r\n                .then(response => {\r\n                    setUser(response.data), setWalletId(response.data.wallet)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err.response);\r\n                });\r\n        }\r\n\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated()) {\r\n            const {token} = userInfo();\r\n            getWalletById(token, walletId)\r\n                .then(response => setBalance(response.data))\r\n                .catch((err) => {\r\n                    console.log(err.response);\r\n                });\r\n        }\r\n    }, [walletId]);\r\n\r\n\r\n    useEffect(() => {\r\n        getOneProduct(idData.productId)\r\n            .then((res) => {\r\n                setTopUP(res.data.topUp)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n\r\n    const [values, setValues] = useState({\r\n        productId: productId,\r\n        accountType: '',\r\n        Number: '',\r\n        Password: '',\r\n        backupCode: '',\r\n        idCode: '',\r\n        product: {}\r\n    });\r\n\r\n    let {accountType, Number, Password, backupCode, product, idCode} = values;\r\n\r\n    const handleChange = (e) => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n\r\n        if (Object.keys(values.product).length === 0) {\r\n            activeError = true\r\n        } else {\r\n            values.idCodeActive = activeIdCode\r\n\r\n            setButtonDisabled({\r\n                disabled: true\r\n            })\r\n            if (!isAuthenticated()) {\r\n\r\n                history.push({\r\n                    pathname: '/login',\r\n                });\r\n                //test.bdsell.net\r\n\r\n                history.push({pathname: '/login'});\r\n            }\r\n            if (user && user.wallet === null) {\r\n                handleShow()\r\n                setMsg('Do You want to create your wallet?')\r\n\r\n            }\r\n\r\n            let amount = 0\r\n            for (let x in product) {\r\n                amount = product[x]\r\n            }\r\n            let spent = amount\r\n\r\n            if (user && user.wallet != null) {\r\n                if (balance.currentAmount < amount) {\r\n                    const due = amount - balance.currentAmount\r\n                    setIsWallet(true)\r\n                    setButtonDisabled({\r\n                        disabled: false\r\n                    })\r\n                    setMsg(`You Need ${due} taka more to purchase the product. Do you want to recharge?`)\r\n                    handleShow()\r\n                } else {\r\n                    const {token, id,} = userInfo();\r\n                    createNewPurchase(token, values)\r\n                        .then(response => {\r\n                            const data = {\r\n                                userId: id,\r\n                                purchaseId: response.data.purchase._id,\r\n                                productId: response.data.purchase.productId,\r\n                                walletId: user.wallet,\r\n                                paymentComplete: true\r\n                            }\r\n                            createNewOrder(token, data)\r\n                                .then(response => {\r\n                                    const amount = 0\r\n                                    updateWallet(token, user.wallet, amount, spent)\r\n                                        .then(res => {\r\n                                            notify('Order Created. Please wait for admin approval')\r\n                                            createNotifications(token, id, `You have placed an order on ${productInfo.data.gameName}. Purchase Package: ${(Object.keys(values.product))[0]} ${((Object.values(values.product))[0])} Taka. Order Date:  ${moment().format('MMMM Do YYYY, h:mm a')}. Please wait for admin approval`)\r\n                                            history.push('/myOrder')\r\n                                        })\r\n                                })\r\n                                .catch(err => {\r\n                                    setTimeout(reloadPage, 2000)\r\n                                    notify('Something Failed! Please try again')\r\n                                })\r\n                        })\r\n                        .catch(err => {\r\n                            let errMsg = \"Something went wrong!\";\r\n                            if (err.response) errMsg = err.response.data;\r\n                            notify(errMsg)\r\n                            setTimeout(reloadPage, 2000)\r\n                        })\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const reloadPage = () => {\r\n        window.location.reload(false)\r\n    }\r\n\r\n    const setField = (field, value) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: value\r\n        })\r\n    }\r\n    const accountTypeExist = () => {\r\n        if (accountType) {\r\n            return (\r\n                <>\r\n                    <Form.Label>Backup Code</Form.Label>\r\n                    <Form.Control placeholder=\"Backup Code\" name=\"backupCode\" value={backupCode}\r\n                                  onChange={handleChange}/>\r\n                    <div className=\"p-1 d-flex justify-content-lg-end\"><a style={{color: 'red'}}\r\n                                                                          href={productInfo.data?.backUpLink}\r\n                                                                          target=\"_blank\" rel=\"noopener noreferrer\">How\r\n                        To Get Backup Code</a></div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    function accountTypeChange() {\r\n        if (caategoryType === \"(IDCode)\") {\r\n            activeIdCode = true\r\n            return (\r\n                <Card className=\"mb-4\">\r\n                    <Card.Body>\r\n                        <div><label className=\"block text-gray-700\">Enter Player ID</label>\r\n                            <input onkeyup=\"value=isNaN(parseFloat(value))||value<0||value>9000?1000:value\"\r\n                                   type=\"number\" name=\"idCode\" className=\"form-control\" placeholder=\"Enter Player ID\"\r\n                                   value={idCode}\r\n                                   required onChange={handleChange} autoFocus=\"autofocus\"\r\n                                   autoComplete={true}\r\n                                   className=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-500 focus:bg-white focus:outline-none\"/>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            )\r\n        } else {\r\n            return (\r\n                <Card className=\"mb-4\">\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={4} xl={4}>\r\n                                <Form.Label>Account Type</Form.Label>\r\n                                <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                                              value={accountType} name=\"accountType\" onChange={handleChange}>\r\n                                    <option>Select an account type</option>\r\n                                    {\r\n                                        account.map((data, index) => {\r\n                                                return (\r\n                                                    <option key={index}>{data.type}</option>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col xs={12} sm={12} md={4} xl={4}>\r\n                                <Form.Label>{accountType} Account\r\n\r\n                                </Form.Label>\r\n                                <Form.Control placeholder={`${accountType} account`} name=\"Number\" value={Number}\r\n                                              onChange={e => {\r\n                                                  handleChange(e);\r\n                                                  setField('name', e.target.value)\r\n                                              }} required/>\r\n                            </Col>\r\n                            <Col xs={12} sm={12} md={4} xl={4}>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control placeholder=\"Password\" name=\"Password\" value={Password}\r\n                                              onChange={handleChange}/>\r\n                            </Col>\r\n                        </Row>\r\n                        {accountTypeExist()}\r\n                    </Card.Body>\r\n                </Card>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NotificationModal show={show} msg={msg} handleClose={handleClose} addBalance={addBalance}/>\r\n            <div as={Form}>\r\n                {accountTypeChange()}\r\n                <Card className=\"mb-4\">\r\n                    <Card.Body>\r\n                        <Form.Label>Select Recharge</Form.Label>\r\n\r\n                        <div style={{display: \"flex\", flexWrap: \"wrap\", textAlign: \"center\", justifyContent: \"center\"}}>\r\n                            {topUp && topUp.map((product, index) => {\r\n                                return (\r\n                                    <ButtonToggle key={product._id}\r\n                                                  active={active === product._id}\r\n                                                  onClick={function (event) {\r\n                                                      setActive(product._id);\r\n                                                      func2(product.option, product.price)\r\n                                                  }}\r\n                                                  variant=\"outline-primary\">\r\n                                        <div className='d-flex justify-content-center font-bold text-center'>\r\n                                            <div>\r\n                                                {product.option}\r\n                                            </div>\r\n                                            <div className=\"text-red ml-2\">BDT{product.price}</div>\r\n                                        </div>\r\n                                    </ButtonToggle>\r\n                                )\r\n                            })}\r\n\r\n                        </div>\r\n\r\n                        {activeError === true && (<>\r\n                            <p style={{color: \"red\", marginLeft: \"5px\"}}>Please select a package</p>\r\n                        </>)}\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Form.Label>Select Wallet</Form.Label>\r\n                        <div className=\"d-flex justify-content-center \" >\r\n                            <Card>\r\n                                <Card.Body style={{backgroundColor : '#004d25', color: 'white'}}>\r\n                                    <img width='95px' src={Logo2} alt=\"sizishop\"/>\r\n                                    PipoBazar Wallet\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n                <div className='d-flex justify-content-end'>\r\n                    <Button style={{backgroundColor: '#004d25', borderColor: '#004d25' }} data={values} disabled={disabled} className=\"d-flex justify-content-center\"\r\n                            onClick={handleSubmit}>Submit</Button>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default GameInfo","import { useState, useEffect } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { login } from '../../Api/auth'\r\nimport { isAuthenticated,authenticate } from '../../utils/auth';\r\nimport {\r\n    AiOutlineGoogle,\r\n    AiFillFacebook,\r\n} from \"react-icons/ai\";\r\n\r\nimport './User.css';\r\nimport { Form } from \"react-bootstrap\";\r\nimport { notify } from '../../utils/notification'\r\nlet jwt = null;\r\nimport { getJwt, removeJwt } from \"../../Api/user\";\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    useEffect(()=> {\r\n        if(isAuthenticated()){\r\n            history.push({pathname: '/admin'})\r\n        }\r\n    })\r\n\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n        success: false,\r\n        error: false,\r\n        disabled: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getJwt()\r\n            .then(res => {\r\n                jwt = res.data\r\n                getJwtToken()\r\n            })\r\n    });\r\n\r\n\r\n    const getJwtToken = () => {\r\n        if (jwt) {\r\n            authenticate(jwt, () => {\r\n                let jwtToken = localStorage.getItem('jwt')\r\n                if (jwtToken) {\r\n                    return (\r\n                        setValues({\r\n                            ...values,\r\n                            success: true,\r\n                            error: false,\r\n                        })\r\n                    )\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    const { email, password, success, error, disabled } = values;\r\n\r\n    const handleChange = e => {\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({ ...values, error: false, disabled: true })\r\n        login({ email, password })\r\n            .then(response => {\r\n                authenticate(response.data.token, () => {\r\n                    setValues({\r\n                        email: '',\r\n                        password: '',\r\n                        success: true,\r\n                        error: false,\r\n                        disabled: false,\r\n                    })\r\n                })\r\n            })\r\n            .catch(err => {\r\n                let errMsg = 'Something went wrong!';\r\n                if (err.response) {\r\n                    errMsg = err.response.data;\r\n                } else {\r\n                    errMsg = 'Something went wrong!';\r\n                }\r\n                setValues({ ...values, error: errMsg, disabled: false })\r\n            })\r\n    }\r\n\r\n    const LoginForm = () => (\r\n        <>\r\n            {/*<NavBar />*/}\r\n            <div class=\"mx-auto\" data-v-791b20d9>\r\n                <div data-v-791b20d9>\r\n                    <section class=\"flex flex-col md:flex-row items-center md:justify-center py-10 md:py-6\" data-v-791b20d9>\r\n                        <div class=\"bg-white w-full md:w-[450px] px-6 lg:px-8 flex items-start py-12 justify-center relative flex-shrink\">\r\n                            <div class=\"w-full h-full\">\r\n                                <h1 class=\"text-xl md:text-2xl font-bold leading-tight\">\r\n                                    Log in to Admin Dashboard\r\n                                </h1>\r\n                                <Form onSubmit={handleSubmit} method=\"post\" class=\"mt-6\">\r\n                                    <div><label class=\"block text-gray-700\">Email Address</label>\r\n                                        <input type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Enter Email\" value={email} required onChange={handleChange} autofocus=\"autofocus\"\r\n                                            autoComplete\r\n                                            class=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-500 focus:bg-white focus:outline-none\" />\r\n                                    </div>\r\n\r\n                                    <div class=\"mt-4\"><label class=\"block text-gray-700\">Password</label> <input\r\n                                        type=\"password\" name=\"password\" className=\"form-control\" value={password} required onChange={handleChange} placeholder=\"Enter Password\" class=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-500\r\n            focus:bg-white focus:outline-none\"/></div>\r\n\r\n                                    <div class=\"text-right mt-2\"><Link to=\"forgotPassword\"\r\n                                        class=\"text-sm font-semibold text-gray-700 hover:text-primary-700 focus:text-primary-700\">Forgot\r\n                                        Password?</Link></div>\r\n                                    <button style={{backgroundColor: '#004d25', borderColor: '#004d25' }} onSubmit={handleSubmit} disabled={disabled} type=\"submit\" class=\"w-full block   0 text-white font-semibold rounded-lg\r\n          px-4 py-3 mt-6\">\r\n                                        Login\r\n                                    </button>\r\n                                    <div className=\"flex-c-m\">\r\n                                        <div style={{ fontWeight: \"bold\" }}>Login with </div>\r\n                                        {/* <a href=\"http://localhost:3001/auth/facebook\" className=\"login100-social-item bg3\">\r\n                                            <AiOutlineGoogle />\r\n                                        </a> */}\r\n\r\n                                        <a href=\"https://cizishop-backend2334.herokuapp.com/auth/google\" style={{color: '#004d25', borderColor: '#004d25'}} className=\"login100-social-item \">\r\n                                            <AiOutlineGoogle  />\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                </Form>\r\n                                <hr class=\"my-6 border-gray-300 w-full\" />\r\n\r\n                                <p class=\"mt-5 text-center \">\r\n                                    Need an account?\r\n                                    <Link to='registration'\r\n                                          style={{color : '#004d25'}}\r\n                                        class=\"text-primary-500 hover:text-primary-700 font-semibold ml-2\">Create an\r\n                                        account</Link>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n            {/*<Footer />*/}\r\n        </>\r\n    );\r\n\r\n    const showSuccess = () => {\r\n        if (success) return (\r\n            <Redirect to='/' />\r\n        )\r\n    }\r\n\r\n    const showError = (error) => {\r\n        if (error.success === false) return (\r\n            notify(`${error.error}`)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isAuthenticated() ? <Redirect to=\"/admin\" /> : \"\"}\r\n            {showSuccess()}\r\n            {showError(error)}\r\n            {LoginForm()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import LoginForm from '../components/User/Login';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <>\r\n            <LoginForm/>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Login;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Badge, Card, Col, Container, Form, ListGroup, Row } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport { addWallet } from '../../../Api/addWallet';\r\nimport { userInfo } from '../../../utils/auth';\r\nimport { getOneUser } from '../../../Api/user';\r\nimport { createNewPurchase } from '../../../Api/purchase';\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { notify } from '../../../utils/notification'\r\nimport Footer from \"../Footer\";\r\nimport NavBar from \"../Navbar/Navbar\";\r\nimport \"./conformation.css\"\r\nimport { CgEditBlackPoint } from \"react-icons/cg\"\r\nimport { createNewOrder, orderQueue } from '../../../Api/order';\r\nimport { createWallet } from '../../../Api/wallet';\r\nimport { findAllPaymentMethod } from \"../../../Api/paymentMethod\";\r\nimport { API } from \"../../../utils/config\";\r\nimport { createNotifications } from '../../../Api/notification'\r\nimport { getOneProduct } from \"../../../Api/products\";\r\nimport { useHistory } from \"react-router-dom\";\r\nlet productPackage, productPrice, paymentNumber, paymentOption;\r\n\r\n\r\nconst moneySendWay = [\r\n  {\r\n    \"how\": \"টাকা যোগ করবেন কীভাবে?\",\r\n    \"condition\": \"(যেকোন পার্সোনাল বিকাশ একাউন্ট হতে হবে)\",\r\n    \"Step1\": [\r\n      {\r\n        \"point\": \"প্রথমে উপরে দেওয়া নাম্বার কপি করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"(bKash,Nagad,Rocket, upay) App অথাবা Ussd কোডের মধ্যেমে\"\r\n      },\r\n      {\r\n        \"point\": \"সেন্ড মানি অপশন সিলেক্ট করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"Cizishop WALLET নাম্বার (_) প্রবেশ করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"এম্যাউন্ট অর্থাৎ কত টাকা যোগ করবেন তার পরিমাণ প্রবেশ করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"রেফারেন্সে আপনার সেলফটেন ইউজার আইডি প্রবেশ করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"আপনার বিকাশ পিন নাম্বার প্রবেশ করুণ।\"\r\n      },\r\n    ],\r\n    \"Step2\": [\r\n      {\r\n        \"point\": \"পনিচে যে দুটি বক্স দেখতে পারছেন প্রথম Box এ কত টাকা পাঠিয়েছেন সেটা লিখুন।\"\r\n      },\r\n      {\r\n        \"point\": \"দ্বিতীয় বক্সে আপনি যে নাম্বার থেকে টাকা পাঠিয়েছেন সেই নাম্বারটি লিখুন।\"\r\n      },\r\n      {\r\n        \"point\": \"তারপর Submit অপশনে ক্লিক করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"পাঁচ থেকে দশ মিনিটের মধ্যে টাকা যোগ হয়ে যাবে আপনার সেলফটেন ওয়ালেটে।\"\r\n      },\r\n      {\r\n        \"point\": \"এম্যাউন্ট অর্থাৎ কত টাকা যোগ করবেন তার পরিমাণ প্রবেশ করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"অবশ্যই টাকা Send Money করার পর এই কাজটি করবেন।\"\r\n      },\r\n    ]\r\n  }\r\n]\r\n\r\n\r\nconst Button = styled.button`\r\n  background-color: #28af3a ;\r\n  color: whitesmoke;\r\n  font-size: 15px;\r\n  padding: 5px 40px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  object-fit: contain;\r\n  &:disabled {\r\n    color: #28af3a;\r\n    background-color: white;\r\n    opacity: 1;\r\n    cursor: default;\r\n  }\r\n`;\r\n\r\nconst ButtonToggle = styled(Button)`\r\n  color: #28af3a;\r\n  background-color: white;\r\n  border: 1px solid #28af3a;\r\n  ${({ active }) =>\r\n    active &&\r\n    `\r\n    color: white;\r\n    background-color: #28af3a;\r\n    \r\n  `}\r\n`;\r\n\r\n\r\nconst Confirm = () => {\r\n  let history = useHistory();\r\n  const [productInfo, setProductInfo] = useState({})\r\n  const [paymentMethod, setPaymentMethod] = useState([{\r\n    name: '',\r\n    number: '',\r\n    image: ''\r\n  }])\r\n  const [user, setUser] = useState({})\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [values, setValues] = useState({\r\n    walletId: '',\r\n    paymentType: '',\r\n    transactionID: '',\r\n    mobileNumber: '',\r\n    amount: '',\r\n  });\r\n\r\n  const [rechargeId, setRechargeId] = useState({\r\n    rechargeId: '',\r\n  });\r\n\r\n\r\n  const { paymentType, transactionID, mobileNumber, amount } = values;\r\n\r\n  const [disabledButton, setDisabledButton] = useState({\r\n    disabled: false,\r\n  });\r\n\r\n  const { disabled } = disabledButton\r\n\r\n  useEffect(() => {\r\n    getOneUser(id)\r\n      .then(response => setUser(response.data))\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  }, [values]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    findAllPaymentMethod()\r\n      .then((res) => {\r\n        let allData = res.data\r\n        setPaymentMethod(allData)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem('values'))\r\n    if (data) {\r\n      getOneProduct(data.productId)\r\n        .then(res => setProductInfo(res.data))\r\n    }\r\n  }, []);\r\n\r\n\r\n  const [confirmation, setConfirmation] = useState({});\r\n\r\n  const [active, setActive] = useState({});\r\n  const { token, id } = userInfo();\r\n\r\n  function func2(paymentType) {\r\n    setValues({\r\n      ...values,\r\n      paymentType: paymentType\r\n    })\r\n  }\r\n\r\n  function handleClick(e) {\r\n    setActive({\r\n      ...payMethod,\r\n      [e.target.name]: e.target.value,\r\n\r\n    })\r\n  }\r\n\r\n  function createOrder() {\r\n    handleClose()\r\n    const data = JSON.parse(localStorage.getItem('values'))\r\n    productPackage = (Object.keys(data.product))[0]\r\n    productPrice = (Object.values(data.product))[0]\r\n    createNewPurchase(token, data)\r\n      .then(response => {\r\n        const data = {\r\n          userId: id,\r\n          purchaseId: response.data.purchase._id,\r\n          productId: response.data.purchase.productId,\r\n          walletId: values.walletId,\r\n          rechargeId: rechargeId.rechargeId\r\n        }\r\n        createNewOrder(token, data)\r\n          .then(response => {\r\n            notify('Order Created. Please wait for admin approval')\r\n            //orderQueue()\r\n            createNotifications(token, id, `You have placed an order on ${productInfo.gameName}. Purchase Package: ${productPackage} ${productPrice} Taka. Please wait for admin approval`)\r\n            localStorage.removeItem('values');\r\n          })\r\n          .catch(err => notify('Something Failed! Please try again'))\r\n      })\r\n      .catch(err => {\r\n        let errMsg = \"Something went wrong!\";\r\n        if (err.response) errMsg = err.response.data;\r\n        notify(errMsg)\r\n      })\r\n  }\r\n\r\n  function addRecharge(rechargeId) {\r\n    setRechargeId({\r\n      rechargeId: rechargeId\r\n    })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setValues({\r\n      ...values,\r\n      walletId: user.wallet,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setDisabledButton({ disabled: true });\r\n    if (paymentNumber === values.mobileNumber) {\r\n      notify(`Please Enter your ${paymentOption} account number.`)\r\n    }\r\n    else {\r\n      addWallet(token, values)\r\n        .then(response => {\r\n          setDisabledButton({ disabled: false });\r\n          notify('Add Amount Successfully. Please wait for verification')\r\n          createNotifications(token, id, `You have recharge ${values.amount} Taka (TransactionId: ${values.transactionID}).Your transaction is being processed. Please wait for admin varification.`)\r\n          history.push('/userWallet')\r\n        })\r\n        .catch(err => {\r\n          setDisabledButton({ disabled: false });\r\n          let errMsg = \"Something went wrong!\";\r\n          if (err.response) errMsg = err.response.data;\r\n          notify(errMsg)\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  function paymentTypeNumber(paymentType) {\r\n    paymentOption=paymentType\r\n    for (let i = 0; i < paymentMethod.length; i++) {\r\n      if (paymentType === paymentMethod[i].name) {\r\n        paymentNumber = paymentMethod[i].number\r\n\r\n        return (\r\n          <>\r\n            ({paymentMethod[i].number}) <i className=\"fa fa-copy\" onClick={copyNumber(paymentMethod[i].number)} style={{ fontSize: \".8rem\", color: \"grey\", cursor: \"pointer\" }}></i>\r\n          </>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // const copyNumber = (number) => {\r\n  //   console.log(\"Hello\")\r\n  //   //navigator.clipboard.writeText(number);\r\n   \r\n  // }\r\n\r\n  return (\r\n\r\n    <>\r\n      <NavBar />\r\n      <Container className=\"content-width\">\r\n        <Row className=\"d-flex justify-content-center\" >\r\n          {paymentMethod && paymentMethod.map((data, index) => {\r\n            return (\r\n              <Col key={index} sm={6} xs={6} xl={3}>\r\n                <ButtonToggle\r\n                  active={active === data._id}\r\n                  onClick={() => setActive(data._id)}\r\n                  onClick={function (event) {\r\n                    setActive(data._id);\r\n                    func2(data.name)\r\n                  }}\r\n                  variant=\"outline-primary\" name=\"paymentType\" value={paymentType}><img\r\n                    className=\"object\" src={`${API}${data.image}`} alt={data.name} />\r\n                  <div\r\n                    bg=\"primary\" name=\"paymentType\" value={paymentType}>{data.name}</div>\r\n                </ButtonToggle>\r\n              </Col>\r\n            )\r\n          })}\r\n        </Row>\r\n\r\n\r\n        <div>\r\n          {moneySendWay.map((data, index) => {\r\n            return (\r\n              <Fragment key={index}>\r\n\r\n                <div className=\"\">\r\n\r\n                  <div>\r\n                    <div className=\"m-2\">\r\n                      <div className='d-flex text-edit'>\r\n                        <div className='mr-2'> {paymentType}</div>\r\n                        <div>\r\n                          {paymentTypeNumber(paymentType)}\r\n                        </div>\r\n\r\n                      </div>\r\n\r\n                      <div className=\"font-bold\">{data.how}</div>\r\n                    </div>\r\n                    <div className=\"mb-2 text-muted\">{data.condition}</div>\r\n                    Step 1\r\n                    {data.Step1.map((allData, index) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <div className=\"m-2 d-flex\">\r\n                            <div className=\"mt-1 mr-2 colors\">\r\n                              <CgEditBlackPoint />\r\n                            </div>\r\n                            <div>\r\n                              {allData.point}\r\n                            </div>\r\n                          </div>\r\n                        </Fragment>\r\n                      )\r\n                    })}\r\n                    Step 2\r\n                    {data.Step2.map((allData, index) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <div className=\"m-2  d-flex\">\r\n                            <div className=\"mt-1 mr-2 colors\" >\r\n                              <CgEditBlackPoint />\r\n                            </div>\r\n                            <div>\r\n                              {allData.point}\r\n                            </div>\r\n                          </div>\r\n                          {/*<div className=\"m-2\">*/}\r\n                          {/*    {index + 1} .{allData.point}*/}\r\n                          {/*</div>*/}\r\n                        </Fragment>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          })}\r\n        </div>\r\n        <div>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Amount</Form.Label>\r\n              <Form.Control type=\"amount\" name=\"amount\" value={amount} placeholder=\"Enter Amount\"\r\n                onChange={handleChange} />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Sender Number</Form.Label>\r\n              <Form.Control type=\"seders_number\" name=\"mobileNumber\" value={mobileNumber}\r\n                placeholder=\"Sender Number\" onChange={handleChange} />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Transaction Number</Form.Label>\r\n              <Form.Control type=\"transactionNumber\" name=\"transactionID\" value={transactionID}\r\n                placeholder=\"Transaction Number\" onChange={handleChange} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={disabled} onClick={handleSubmit} style={{ backgroundColor: \"#1976d2\" }}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Confirm","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport AdminRoute from \"components/protectedRoutes/AdminRoute\";\r\nimport AdminLayout from \"./layouts/Admin\";\r\nimport Home from \"./layouts/home\";\r\nimport TopUp from \"./layouts/TopUp\";\r\nimport Login from \"./layouts/Login\";\r\nimport Registration from \"./layouts/Registration\";\r\nimport { AuthProvider } from \"./utils/auth\";\r\nimport Confirmation from \"./views/Confirmation\";\r\nimport Confirm from \"components/Main/Confirmation/Confirm\";\r\nimport UserProfile from \"./components/Main/User/UserProfile\";\r\nimport NavBar from \"./layouts/NavBar\";\r\nimport UserWallet from \"./components/Main/User/UserWallet\";\r\nimport MyOrder from \"./components/Main/User/MyOrder\";\r\nimport Footer from './components/Main/Footer/index'\r\nimport Notification from './components/Main/User/Notification';\r\nimport ResetPassword from \"./components/User/ResetPassword\";\r\nimport ForgotPassword from \"./components/User/forgotPassword\";\r\nimport Support from \"./components/Main/User/Support\";\r\nimport TermsCondition from \"./components/Main/Footer/TermsCondition\";\r\nimport PrivacyPolicy from \"./components/Main/Footer/PrivacyPolicy\";\r\nimport ShipmentInfo from \"./components/Main/Footer/ShipmentInfo\";\r\nimport ReturnRefund from \"./components/Main/Footer/Return&Refund\";\r\nimport AboutUs from \"./components/Main/Footer/AboutUs\";\r\nimport PageNotFound from \"./components/Main/pageNotFound\";\r\nimport Search from \"./components/Main/search/Search\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <AuthProvider>\r\n            <Switch>\r\n                <Route path=\"/admin\">\r\n                    <AdminRoute path=\"/admin\">\r\n                        <AdminLayout />\r\n                    </AdminRoute>\r\n                </Route>\r\n\r\n\r\n                <Route exact path=\"/\" component={Login} />\r\n\r\n                {/*<Route exact path=\"/login\" component={Login} />*/}\r\n                {/*<Route exact path=\"/registration\" component={Registration} />*/}\r\n                {/*<Route exact path=\"/confirmation\" component={Confirm} />*/}\r\n                {/*<Route exact path=\"/profile\" component={UserProfile} />*/}\r\n                {/*<Route exact path=\"/userWallet\" component={UserWallet} />*/}\r\n                {/*<Route exact path=\"/userWallet-:number\" component={UserWallet} />*/}\r\n                {/*<Route exact path=\"/myOrder\" component={MyOrder} />*/}\r\n                {/*<Route exact path=\"/myOrder-:number\" component={UserWallet} />*/}\r\n                {/*<Route exact path=\"/notification\" component={Notification} />*/}\r\n                {/*<Route exact path=\"/forgotPassword\" component={ForgotPassword} />*/}\r\n                {/*<Route exact path=\"/resetPassword\" component={ResetPassword} />*/}\r\n                {/*<Route exact path=\"/support\" component={Support} />*/}\r\n                {/*<Route exact path=\"/terms&condition\" component={TermsCondition} />*/}\r\n                {/*<Route exact path=\"/privacy-policy\" component={PrivacyPolicy} />*/}\r\n                {/*<Route exact path=\"/shipment-info\" component={ShipmentInfo} />*/}\r\n                {/*<Route exact path=\"/refund&return-policy\" component={ReturnRefund} />*/}\r\n                {/*<Route exact path=\"/about\" component={AboutUs} />*/}\r\n                {/*<Route exact path=\"/search-result\" component={Search} />*/}\r\n\r\n                {/*<Route exact path=\"/topUp-:productId\" component={TopUp} />*/}\r\n                {/*<Route exact component={PageNotFound} />*/}\r\n\r\n\r\n            </Switch>\r\n        </AuthProvider>\r\n    )\r\n}\r\nexport default App","/*!\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v2.0.0\r\n=========================================================\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n* Coded by Creative Tim\r\n=========================================================\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/animate.min.css\";\r\nimport \"./assets/scss/light-bootstrap-dashboard-react.scss?v=2.0.0\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport 'antd/dist/antd.css'\r\n\r\nimport AdminLayout from \"layouts/Admin.js\";\r\nimport App from \"./App\";\r\nimport Confirm from \"./components/Main/Confirmation/Confirm\";\r\n\r\nReactDOM.render(\r\n    \r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    \r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}