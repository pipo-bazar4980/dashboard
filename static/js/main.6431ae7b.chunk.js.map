{"version":3,"sources":["utils/config.js","Api/products.js","views/Dashboard.js","Api/visitors.js","Api/orderCount.js","utils/auth.js","Api/user.js","Api/userAdmin.js","utils/notification.js","views/UserList.js","views/TableList.js","Api/sendMessage.js","views/UserProfile.js","views/AdminList.js","Api/wallet.js","views/Pagination.js","views/Orders.js","Api/order.js","views/TableUser.js","views/TableOrder.js","views/TableCancelOrder.js","components/Utility/Child/Add Banner.js","Api/utility.js","components/Utility/CarosolComp.js","Api/paymentMethod.js","components/Utility/Instraction/PaymentMethod.js","components/Utility/Instraction/PaymentMethodData.js","Api/poupbanner.js","components/Utility/PopupBanner/Popupbanner.js","components/product/ProductUpdate.jsx","views/OrderHandle.js","components/Utility/adminActiveStatus.js","components/Utility/statusChange.js","views/Utility.js","Api/index.js","views/ProductList.js","components/product/ProductAdd.jsx","views/Products.js","Api/notification.js","views/inGameOrderTable.js","views/idCodeOrderTable.js","views/cancelInGameOrderTable.js","views/cancelIdcodeOrderTable.js","views/offerOrderTable.js","views/subscOrderTable.js","views/cancelOfferOrderTable.js","views/cancelSubscOrderTable.js","views/ActivePurchacheTable.js","views/PurchaseApprove.js","Api/addWallet.js","views/CompletePurchacheTable.js","views/CancelPurchacheTable.js","assets/img/logo.png","components/Main/Navbar/Navbar.js","views/UserCreate.js","Api/auth.js","views/Support.js","Api/support.js","views/sendSmsAll.js","views/sendSmsAllActive.js","views/SendSms.js","routes.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","assets/img/reactlogo.png","components/Sidebar/Sidebar.js","assets/img/sidebar-3.jpg","layouts/Admin.js","components/protectedRoutes/AdminRoute.js","components/User/Login.js","layouts/Login.js","App.js","components/Main/Confirmation/Confirm.js","index.js"],"names":["API","process","addProductss","REACT_Web_API_URL","addProduct","token","JSON","parse","localStorage","getItem","axios","post","headers","itemDelete","id","id2","delete","updateItem","updateProductss","put","getOneProduct","get","getAllProducts","console","log","Dashboard","useState","count","setCount","orderCount","setOrderCount","setAllProduct","setRevenue","adminOrder","setAdminOrder","useEffect","then","response","data","productId","date","searchProduct","setSearchProduct","totalOrders","totalIncome","setData","Container","fluid","Row","Col","lg","sm","Card","className","Body","xs","map","countTotal","Title","as","Footer","totalOrdersToday","totalOrdersMonthly","totalOrdersYearly","Form","onSubmit","e","preventDefault","search","filterProductByDate","res","Group","controlId","Label","Control","type","name","placeholder","onChange","target","value","Button","variant","style","marginBottom","fontWeight","Table","scope","item","index","admin","today","total","authenticate","cb","window","setItem","stringify","isAuthenticated","jwt_decode","exp","role","Date","getTime","removeItem","checkLoggedInUser","clear","userInfo","jwt","decoded","route","location","pathname","useHistory","push","reload","initialstate","user","jwt_Token_decoded","now","flag","expire","AuthContext","createContext","login","userData","logout","AuthReducer","state","action","payload","cleaner","caches","keys","names","forEach","r","alert","AuthProvider","props","timer","moment","parseInt","add","unix","clearCacheData","useReducer","dispatch","Provider","getAllUser","getOneUser","updateUserActiveStatus","activeStatus","deleteAllProduct","removeJwt","adminProfileUpdate","passwordUpdate","passwordEdit","toast","configure","position","POSITION","BOTTOM_RIGHT","userWalletId","walletUserName","userEmail","userName","userList","notify","msg","sendMessageAllUser","sendMessage","top","left","transform","width","bgcolor","border","boxShadow","p","UserProfile","useForm","registerPassword","register","submitPassword","handleSubmit","setPasswordError","setError","errorsPassword","formState","errors","registerPhone","submitPhone","errorsPhone","checkOtp","submitOTP","setOTPError","username","email","password","confirmPassword","phonenumber","disabled","formData","setAdmin","profilePic","setName","FormData","React","open","setOpen","handleClose","phone","setPhone","handleClosePhone","otp","setOtp","handleCloseOtp","a","newPassword","newRePassword","message","update","oldPassword","addPhoneNumber","verifyOtp","setVerifyOtp","checkNumber","userNumber","val","Math","floor","random","number","replaceAll","code","otpSend","sendMessageAPI","setNumber","catch","err","letter","userNameLetter","match","Modal","onClose","Box","sx","Typography","component","TextField","required","error","Boolean","helperText","size","marginTop","label","display","justifyContent","marginRight","onClick","minLength","container","Grid","spacing","direction","alignItems","minHeight","class","padding","textAlign","fontSize","Paper","flexDirection","minWidth","userIdNo","Chip","googleId","AdminList","adminList","loading","paginate","postsPerPage","filter","filteredData","UserList","allUserList","getAllUserList","postsPerPages","allWallet","setAllWallet","show","setShow","show2","setShow2","getAllWallet","modalOpen","walletId","modalOpen2","amount","walletBalance","setWalletBalance","handleChange2","setEditPassword","editPassword","deleteUserById","setDisabled","disabledd","deleteUser","editUserPassword","onHide","Header","margin","editBalance","vipBatch","color","wallet","_id","userId","currentAmount","cursor","num","Pagination","totalPosts","Number","pageNumbers","i","ceil","totalPagination","length","pages","pageNumber","TableList","totalActive","totalComplete","totalCancel","setAdminList","setAllUserList","filterContent","users","searchTerm","result","toLowerCase","includes","toLocaleLowerCase","toString","currentPage","setCurrentPage","setPostsPerPage","currentPages","setCurrentPages","setPostsPerPages","indexOfLastPost","indexOfFirstPost","currentPost","slice","indexOfLastPosts","indexOfFirstPosts","currentPosts","setUser","selectArray","md","float","currentTarget","rowSelectForAdminTable","rowSelectForUserTable","getOrders","getOrdersByAdminId","updateOrderStatus","OrderTables","activeOrders","isComplete","reject","order","orderId","gameName","categoryName","purchaseId","product","option","price","createdAt","format","handOverAdmin","completeOrders","cancelledOrders","rejectReason","Orders","setActiveOrders","setCompleteOrders","setCancelledOrders","currentPagess","setCurrentPagess","postsPerPagess","active","complete","cancel","orders","value2","value3","indexOfLastPostss","indexOfFirstPostss","currentPostss","AddBanner","firstTitle","secondTitle","link","addBanner","setAddBanner","success","values","setValues","handleChange","files","set","addBanners","reset","errMsg","CarouselComp","banner","setBanner","remove","setRemove","edit","setEdit","ids","setId","editId","setEditIds","allData","editBanner","setEditBanner","handleShowDelete","handleCloseDelete","handleCloseEdit","deleteBanner","handleSubmitEdit","updateBanner","src","image","alt","closeButton","marginLeft","findAllPaymentMethod","PaymentMethod","addMethod","setAddMethod","addPaymentMethod","editMethod","setEditMethod","deletePaymentMethod","editPaymentMethod","updatePopBanner","tz","setDefault","orderUser","game_name","category_name","game_option","game_price","totalIngame","totalIngameCancel","totalIdcode","totalIdcodeCancel","totalOffer","totalOfferCancel","totalSubsc","totalSubscCancel","srchTerm","radios","text","getImage","SetGetImage","ButtonGroup","radio","idx","ToggleButton","checked","adminActiveStatus","adminData","changeStatus","updateUserActiveStatus2","maxWidth","borderLeft","StatusChange","setAdminData","title","superadmin","Utility","PaymentMethodData","Popupbanner","getProducts","Android12Switch","styled","Switch","theme","borderRadius","content","height","backgroundImage","encodeURIComponent","palette","getContrastText","primary","main","right","category","categoryNames","ProductUpdate","inputLists","setInputLists","inputList","backUpLink","details","topUp","setUpdateProduct","stocks","setStocks","setImage","setProductInfo","handleDelete","submitItem","setItemValue","setValue","resetItem","getNewItem","submitNewItem","productInfo","submitProductInfo","submitItemData","submitData","topUpId","stock","addItem","addData","addItems","submitInfo","photoUpdate","raw","updateImage","to","showSuccess","htmlFor","Input","accept","preview","URL","createObjectURL","backgroundColor","xl","flexWrap","x","Badge","badgeContent","handleClick","onDelete","FormControlLabel","control","defaultChecked","ProductList","setUpdate","deleteOneProducts","stockFilter","Img","images","ProductAdd","setInputList","check","setCheck","region","platform","publisher","detailsList","setAddProduct","handleInputChange","list","handleAddClick","detail","defaultValue","splice","handleRemoveClick","Products","setProduct","createNotifications","notification","notifications","getNotifications","array","orderIds","arrayItem","inGameOrderTable","inGameOrders","markComplete","selectAll","foundId","indexOf","split","accountType","Password","backupCode","paymentComplete","idCodeOrderTable","idCodeOrders","paginates","idCode","cancelInGameOrderTable","cancelledOrdersInGame","paginatess","makeActive","cancelIdcodeOrderTable","cancelledOrdersIdCode","paginatesss","postsPerPagesss","offerOrderTable","offerOrders","paginatessss","postsPerPagessss","subscOrderTable","subscOrders","paginatesssss","postsPerPagesssss","cancelOfferOrderTable","cancelledOrdersOffer","paginatessssss","postsPerPagessssss","cancelSubscOrderTable","cancelledOrdersSubsc","paginatesssssss","postsPerPagesssssss","inGameTable","idCodeTable","offerTable","subscTable","filterFunctionActive","buttonAllActive","TabPanel","children","other","hidden","a11yProps","TabPanels","a11yPropss","transactionId","transactionUser","transactionUserName","cancelAmount","transactionNum","OrderHandle","filteredProduct","setFilteredProduct","setIdCodeOrders","idCodeOrdersSearch","setIdCodeOrdersSearch","setInGameOrders","inGameOrdersSearch","setInGameOrdersSearch","setOfferOrders","offerOrdersSearch","setOfferOrdersSearch","setSubscOrders","subscOrdersSearch","setSubscOrdersSearch","setCancelledOrdersInGame","setCancelledOrdersIdCode","setCancelledOrdersOffer","setCancelledOrdersSubsc","setPostsPerPagess","currentPagesss","setCurrentPagesss","setPostsPerPagesss","currentPagessss","setCurrentPagessss","setPostsPerPagessss","currentPagesssss","setCurrentPagesssss","setPostsPerPagesssss","currentPagessssss","setCurrentPagessssss","setPostsPerPagessssss","currentPagesssssss","setCurrentPagesssssss","setPostsPerPagesssssss","adminProfile","productsId","filterAdminProduct","cancelIdcode","cancelIngame","cancelOffer","cancelSubsc","igame","idcode","offer","subsc","currentPostSearch","currentPostsSearch","indexOfLastPostsss","indexOfFirstPostsss","currentPostsss","indexOfLastPostssss","indexOfFirstPostssss","currentPostssss","currentPostssSearch","indexOfLastPostsssss","indexOfFirstPostsssss","currentPostsssss","currentPostsssSearch","indexOfLastPostssssss","indexOfFirstPostssssss","currentPostssssss","indexOfLastPostsssssss","indexOfFirstPostsssssss","currentPostsssssss","ingame","setIngame","setIdcode","setOffer","setSubsc","ingameCancel","setIngameCancel","idcodeCancel","setIdcodeCancel","offerCancel","setOfferCancel","subscCancel","setSubscCancel","findInGameOrder","findIdCodeOrder","findOfferOrder","findSubscOrder","findInGameOrderCancel","findIdCodeOrderCancel","findOfferOrderCancel","findSubscOrderCancel","disabledButton","setDisabledButton","selectedId","categotyDelete","deleteProduct","setTimeout","value4","value5","value6","value7","value8","game","removeSpentAmount","filterOrder","notificationId","spent","sms","noteText","note","setNote","undefined","markAll","myArray","markAllComplete","Alert","addSpentAmount","extra","href","mode","allowClear","productData","Option","productIds","productList","changeActiveStatus","borderBottom","borderColor","Tabs","event","newValue","Tab","rowSelectForIngameTable","rowSelectForIdcodeTable","rowSelectForOfferTable","rowSelectForSubscTable","rowSelectForCancelIngameTable","rowSelectForCancelIdcodeTable","rowSelectForCancelOfferTable","rowSelectForCancelSubscTable","findAllWallet","updateAddWallet","completePayment","paymentType","transactionID","mobileNumber","restart","setMark","activePayment","findActivePayment","findCompletePayment","findCancelledPayment","filterPayment","filterPaymentTypeActive","filterPaymentType","filtersBoth","mark","taka","findOneWallet","walletUser","updateWallet","tran","CancelPurchacheTable","cancelledPayment","tranId","search2","filter2","both","activePaymentFilterBoth","completePaymentFilterBoth","cancelPaymentFilterBoth","PurchaseApprove","setActivePayment","activePaymentSearch","setActivePaymentSearch","activePaymentFilter","setActivePaymentFilter","activePaymentFilter2","setActivePaymentFilter2","setCompletePayment","completePaymentFilter","setCompletePaymentFilter","setCancelledPayment","cancelledPaymentFilter","setCancelledPaymentFilter","allPaymentMethod","setAllPaymentMethod","setChecked","checkedIds","setActive","setComplete","setCancel","filters","setFilters","result2","result3","handleFilters","myfilters","newFilters","filterTransaction","payments","currentPostsFilterBoths","currentPostsFilter","currentPostsFilterBoth","currentPostsFilterBothss","markAllPurchaseComplete","rowSelectRorActivePayment","rowSelectForCompletePayment","rowSelectForCancelPayment","shape","alpha","common","white","breakpoints","up","pointerEvents","InputBase","paddingLeft","transition","transitions","create","UserCreate","repassword","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","registration","toUpperCase","showError","autoFocus","autoComplete","options","Support","support","setSupport","getSupportMessage","markResolved","markSupport","requestType","requestDescription","sendSmsAll","allClick","done","allActiveClick","activeDone","SendSms","dashboardRoutes","path","icon","layout","activeUserList","setActiveUserList","activeUser","setActiveUser","setDone","setActiveDone","setAllClick","setAllActiveClick","getActiveUserList","rowSelectForAllUserTable","setText","allCheckbox","allActiveCheckbox","rows","numberArray","numbers","replace","setNotifications","viewNotifications","setViewNotifications","useLocation","view","Navbar","bg","expand","document","documentElement","classList","toggle","node","createElement","onclick","this","parentElement","removeChild","body","appendChild","Brand","routes","getBrandText","Toggle","Collapse","Nav","navbar","Item","Link","Dropdown","editNotifications","Menu","getFullYear","Component","Sidebar","prop","key","redirect","upgrade","routeName","activeClassName","Admin","sidebarImage","hasImage","mainPanel","useRef","scrollTop","scrollingElement","current","innerWidth","element","getElementById","parentNode","ref","AdminNavbar","render","AdminRoute","rest","from","Copyright","align","createTheme","light","dark","contrastText","secondary","Login","history","watch","clearErrors","getJwtToken","status","request","CssBaseline","mt","Avatar","m","logo","credential","fullWidth","mb","LoginForm","App","exact","button","ReactDOM"],"mappings":"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","file":"static/js/main.6431ae7b.chunk.js","sourcesContent":["export const API=process.env.REACT_APP_API_URL;\r\nexport const webAPI=process.env.REACT_Web_API_URL;\r\n\r\n","import axios from \"axios\";\r\nimport { API } from '../utils/config';\r\n\r\n\r\nexport const addProductss = (addProduct) => {\r\n\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${API}admin/product`, addProduct, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const addItems = (id, addProduct) => {\r\n\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}admin/product/topUp/${id}`, addProduct, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const itemDelete = ( id, id2) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(\r\n        `${API}admin/product/topUp/${id}/${id2}`,  {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\" : \"*\",\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        }\r\n    );\r\n};\r\nexport const updateItem = (id, updateProductss) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}admin/product/topUp/update/${id}`, updateProductss, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\nexport const getOneProduct = (id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.get(`${API}admin/product/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n};\r\n\r\nexport const getAllProducts = () => {\r\n    return axios.get(\r\n        `${API}admin/product/` ,{\r\n            headers:{\r\n                \"Access-Control-Allow-Origin\" : \"*\",\r\n            }\r\n        }\r\n    );\r\n};\r\n\r\nexport const updateProductss = (id, updateProductss) => {\r\n    console.log(\"updateProductss\",updateProductss)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}admin/product/update/${id}`, updateProductss, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const updateImage = (id, updateProductss) => {\r\n    console.log(\"updateProductss\",updateProductss)\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}admin/product/update/image/${id}`, updateProductss, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const deleteOneProducts = (token, id) => {\r\n    return axios.delete(\r\n        `${API}admin/product/delete/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    }\r\n    );\r\n};\r\n\r\n\r\n\r\nexport const filterAdminProduct = (id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.get(\r\n        `${API}admin/product/filter/admin/product/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n};\r\n\r\nexport const filterProductByDate = (search) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${API}admin/product/filter/date/`, search, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getVisitorsPerDay } from '../Api/visitors';\r\nimport { oneDayOrder, totalRevenue, adminOrderQuery } from '../Api/orderCount';\r\nimport { getAllProducts, filterProductByDate } from '../Api/products';\r\n\r\n// react-bootstrap components\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  Navbar,\r\n  Nav,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\n\r\nfunction Dashboard() {\r\n  const [count, setCount] = useState([]);\r\n  const [orderCount, setOrderCount] = useState({});\r\n  const [allProduct, setAllProduct] = useState([]);\r\n  const [revenue, setRevenue] = useState({});\r\n  const [adminOrder, setAdminOrder] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getVisitorsPerDay()\r\n      .then(response => setCount(response.data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    adminOrderQuery()\r\n      .then(response => setAdminOrder(response.data))\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    oneDayOrder()\r\n      .then(response => setOrderCount(response.data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    totalRevenue()\r\n      .then(response => setRevenue(response.data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getAllProducts()\r\n      .then(response => setAllProduct(response.data))\r\n  }, [])\r\n\r\n\r\n\r\n  const [searchProduct, setSearchProduct] = useState({\r\n    productId: '',\r\n    date: ''\r\n  });\r\n\r\n  let { productId, date } = searchProduct\r\n\r\n  const [data, setData] = useState({\r\n    totalOrders: null,\r\n    totalIncome: null\r\n  });\r\n\r\n  let { totalOrders, totalIncome } = data;\r\n\r\n  const handleChange = e => {\r\n    setSearchProduct({\r\n      ...searchProduct,\r\n      [e.target.name]: e.target.value\r\n    })\r\n\r\n    console.log(\"e.target.value\",e.target.value)\r\n\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    filterProductByDate({ date })\r\n      .then(res => {\r\n        console.log(res)\r\n        setData({\r\n          ...data,\r\n          totalOrders: res.data.totalOrders,\r\n          totalIncome: res.data.totalIncome,\r\n\r\n        })\r\n      })\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col lg=\"3\" sm=\"6\">\r\n            <Card className=\"card-stats\">\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col xs=\"5\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-chart text-warning\" />\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"7\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Visitors</p>\r\n                      {count && count.map(countTotal => (\r\n                        <Card.Title key={countTotal.count} as=\"h4\">{countTotal.count}</Card.Title>\r\n                      ))}\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n\r\n              <Card.Footer>\r\n                <hr/>\r\n                <div className=\"stats\">\r\n                  <i className=\"fas fa-redo mr-1\" />\r\n                  Total Visitors\r\n                </div>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"3\" sm=\"6\">\r\n            <Card className=\"card-stats\">\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col xs=\"5\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-light-3 text-success\" />\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"7\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Orders</p>\r\n                      <Card.Title as=\"h4\">{orderCount.totalOrdersToday}</Card.Title>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <hr/>\r\n                <div className=\"stats\">\r\n                  <i className=\"far fa-calendar-alt mr-1\"/>\r\n                  Today\r\n                </div>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"3\" sm=\"6\">\r\n            <Card className=\"card-stats\">\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col xs=\"5\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-vector text-danger\"/>\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"7\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Orders</p>\r\n                      <Card.Title as=\"h4\">{orderCount.totalOrdersMonthly}</Card.Title>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <hr></hr>\r\n                <div className=\"stats\">\r\n                  <i className=\"far fa-clock-o mr-1\"/>\r\n                  This month\r\n                </div>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n          <Col lg=\"3\" sm=\"6\">\r\n            <Card className=\"card-stats\">\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col xs=\"5\">\r\n                    <div className=\"icon-big text-center icon-warning\">\r\n                      <i className=\"nc-icon nc-favourite-28 text-primary\"/>\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs=\"7\">\r\n                    <div className=\"numbers\">\r\n                      <p className=\"card-category\">Orders</p>\r\n                      <Card.Title as=\"h4\">{orderCount.totalOrdersYearly}</Card.Title>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n              <Card.Footer>\r\n                <hr/>\r\n                <div className=\"stats\">\r\n                  <i className=\"fas fa-redo mr-1\"/>\r\n                  This year\r\n                </div>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col sm={12}>\r\n            <Card>\r\n              <Card.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Group className=\"mb-3\" controlId=\"date\">\r\n                        <Form.Label>Select date</Form.Label>\r\n                        <Form.Control type=\"date\" name=\"date\" placeholder=\"Date of Birth\" onChange={handleChange} />\r\n                      </Form.Group>\r\n                    </Col>\r\n                  </Row>\r\n                  <div>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                      Search\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Card>\r\n              <Card.Body>\r\n                <p style={{ marginBottom: \"10px\" }}><span style={{ fontWeight: \"bold\" }}>Date:</span> {date}</p>\r\n\r\n                <p><span style={{ fontWeight: \"bold\" }}>Total Orders:</span> {totalOrders}</p>\r\n                <p><span style={{ fontWeight: \"bold\" }}>Total Income:</span> {totalIncome}</p>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <Card.Body>\r\n                <Table className=\"table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">#</th>\r\n                      <th className=\"border-0\">Admin List</th>\r\n                      <th className=\"border-0\">complete order (Today)</th>\r\n                      <th className=\"border-0\">complete order (Intotal)</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {adminOrder && adminOrder.map((item,index) => (\r\n                      <tr>\r\n                        <td>{index+1}</td>\r\n                        <td>{item.admin}</td>\r\n                        <td>{item.today}</td>\r\n                        <td>{item.total}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const getVisitorsPerDay = () => {\r\n    return axios.get(\r\n        `${API}count` ,{\r\n            headers:{\r\n                \"Access-Control-Allow-Origin\" : \"*\",\r\n            }\r\n        }\r\n    );\r\n};\r\n\r\nexport const increaseVisitors = () => {\r\n    return axios.put(\r\n        `${API}count` ,{\r\n            headers:{\r\n                \"Access-Control-Allow-Origin\" : \"*\",\r\n            }\r\n        }\r\n    );\r\n};","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const oneDayOrder = () => {\r\n    return axios.get(`${API}dashboard/order/query/oneday` ,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const totalRevenue = () => {\r\n    return axios.get(`${API}dashboard/order/query/revenue/count` ,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n        }\r\n    })\r\n}\r\n\r\nexport const adminOrderQuery = () => {\r\n    return axios.get(`${API}dashboard/order/query/admin_order/query` ,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n        }\r\n    })\r\n}","import jwt_decode from 'jwt-decode';\r\nimport {createContext, useReducer} from \"react\";\r\nimport {useHistory, Redirect} from \"react-router-dom\";\r\nimport React from 'react';\r\nimport moment from \"moment\";\r\n\r\nexport const authenticate = (token, cb) => {\r\n    if (typeof window !== 'undefined') {\r\n        console.log(token)\r\n        localStorage.setItem('jwt', JSON.stringify(token));\r\n        cb();\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window === 'undefined') return false;\r\n    if (localStorage.getItem('jwt')) {\r\n        const {exp, role} = jwt_decode(JSON.parse(localStorage.getItem('jwt')));\r\n\r\n        if (role === \"superadmin\" || role === \"admin\") {\r\n            console.log(\"ok\")\r\n            if ((new Date()).getTime() < exp * 1000) {\r\n                return true;\r\n            } else {\r\n                localStorage.removeItem('jwt');\r\n                checkLoggedInUser()\r\n                return false\r\n            }\r\n        } else{\r\n            localStorage.clear()\r\n            console.log(role)\r\n            checkLoggedInUser()\r\n        }\r\n    } else return false;\r\n}\r\n\r\n\r\nexport const userInfo = () => {\r\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\r\n    const decoded = jwt_decode(jwt);\r\n    return {...decoded, token: jwt}\r\n}\r\nconst checkLoggedInUser = () => {\r\n    if (typeof window !== \"undefined\" || !localStorage.getItem(\"jwt\")) {\r\n        const route = location.pathname\r\n        const history = useHistory();\r\n        history.push(\"/\");\r\n        if (route !== '/') {\r\n            location.reload()\r\n        }\r\n    }\r\n}\r\n\r\nconst initialstate = {\r\n    user: null,\r\n};\r\nif (localStorage.getItem(\"jwt\")) {\r\n    const jwt_Token_decoded = jwt_decode(localStorage.getItem(\"jwt\"));\r\n    // console.log(jwt_Token_decoded)\r\n    // console.log(jwt_Token_decoded.exp * 1000);\r\n    console.log(Date.now());\r\n    if (!jwt_Token_decoded.flag) {\r\n        localStorage.clear()\r\n        checkLoggedInUser()\r\n    }\r\n    if (jwt_Token_decoded.expire * 1000 < Date.now()) {\r\n        localStorage.clear(); // this runs only when I refresh the page or reload on route change it dosent work\r\n        checkLoggedInUser()\r\n    } else {\r\n        initialstate.user = jwt_Token_decoded;\r\n    }\r\n}\r\n\r\n\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    login: (userData) => {\r\n    },\r\n    logout: () => {\r\n    },\r\n});\r\nconst AuthReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n            };\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                user: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n    const clearCacheData = () => {\r\n        const timer = localStorage.getItem(\"timer\")\r\n        if (timer) {\r\n            if (moment(parseInt(timer)).add(6, \"hours\").unix() > moment().unix()){\r\n                cleaner()\r\n                localStorage.setItem(\"timer\", Date.now())\r\n            }\r\n        }\r\n        else {\r\n            localStorage.setItem(\"timer\", Date.now())\r\n        }\r\n    };\r\n\r\n    const cleaner = () => {\r\n        caches.keys().then((names) => {\r\n            names.forEach((name) => {\r\n                caches.delete(name).then(r =>  alert('Complete Cache Cleared'));\r\n            });\r\n        });\r\n    }\r\n\r\nexport const AuthProvider = (props) => {\r\n    checkLoggedInUser()\r\n    clearCacheData()\r\n    const [state, dispatch] = useReducer(AuthReducer, initialstate);\r\n    const login = (userData) => {\r\n        localStorage.setItem(\"jwt\", userData.token);\r\n        dispatch({\r\n            type: \"LOGIN\",\r\n            payload: userData,\r\n        });\r\n    };\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        dispatch({action: \"LOGOUT\"});\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{user: state.user, login, logout}}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport {AuthContext};","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const getAllUser = (token) => {\r\n    return axios.get(`${API}admin/user/all_user`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const getAllUserList = (token) => {\r\n    return axios.get(`${API}admin/user/all/users`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const getActiveUserList = (token) => {\r\n    return axios.get(`${API}admin/user/active/users`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getOneUser = (id) => {\r\n    return axios.get(`${API}admin/user/find/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteUser = (token,id) => {\r\n    return axios.delete(`${API}admin/user/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUserRole = (token,role) => {\r\n    return axios.put(`${API}admin/user/roleUpdate/${role._id}`, role, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUserActiveStatus = (activeStatus) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    const user = jwt_decode(token)\r\n    const id = user.id;\r\n    const data={\r\n        activeStatus:activeStatus\r\n    }\r\n    \r\n    return axios.put(`${API}admin/user/activeStatusUpdate/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUserActiveStatus2 = (activeStatus,id) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    const user = jwt_decode(token)\r\n   \r\n    const data={\r\n        activeStatus:activeStatus\r\n    }\r\n    \r\n    return axios.put(`${API}admin/user/activeStatusUpdate/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const addProduct = (token,productIds) => {\r\n    const productList={\r\n        productList:productIds\r\n    }\r\n    return axios.put(`${API}admin/user/add/product`, productList, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const deleteProduct = (productId) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${API}admin/user/delete/product/${productId}`,{\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const deleteAllProduct = () => {\r\n    console.log(\"id\")\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.delete(`${API}admin/user/delete/product/all/admin`,{\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getJwt = () => {\r\n    return axios.get(`${API}admin/user/get/jwt`,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeJwt = () => {\r\n    return axios.get(`${API}admin/user/remove/jwt` ,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const findUserByPhoneNumber = (number) => {\r\n    return axios.get(`${API}admin/user/find/number/${number}`,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n}\r\n\r\nexport const otpSend = (id,code) => {\r\n    const data={\r\n        otp:code\r\n    }\r\n    return axios.put(`${API}admin/user/otp/${id}`,data,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Content-Type\":\"application/json\"\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUser = (id,pass) => {\r\n    const data={\r\n        password:pass\r\n    }\r\n    return axios.put(`${API}admin/user/update/password/${id}`,data,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Content-Type\":\"application/json\",\r\n        }\r\n\r\n    })\r\n};\r\n\r\nexport const updateUserPassword = (id, pass) => {\r\n    console.log(id)\r\n    const data={\r\n        password:pass\r\n    }\r\n    return axios.put(`${API}admin/user/edit/password/${id}`,data,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Content-Type\":\"application/json\",\r\n        }\r\n\r\n    })\r\n}\r\n","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const adminProfile = () => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    const user = jwt_decode(token)\r\n    const userId = user.id;\r\n    return axios.get(`${API}admin/user/find/${userId}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n\r\n    })\r\n};\r\n\r\nexport const adminProfileUpdate = (token,id,data) => {\r\n    return axios.put(`${API}admin/user/update/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n\r\n    })\r\n};\r\n\r\n\r\nexport const passwordUpdate = (token,id,data) => {\r\n    return axios.put(`${API}admin/user/updatePassword/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n\r\n    })\r\n};\r\n\r\nexport const passwordEdit = (token,id,data) => {\r\n    return axios.put(`${API}admin/user/update/password/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n\r\n    })\r\n};\r\n","import { toast, Slide } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./notification.css\"\r\n\r\ntoast.configure({\r\n  position: toast.POSITION.BOTTOM_RIGHT,\r\n})\r\n\r\nexport const notify = (msg) => {\r\n  toast(`${msg}`)\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { userInfo } from '../utils/auth';\r\nimport { BsPencilSquare } from \"react-icons/bs\"\r\nimport { notify } from '../utils/notification';\r\nimport { getAllWallet } from '../Api/wallet'\r\nimport { editBalance } from '../Api/wallet'\r\nimport { deleteUser } from '../Api/user';\r\nimport { passwordEdit } from \"../Api/userAdmin\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    Form\r\n} from \"react-bootstrap\";\r\nlet userWalletId, walletUserName;\r\nlet userEmail, userName;\r\n\r\nconst UserList = ({ allUserList, loading, paginate,getAllUserList,postsPerPages }) => {\r\n\r\n    const [allWallet, setAllWallet] = useState([]);\r\n    const { token, role, id } = userInfo();\r\n    const [show, setShow] = useState(false);\r\n    const [show2, setShow2] = useState(false);\r\n    const handleClose = () => { setShow(false), setShow2(false) };\r\n    const handleShow = () => setShow(true);\r\n    const handleShow2 = () => setShow2(true);\r\n\r\n\r\n    useEffect(() => {\r\n        getAllWallet(token)\r\n            .then(res => setAllWallet(res.data))\r\n    }, [allWallet])\r\n\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    const modalOpen = (walletId, name) => () => {\r\n        handleShow()\r\n        userWalletId = walletId;\r\n        walletUserName = name;\r\n    }\r\n\r\n    const modalOpen2 = (email, name) => () => {\r\n        handleShow2()\r\n        userEmail = email;\r\n        userName = name;\r\n\r\n    }\r\n\r\n    const [walletBalance, setWalletBalance] = useState({\r\n        amount: '',\r\n        disabled: false\r\n    });\r\n\r\n    const { amount } = walletBalance;\r\n\r\n    const handleChange = e => {\r\n        setWalletBalance({\r\n            ...walletBalance,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleChange2 = e => {\r\n        setEditPassword({\r\n            ...editPassword,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const editUserBalance = () => {\r\n        handleClose();\r\n        setWalletBalance({\r\n            ...walletBalance,\r\n            disabled: true\r\n        })\r\n        editBalance(token, userWalletId, parseInt(amount))\r\n            .then(res => {\r\n                setWalletBalance({\r\n                    amount: '',\r\n                    disabled: true\r\n                })\r\n                notify(`${walletUserName}'s wallet balance updated`)\r\n            })\r\n            .catch(err => {\r\n                setWalletBalance({\r\n                    amount: '',\r\n                    disabled: false\r\n                })\r\n                notify(`Something went wrong. Please try again`)\r\n            })\r\n    }\r\n\r\n\r\n    const deleteUserById = (id) => () => {\r\n        setDisabled({\r\n            disabledd: true\r\n        })\r\n        deleteUser(token, id)\r\n            .then((response) => {\r\n                getAllUserList()\r\n                notify('User Delete Successfully')\r\n                setDisabled({\r\n                    disabledd: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                notify('Something went wrong')\r\n                setDisabled({\r\n                    disabledd: false\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    const editUserPassword = async () => {\r\n        if (newPassword !== newRePassword) {\r\n            notify('password do not match')\r\n        } else {\r\n            const update = {\r\n                newPassword: newPassword,\r\n                email: userEmail\r\n            }\r\n\r\n            await passwordEdit(token, id, update).then(res => {\r\n                notify('Password Updated')\r\n                handleClose()\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const [editPassword, setEditPassword] = useState({\r\n        newPassword: '',\r\n        newRePassword: ''\r\n    });\r\n    \r\n\r\n    const { newPassword, newRePassword } = editPassword;\r\n\r\n\r\n    const [disabled, setDisabled] = useState({\r\n        disabledd: false\r\n    });\r\n\r\n    const { disabledd } = disabled\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header style={{ margin: \"40px 10px 0px 15px\" }}>\r\n                    Edit {walletUserName}'s Wallet Balance\r\n                </Modal.Header>\r\n                <Modal.Body style={{ margin: \"10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Enter the amount</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"amount\" placeholder=\"Enter amount\" onChange={handleChange} style={{ width: \"80%\" }} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={editUserBalance}>\r\n                        Edit\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={show2} onHide={handleClose}>\r\n                <Modal.Header style={{ margin: \"40px 10px 0px 15px\" }}>\r\n                    Edit {userName}'s password\r\n                </Modal.Header>\r\n                <Modal.Body style={{ margin: \"10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Enter New Password</Form.Label>\r\n                            <Form.Control type=\"password\" name=\"newPassword\" placeholder=\"Enter New Password\" onChange={handleChange2} style={{ width: \"80%\" }} />\r\n                            <Form.Label>Re-enter Password</Form.Label>\r\n                            <Form.Control type=\"password\" name=\"newRePassword\" placeholder=\"Enter New Password\" onChange={handleChange2} style={{ width: \"80%\" }} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={editUserPassword}>\r\n                        Edit\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {allUserList && allUserList.filter(filteredData => filteredData.role === 'user' && filteredData.disabled === false).map((user, index) => (\r\n                <tr>\r\n                    <td>{(paginate - 1) * parseInt(postsPerPages) + index + 1}</td>\r\n                    <td>{user.userIdNo}</td>\r\n                    <td>{user.username} {user.vipBatch === true && (<><span style={{ color: \"blue\", fontSize: \".7rem\", fontWeight: \"bold\" }}>* (VIP Batch)</span></>)}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.phonenumber}</td>\r\n                    {allWallet && allWallet.map(wallet => {\r\n                        if (user._id === wallet.userId) {\r\n                            return (\r\n\r\n                                <td><div className='d-flex justify-content-around'>\r\n                                    <div>{wallet.currentAmount}</div>\r\n                                    <div><BsPencilSquare style={{ fontSize: 'x-large', cursor: \"pointer\" }} onClick={modalOpen(wallet._id, user.username)} /></div>\r\n                                </div></td>\r\n                            )\r\n                        }\r\n                    })}\r\n                    {(role === 'superadmin' || role === 'admin') && (<>\r\n                        <td className=\"border-0\"><button className='btn btn-danger' disabled={disabledd} onClick={modalOpen2(user.email, user.username)}>Edit Password</button></td>\r\n                    </>)}\r\n                    {(role === 'superadmin' || role === 'admin') && (<>\r\n                        <td className=\"border-0\"><button className='btn btn-danger' disabled={disabledd} onClick={deleteUserById(user._id)}>Delete</button></td>\r\n                    </>)}\r\n                </tr>\r\n            ))\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserList;","import React, { useState, useEffect } from 'react';\r\nimport { getAllUser } from '../Api/user';\r\nimport { userInfo } from '../utils/auth';\r\nimport './TableList.css';\r\nimport Tables from './AdminList'\r\nimport Tabless from './UserList'\r\nimport Pagination from './Pagination'\r\n// react-bootstrap components\r\nimport {\r\n  Card,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nlet userList;\r\n\r\nfunction TableList() {\r\n  const [adminList, setAdminList] = useState([]);\r\n  const [allUserList, setAllUserList] = useState([]);\r\n  const { token, role } = userInfo();\r\n\r\n  useEffect(() => {\r\n    getAllUserList()\r\n  }, [])\r\n\r\n\r\n  const getAllUserList = () => {\r\n    getAllUser(token)\r\n      .then(response => {\r\n        let admin = response.data && response.data.filter(filteredData => filteredData.role === 'admin' && filteredData.disabled === false)\r\n        setAdminList(admin)\r\n        let user = response.data && response.data.filter(filteredData => filteredData.role === 'user' && filteredData.disabled === false)\r\n        setAllUserList(user)\r\n      })\r\n  }\r\n\r\n  const searchForAdminList = (e) => {\r\n    let searchTerm = e.currentTarget.value\r\n    userList = false;\r\n    getAllUser(token)\r\n      .then(res => {\r\n        if (res.data) {\r\n          filterContent(res.data, searchTerm)\r\n        }\r\n      })\r\n  }\r\n\r\n  const searchForAllUserList = (e) => {\r\n    let searchTerm = e.currentTarget.value\r\n    userList = true;\r\n    getAllUser(token)\r\n      .then(res => {\r\n        if (res.data) {\r\n          filterContent(res.data, searchTerm)\r\n        }\r\n      })\r\n  }\r\n\r\n  const filterContent = (users, searchTerm) => {\r\n    const result = users.filter((user) =>\r\n      user.username?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n      user.email?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n      user.role?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n      user.phonenumber?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n      ((parseInt(user.wallet?.currentAmount)).toString()).includes(searchTerm) ||\r\n      ((parseInt(user.userIdNo)).toString()).includes(searchTerm)\r\n    )\r\n\r\n    if (userList === true) {\r\n      let value = result.filter(filteredData => filteredData.role === 'user')\r\n      setAllUserList(value)\r\n    }\r\n    else if (userList === false) {\r\n      let value = result.filter(filteredData => filteredData.role === 'admin' || filteredData.role === 'superadmin')\r\n      setAdminList(value)\r\n    }\r\n\r\n  }\r\n\r\n  const rowSelectForUserTable = (e) => {\r\n    setPostsPerPages(e.target.value)\r\n  }\r\n\r\n  const rowSelectForAdminTable = (e) => {\r\n    setPostsPerPage(e.target.value)\r\n  }\r\n\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(10);\r\n\r\n\r\n  const [currentPages, setCurrentPages] = useState(1);\r\n  let [postsPerPages, setPostsPerPages] = useState(10);\r\n\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPost = adminList.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  let indexOfLastPosts = currentPages * postsPerPages;\r\n  let indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n  let currentPosts = allUserList.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n  const [admin, setAdmin] = useState(0);\r\n  const [user, setUser] = useState(0);\r\n\r\n  const paginate = pageNumber => {\r\n    setCurrentPage(pageNumber)\r\n    setAdmin(pageNumber)\r\n  }\r\n  const paginates = pageNumber => {\r\n    setCurrentPages(pageNumber)\r\n    setUser(pageNumber)\r\n  }\r\n\r\n  let selectArray = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"strpied-tabled-with-hover\">\r\n              <Card.Header>\r\n                <div style={{ float: \"right\", width: \"300px\" }}>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    name=\"serachTerm\"\r\n                    onChange={searchForAdminList}\r\n                  >\r\n                  </input>\r\n                </div>\r\n                <Card.Title as=\"h4\">Admin List</Card.Title>\r\n              </Card.Header>\r\n              <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                <Table className=\"table-hover table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"border-0\">#</th>\r\n                      <th className=\"border-0\">User ID</th>\r\n                      <th className=\"border-0\">Name</th>\r\n                      <th className=\"border-0\">Email</th>\r\n                      <th className=\"border-0\">Phone No</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <Tables adminList={currentPost} loading={loading} paginate={currentPage} postsPerPage={postsPerPage}/>\r\n                  </tbody>\r\n                </Table>\r\n                <div className='d-flex'>\r\n                  <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={adminList.length}\r\n                    paginate={paginate}\r\n                    Number={admin}\r\n                  />\r\n                  {adminList.length > 0 && (\r\n                    <div className='ml-5' >\r\n                      <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForAdminTable(e)}>\r\n                        {selectArray.map(number => {\r\n                          return (\r\n                            <option value={number} >{number}</option>\r\n                          )\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col md=\"12\">\r\n            <Card className=\"strpied-tabled-with-hover\">\r\n              <Card.Header>\r\n                <div style={{ float: \"right\", width: \"300px\" }}>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    name=\"serachTerm\"\r\n                    onChange={searchForAllUserList}\r\n                  >\r\n                  </input>\r\n                </div>\r\n                <Card.Title as=\"h4\">User List:</Card.Title>\r\n              </Card.Header>\r\n              <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                <Table className=\"table-hover table-striped\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"border-0\">#</th>\r\n                      <th className=\"border-0\">User ID</th>\r\n                      <th className=\"border-0\">Name</th>\r\n                      <th className=\"border-0\">Email</th>\r\n                      <th className=\"border-0\">Phone No</th>\r\n                      <th className=\"border-0\">Wallet Balance</th>\r\n                      {(role === 'superadmin') && (<>\r\n                        <th className=\"border-0\"></th>\r\n                      </>)}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <Tabless allUserList={currentPosts} loading={loading} paginate={currentPages} getAllUserList={getAllUserList} postsPerPages={postsPerPages} />\r\n                  </tbody>\r\n                </Table>\r\n                <div className='d-flex'>\r\n                  <Pagination\r\n                    postsPerPage={postsPerPages}\r\n                    totalPosts={allUserList.length}\r\n                    paginate={paginates}\r\n                    Number={user}\r\n                  />\r\n                  {allUserList.length > 0 && (\r\n                    <div className='ml-5' >\r\n                      <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForUserTable(e)}>\r\n                        {selectArray.map(number => {\r\n                          return (\r\n                            <option value={number} >{number}</option>\r\n                          )\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TableList;\r\n","import axios from \"axios\";\r\nimport { API } from '../utils/config';\r\n\r\nexport const sendMessageAPI = (sendMessage) => {\r\n    return axios.post(`${API}sendMessage`,sendMessage,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}\r\n\r\nexport const sendMessageAllUser = (sendMessage) => {\r\n    return axios.post(`${API}sendMessage/allUser`,sendMessage,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"../components/Main/User/userinfo.css\"\r\nimport { userInfo } from '../utils/auth';\r\nimport { getOneUser, otpSend } from \"../Api/user\";\r\nimport { adminProfileUpdate, passwordUpdate } from \"../Api/userAdmin\";\r\nimport Avatar from \"antd/es/avatar/avatar\";\r\nimport animationData from \"../assets/lotte/34658-profile-in-mobile.json\";\r\nimport { notify } from '../utils/notification';\r\nimport { Box, Button, Chip, Container, Grid, Modal, Paper, TextField, Typography } from \"@mui/material\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { sendMessageAPI } from \"../Api/sendMessage\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\nconst UserProfile = () => {\r\n    const { token, id } = userInfo();\r\n    const {\r\n        register: registerPassword,\r\n        handleSubmit: submitPassword,\r\n        setError: setPasswordError,\r\n        formState: { errors: errorsPassword }\r\n    } = useForm();\r\n    const {\r\n        register: registerPhone,\r\n        handleSubmit: submitPhone,\r\n        setError: setPhoneError,\r\n        formState: { errors: errorsPhone }\r\n    } = useForm();\r\n    const {\r\n        register: checkOtp,\r\n        handleSubmit: submitOTP,\r\n        setError: setOTPError,\r\n        formState: { errors: errorsOTP }\r\n    } = useForm();\r\n    const [admin, setAdmin] = useState(\r\n        {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            phonenumber: '',\r\n            disabled: false,\r\n            formData: '',\r\n        }\r\n    )\r\n    const [name, setName] = useState({\r\n        username: '',\r\n        profilePic: ''\r\n    })\r\n    // const {username, email, password, confirmPassword, phonenumber, disabled, image, formData} = admin\r\n\r\n    useEffect(() => {\r\n        getOneUser( id)\r\n            .then(response => setAdmin(response.data))\r\n            .then(response => setAdmin({ formData: new FormData() }))\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getOneUser(id).then(response => setName(response.data))\r\n    })\r\n    useEffect(() => {\r\n        setAdmin({\r\n            ...admin,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAdmin({\r\n            ...admin,\r\n            [e.target.name]: value,\r\n        })\r\n\r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const [phone, setPhone] = React.useState(false);\r\n    const handleOpenPhone = () => setPhone(true);\r\n    const handleClosePhone = () => setPhone(false);\r\n    const [otp, setOtp] = React.useState(false);\r\n    const handleOpenOtp = () => setOtp(true);\r\n    const handleCloseOtp = () => setOtp(false);\r\n\r\n\r\n    function handleClick() {\r\n        handleOpen()\r\n    }\r\n\r\n    async function handleSubmitPassword(data) {\r\n        if (data.newPassword !== data.newRePassword) {\r\n            setPasswordError(\"newRePassword\", { type: 'notMatched', message: 'password do not match' })\r\n        } else {\r\n            const update = {\r\n                oldPassword: data.oldPassword,\r\n                newPassword: data.newPassword,\r\n                email: name.email\r\n            }\r\n\r\n            await passwordUpdate(token, id, update).then(res => {\r\n                if (res.data === \"password updated!\") {\r\n                    notify('Profile Updated')\r\n                    handleClose()\r\n                } else if (res.data === \"wrong password!\") {\r\n                    setPasswordError(\"oldPassword\", { type: 'notMatched', message: 'old password do not match' })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function addPhoneNumber() {\r\n        handleOpenPhone()\r\n        // checkNumber()\r\n    }\r\n\r\n    const [verifyOtp, setVerifyOtp] = useState({})\r\n\r\n    const checkNumber = (userNumber) => {\r\n        let val = Math.floor(1000 + Math.random() * 9000);\r\n        setVerifyOtp({\r\n            otp: val\r\n        })\r\n        let sms = `Sizishop OTP Code: ${val}`\r\n        let sendMessage = {\r\n            number: userNumber,\r\n            message: sms.replaceAll(\" \", \"%20\")\r\n        }\r\n        otpSend(id, val)\r\n            .then(res => {\r\n                handleClosePhone()\r\n                handleOpenOtp()\r\n                sendMessageAPI(sendMessage).then(r => {\r\n\r\n                })\r\n            })\r\n\r\n        // return (\r\n        //     setOtp(true),\r\n        //         setPhone_number(false),\r\n        //         setPassword(false)\r\n        // )\r\n    }\r\n    const [number, setNumber] = useState({})\r\n    function sendOtp(data) {\r\n        setNumber(data)\r\n        checkNumber(data.phonenumber)\r\n    }\r\n\r\n    async function updatePhoneNumber(data) {\r\n        if (data.otp * 1 === verifyOtp.otp) {\r\n            await adminProfileUpdate(token, id, number)\r\n                .then(r => {\r\n                    handleCloseOtp()\r\n                })\r\n                .catch(err => {\r\n                    notify(\"Number already exists!\")\r\n                    handleCloseOtp()\r\n                })\r\n        }\r\n        else {\r\n            setOTPError('otp', { type: 'notMatched', message: 'otp do not matched' })\r\n        }\r\n\r\n    }\r\n\r\n    let letter = '';\r\n    var userNameLetter = name.username.match(/\\b(\\w)/g);\r\n    if (userNameLetter) {\r\n        userNameLetter.map(a => {\r\n            letter = letter + a\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal open={otp}\r\n                onClose={handleCloseOtp}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\" >\r\n                <form onSubmit={submitOTP(updatePhoneNumber)}>\r\n                    <Box sx={style}>\r\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            Type OTP\r\n                        </Typography>\r\n                        <TextField {...checkOtp(\"otp\", { required: \"Otp is required\", })}\r\n                            error={Boolean(errorsPhone.otp)}\r\n                            helperText={errorsPhone.otp?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }} label=\"OTP\" variant=\"outlined\"\r\n                            type=\"number\" />\r\n                        <Box style={{ display: \"flex\", justifyContent: 'center', marginTop: 10 }}>\r\n                            <Button variant=\"outlined\" type='submit' style={{ marginRight: 5 }}>\r\n                                Save Number\r\n                            </Button>\r\n                            <Button variant=\"outlined\" onClick={handleCloseOtp}>\r\n                                cancel\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </form>\r\n\r\n            </Modal>\r\n            <Modal open={phone}\r\n                onClose={handleClosePhone}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\" >\r\n                <form onSubmit={submitPhone(sendOtp)}>\r\n                    <Box sx={style}>\r\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            Add Phone Number\r\n                        </Typography>\r\n                        <TextField {...registerPhone(\"phonenumber\", { required: \"Phone Number is required\", })}\r\n                            error={Boolean(errorsPhone.phonenumber)}\r\n                            helperText={errorsPhone.phonenumber?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }} label=\"Phone Number\" variant=\"outlined\"\r\n                            type=\"number\" />\r\n                        <Box style={{ display: \"flex\", justifyContent: 'center', marginTop: 10 }}>\r\n                            <Button variant=\"outlined\" type='submit' style={{ marginRight: 5 }}>\r\n                                Send Token\r\n                            </Button>\r\n                            <Button variant=\"outlined\" onClick={handleClosePhone}>\r\n                                cancel\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </form>\r\n\r\n            </Modal>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <form onSubmit={submitPassword(handleSubmitPassword)}>\r\n                    <Box sx={style}>\r\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                            Change Password\r\n                        </Typography>\r\n                        <TextField {...registerPassword(\"oldPassword\", { required: \"Old Password is required\", })}\r\n                            error={Boolean(errorsPassword.oldPassword)}\r\n                            helperText={errorsPassword.oldPassword?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }} label=\"Old Password\" variant=\"outlined\"\r\n                            type=\"password\" />\r\n                        <TextField {...registerPassword(\"newPassword\", {\r\n                            required: \"New password is required\",\r\n                            minLength: { value: 8, message: \"minimum length 8\" }\r\n                        })}\r\n                            error={Boolean(errorsPassword.newPassword)}\r\n                            helperText={errorsPassword.newPassword?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }}\r\n                            label=\"New Password\" variant=\"outlined\" type=\"password\" />\r\n                        <TextField {...registerPassword(\"newRePassword\", {\r\n                            required: \"Re-enter New password is required\",\r\n                            minLength: { value: 8, message: \"minimum length 8\" }\r\n                        })}\r\n                            error={Boolean(errorsPassword.newRePassword)}\r\n                            helperText={errorsPassword.newRePassword?.message} id=\"outlined-basic\" size=\"small\"\r\n                            style={{ width: '100%', marginTop: 20 }}\r\n                            label=\"Re-enter New Password\" variant=\"outlined\" type=\"password\" />\r\n                        <Box style={{ display: \"flex\", justifyContent: 'center', marginTop: 10 }}>\r\n                            <Button variant=\"outlined\" type='submit' style={{ marginRight: 5 }}>\r\n                                Submit\r\n                            </Button>\r\n                            <Button variant=\"outlined\" onClick={handleClose}>\r\n                                cancel\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </form>\r\n\r\n            </Modal>\r\n\r\n            <Container container>\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    style={{ minHeight: '100vh' }}\r\n                >\r\n\r\n                    <div class=\"circle\">{letter}</div>\r\n                    \r\n                    <Grid item xs={3}>\r\n                        <Typography style={{ padding: 5, textAlign: 'center', fontWeight: \"bold\", fontSize: 18 }}>\r\n                            {name.username}\r\n                        </Typography>\r\n                        <Box style={{ marginTop: 10 }}>\r\n                            <Paper sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                minWidth: 400\r\n                            }}>\r\n                                <Typography style={{ padding: 10, fontWeight: \"bold\", fontSize: 17, marginTop: 10 }}>\r\n                                    User Id\r\n                                </Typography>\r\n                                <Typography\r\n                                    style={{ padding: 10, fontSize: 17, marginTop: 10, marginRight: 0, display: '' }}>\r\n                                    {name.userIdNo}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Box>\r\n                        <Box style={{ marginTop: 10 }}>\r\n                            <Paper sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                minWidth: 400\r\n                            }}>\r\n                                <Typography style={{ padding: 10, fontWeight: \"bold\", fontSize: 17, marginTop: 10 }}>\r\n                                    Email\r\n                                </Typography>\r\n                                <Typography\r\n                                    style={{ padding: 10, fontSize: 17, marginTop: 10, marginRight: 0, display: '' }}>\r\n                                    {name.email}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Box>\r\n                        <Box style={{ marginTop: 10 }}>\r\n                            <Paper sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                minWidth: 400\r\n                            }}>\r\n                                <Typography style={{ padding: 10, fontWeight: \"bold\", fontSize: 17, marginTop: 10 }}>\r\n                                    Phone Number\r\n                                </Typography>\r\n                                {name.phonenumber && <Typography\r\n                                    style={{ padding: 10, fontSize: 17, marginTop: 10, marginRight: 0, display: '' }}>\r\n                                    {name.phonenumber}\r\n                                </Typography>}\r\n                                {!name.phonenumber && <Chip label=\"Add Phone Number\" onClick={e => addPhoneNumber()}\r\n                                    style={{\r\n                                        padding: 10,\r\n                                        fontSize: 17,\r\n                                        marginTop: 10,\r\n                                        marginRight: 0,\r\n                                        display: ''\r\n                                    }} />}\r\n\r\n                            </Paper>\r\n                        </Box>\r\n                        <Box style={{ marginTop: 10 }}>\r\n                            <Paper sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'space-between',\r\n                                minWidth: 400\r\n                            }}>\r\n                                <Typography style={{ padding: 10, fontWeight: \"bold\", fontSize: 17, marginTop: 10 }}>\r\n                                    Password\r\n                                </Typography>\r\n                                {!name.googleId && <Chip label=\"Change Password\" onClick={handleClick}\r\n                                    style={{\r\n                                        padding: 10,\r\n                                        fontSize: 17,\r\n                                        marginTop: 10,\r\n                                        marginRight: 0,\r\n                                        display: ''\r\n                                    }} />}\r\n                                {name.googleId && <Typography>\r\n                                    Logged in with google id\r\n                                </Typography>}\r\n\r\n\r\n                            </Paper>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserProfile","import React from 'react';\r\n\r\nconst AdminList = ({ adminList, loading, paginate,postsPerPage }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {adminList && adminList.filter(filteredData => filteredData.role === 'admin' && filteredData.disabled === false).map((user, index) => (\r\n                      <tr>\r\n                        <td>{(paginate - 1) * parseInt(postsPerPage) + index + 1}</td>\r\n                        <td>{user.userIdNo}</td>\r\n                        <td>{user.username}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{user.phonenumber}</td>\r\n                      </tr>\r\n                    ))\r\n                    }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminList;","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const createWallet = (token,id) => {\r\n    const data={\r\n        userId:id\r\n    }\r\n    return axios.post(`${API}admin/wallet`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateUserWallet = (token,id,walletId) => {\r\n    const data={\r\n        wallet:walletId\r\n    }\r\n    return axios.put(`${API}admin/user/walletUpdate/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const editBalance = (token,id,amount) => {\r\n    const data={\r\n        amount:amount\r\n    }\r\n    return axios.put(`${API}admin/wallet/updateUserAmount/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getAllWallet = (token) => {\r\n    return axios.get(`${API}admin/wallet`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getWalletById = (token,id) => {\r\n    return axios.get(`${API}admin/wallet/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateWallet = (token,id,amount,spent) => {\r\n    const data={\r\n        amount,\r\n        spent\r\n    }\r\n    return axios.put(`${API}admin/wallet/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const addSpentAmount = (token,id,amount,orderId) => {\r\n    const data={\r\n        amount,\r\n        orderId\r\n    }\r\n    return axios.put(`${API}admin/wallet/addSpentAmount/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const removeSpentAmount = (token,id,amount,orderId) => {\r\n    const data={\r\n        amount,\r\n        orderId\r\n    }\r\n    return axios.put(`${API}admin/wallet/removeSpentAmount/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteWallet = (token,id) => {\r\n    return axios.delete(`${API}admin/wallet/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n","import React, { useEffect } from 'react';\r\nlet num = 0;\r\n\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate, Number }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    let totalPagination = pageNumbers.length\r\n\r\n    let pages=[]\r\n\r\n    if(totalPagination>10){\r\n        for (let i = 1; i <= 10; i++) {\r\n            pages.push(i);\r\n        }\r\n    }\r\n    else{\r\n        pages=pageNumbers\r\n    }\r\n\r\n    const pageNumber = (number) => () => {\r\n        num = number;\r\n    }\r\n\r\n    const previous = () => {\r\n        num = Number\r\n        if (num > 0) {\r\n            if (num > 1) {\r\n                paginate(num - 1)\r\n                num = num - 1\r\n            } else {\r\n                paginate(1)\r\n            }\r\n        }\r\n        else {\r\n            paginate(1)\r\n        }\r\n    }\r\n\r\n    const next = () => {\r\n        num = Number\r\n        if (num < totalPagination) {\r\n            if (num < totalPagination - 1) {\r\n                paginate(num + 1)\r\n                num = num + 1\r\n            } else {\r\n                paginate(totalPagination)\r\n            }\r\n        }\r\n        else {\r\n            paginate(totalPagination)\r\n        }\r\n    }\r\n\r\n    const start = () => {\r\n        paginate(1)\r\n    }\r\n\r\n    const end = () => {\r\n        paginate(totalPagination)\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {totalPagination > 1 && (\r\n                    <>\r\n                        <li className='page-item'>\r\n                            <a className='page-link' onClick={start}>\r\n                                <span aria-hidden=\"true\"><i class=\"fa fa-angle-double-left\"></i></span>\r\n                                <span class=\"sr-only\">Previous</span>\r\n                            </a>\r\n                        </li>\r\n                        <li className='page-item'>\r\n                            <a className='page-link' onClick={previous}>\r\n                                <span aria-hidden=\"true\"><i class=\"fa fa-angle-left\"></i></span>\r\n                                <span class=\"sr-only\">Previous</span>\r\n                            </a>\r\n                        </li>\r\n                    </>\r\n                )}\r\n\r\n                {pages.map(number => {\r\n                    return (\r\n                        <li key={number} className='page-item' onClick={pageNumber(number)}>\r\n                            <a onClick={() => paginate(number)} className='page-link'>\r\n                                {number}\r\n                            </a>\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n                {totalPagination > 1 && (\r\n                    <>\r\n                        <li className='page-item'>\r\n                            <a className='page-link' onClick={next}>\r\n                                <span aria-hidden=\"true\"><i class=\"fa fa-angle-right\"></i></span>\r\n                                <span class=\"sr-only\">Previous</span>\r\n                            </a>\r\n                        </li>\r\n                        <li className='page-item'>\r\n                            <a className='page-link' onClick={end}>\r\n                                <span aria-hidden=\"true\"><i class=\"fa fa-angle-double-right\"></i></span>\r\n                                <span class=\"sr-only\">Next</span>\r\n                            </a>\r\n                        </li>\r\n                    </>\r\n                )}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { getOrders } from \"../Api/order\";\r\nimport { userInfo } from '../utils/auth';\r\n\r\nimport Tables from \"./TableUser\";\r\nimport Pagination from \"./Pagination\";\r\nimport Tabless from \"./TableOrder\";\r\nimport Tablesss from \"./TableCancelOrder\"\r\nlet totalActive, totalComplete, totalCancel;\r\n\r\nconst Orders = () => {\r\n    const [activeOrders, setActiveOrders] = useState([])\r\n    const [completeOrders, setCompleteOrders] = useState([])\r\n    const [cancelledOrders, setCancelledOrders] = useState([])\r\n    const { token, id } = userInfo();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    const [currentPages, setCurrentPages] = useState(1);\r\n    const [postsPerPages] = useState(10);\r\n    const [currentPagess, setCurrentPagess] = useState(1);\r\n    const [postsPerPagess] = useState(10);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getOrders(token)\r\n            .then(response => {\r\n                const data = response.data\r\n                const active = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n                const complete = data && data.filter(filteredData => filteredData.isComplete === true && filteredData.reject === false)\r\n                const cancel = data && data.filter(filteredData => filteredData.reject === true)\r\n                setActiveOrders(active)\r\n                totalActive = active.length;\r\n                setCompleteOrders(complete)\r\n                totalComplete = complete.length;\r\n                setCancelledOrders(cancel)\r\n                totalCancel = cancel.length;\r\n            })\r\n    }, [])\r\n\r\n\r\n    const searchOrders = (e) => {\r\n        let searchTerm = e.currentTarget.value\r\n        getOrders(token)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    filterContent(res.data, searchTerm)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const filterContent = (orders, searchTerm) => {\r\n        const result = orders.filter((order) =>\r\n            ((parseInt(order.orderId)).toString()).includes(searchTerm) ||\r\n            order.productId?.gameName?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            order.productId?.categoryName?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            order.purchaseId?.product?.option?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(order.purchaseId?.product?.price)).toString()).includes(searchTerm) ||\r\n            ((parseInt(order.userId?.userIdNo)).toString()).includes(searchTerm)\r\n        )\r\n        let value = result.filter(filteredData => filteredData.isComplete === true && filteredData.reject === false)\r\n        setCompleteOrders(value)\r\n\r\n        let value2 = result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n        setActiveOrders(value2)\r\n\r\n        let value3 = result.filter(filteredData => filteredData.reject === true)\r\n        setCancelledOrders(value3)\r\n    }\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = activeOrders.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const indexOfLastPosts = currentPages * postsPerPages;\r\n    const indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n    const currentPosts = completeOrders.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n    const indexOfLastPostss = currentPagess * postsPerPagess;\r\n    const indexOfFirstPostss = indexOfLastPostss - postsPerPagess;\r\n    const currentPostss = cancelledOrders.slice(indexOfFirstPostss, indexOfLastPostss);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const paginates = pageNumber => setCurrentPages(pageNumber);\r\n    const paginatess = pageNumber => setCurrentPagess(pageNumber);\r\n\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <div style={{ float: \"right\", width: \"300px\", marginBottom: \"10px\" }}>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                name=\"serachTerm\"\r\n                                onChange={searchOrders}\r\n                            >\r\n                            </input>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Active Orders</Card.Title>\r\n                                <p className=\"card-category\">\r\n                                    Total active orders: {totalActive}\r\n                                </p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Order Status</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                            <th className=\"border-0\">HandOver Admin</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tables activeOrders={currentPost} loading={loading} paginate={currentPage} />\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPage}\r\n                                    totalPosts={activeOrders.length}\r\n                                    paginate={paginate}\r\n                                />\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Completed Orders</Card.Title>\r\n                                <p className=\"card-category\">\r\n                                    Total completed orders: {totalComplete}\r\n                                </p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Order Status</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                            <th className=\"border-0\">HandOver Admin</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tabless completeOrders={currentPosts} loading={loading} paginate={currentPages} />\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPages}\r\n                                    totalPosts={completeOrders.length}\r\n                                    paginate={paginates}\r\n                                />\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Cancelled Orders</Card.Title>\r\n                                <p className=\"card-category\">\r\n                                    Total cancelled orders: {totalCancel}\r\n                                </p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Order Status</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                            <th className=\"border-0\">HandOver Admin</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tablesss cancelledOrders={currentPostss} loading={loading} paginate={currentPagess} />\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagess}\r\n                                    totalPosts={cancelledOrders.length}\r\n                                    paginate={paginatess}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Orders","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\n\r\nexport const createNewOrder = (token,data) => {\r\n    return axios.post(`${API}admin/order/`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const orderQueue = () => {\r\n    return axios.get(`${API}admin/order/` ,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getOrders = (token) => {\r\n    return axios.get(`${API}admin/order/all`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getOrdersByAdminId = (token,id) => {\r\n    return axios.get(`${API}admin/order/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getOrdersById = (token,id) => {\r\n    return axios.get(`${API}admin/order/user/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateOrderStatus = (token,id,data) => {\r\n    return axios.put(`${API}admin/order/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const markAllComplete = (token,data) => {\r\n    return axios.put(`${API}admin/order/mark/All`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst OrderTables = ({ activeOrders, loading, paginate }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {activeOrders && activeOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false).map((order, index) => (\r\n                <tr key={index}>\r\n                <td>{(paginate - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}{order.productId?.categoryName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>Pending</td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    {order.handOverAdmin != null && (<>\r\n                        <td style={{ color: \"blue\" }}>{order.handOverAdmin?.username}</td>\r\n                    </>)}\r\n\r\n                    {order.handOverAdmin === null && (<>\r\n                        <td>\r\n                            N/A\r\n                        </td>\r\n                    </>)}\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst OrderTables = ({ completeOrders, loading, paginate }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {completeOrders && completeOrders.filter(filteredData => filteredData.isComplete === true).map((order, index) => (\r\n                <tr key={index}>\r\n                    <td>{(paginate - 1) * 10 + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}{order.productId?.categoryName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>Complete</td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    <td style={{ color: \"blue\" }}>{order.handOverAdmin?.username}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst OrderTables = ({ cancelledOrders, loading, paginate }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>{cancelledOrders && cancelledOrders.filter(filteredData => filteredData.reject === true).map((order, index) => (\r\n            <tr key={index}>\r\n                <td>{(paginate - 1) * 10 + index + 1}</td>\r\n                <td>{order.orderId}</td>\r\n                <td>{order.userId?.userIdNo}</td>\r\n                <td>{order.productId?.gameName}{order.productId?.categoryName}</td>\r\n                <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                <td>Cancel ( {order.rejectReason} )</td>\r\n                <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                <td style={{ color: \"blue\" }}>{order.handOverAdmin?.username}</td>\r\n            </tr>\r\n        ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { addBanners } from \"../../../Api/utility\";\r\nimport { userInfo } from '../../../utils/auth';\r\nimport { Alert } from \"antd\";\r\nimport { notify } from '../../../utils/notification'\r\n\r\nconst AddBanner = () => {\r\n    const [addBanner, setAddBanner] = useState({\r\n        firstTitle: '',\r\n        secondTitle: '',\r\n        link: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false,\r\n    })\r\n    let { success, alert, disabled } = values;\r\n    const { firstTitle, secondTitle, link, formData } = addBanner\r\n\r\n    useEffect(() => {\r\n        setAddBanner({\r\n            ...addBanner,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAddBanner({\r\n            ...addBanner,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        setValues({\r\n            ...values,\r\n            disabled: true\r\n        })\r\n\r\n        setAddBanner({\r\n            ...addBanner\r\n        })\r\n        const { token } = userInfo();\r\n        addBanners(token, formData)\r\n            .then(response => {\r\n                setAddBanner({\r\n                    firstTitle: '',\r\n                    secondTitle: '',\r\n                    link: '',\r\n                    success: true,\r\n                })\r\n                notify(\"Banner Added successfully!\")\r\n                setValues({\r\n                    ...values,\r\n                    disabled: false\r\n                })\r\n                e.target.reset();\r\n                setAddBanner({\r\n                    formData: new FormData()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                setValues({\r\n                    ...values,\r\n                    disabled: false\r\n                })\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(errMsg)\r\n                e.target.reset();\r\n                setAddBanner({\r\n                    formData: new FormData()\r\n                })\r\n            })\r\n    }\r\n\r\n    const BannerForm = () => (\r\n        <Card>\r\n            <Card.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                        <Form.Label>Upload a file</Form.Label>\r\n                        <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                    <Row>\r\n\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                <Form.Label>First Title</Form.Label>\r\n                                <Form.Control placeholder=\"firstTitle\" type=\"firstTitle\" name=\"firstTitle\"\r\n                                    value={firstTitle} onChange={handleChange} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                <Form.Label>Second Title</Form.Label>\r\n                                <Form.Control placeholder=\"Second Title\" type=\"secondTitle\" name=\"secondTitle\"\r\n                                    value={secondTitle} onChange={handleChange} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                <Form.Label>Link</Form.Label>\r\n                                <Form.Control placeholder=\"Link\" type=\"link\" name=\"link\"\r\n                                    value={link} onChange={handleChange} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={disabled}>\r\n                        Add\r\n                    </Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {BannerForm()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddBanner","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const addBanners = (token,addBanner) => {\r\n    return axios.post(`${API}admin/banner`, addBanner, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateBanner = (token,id,editBanner) => {\r\n    return axios.put(`${API}admin/banner/${id}`, editBanner, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const findAllBanner = () => {\r\n    return axios.get(`${API}admin/banner` ,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}\r\n\r\nexport const deleteBanner = (token,id) => {\r\n    return axios.delete(`${API}admin/banner/delete/${id}`,{\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n                'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Card, Form, Modal, Table, Row, Col } from \"react-bootstrap\";\r\nimport AddBanner from \"./Child/Add Banner\";\r\nimport { deleteBanner, findAllBanner, updateBanner } from \"../../Api/utility\";\r\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\r\nimport { userInfo } from '../../utils/auth';\r\nimport { API } from '../../utils/config';\r\nimport { notify } from '../../utils/notification'\r\n\r\nconst CarouselComp = () => {\r\n\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [banner, setBanner] = useState([])\r\n    const [remove, setRemove] = useState(false);\r\n    const [edit, setEdit] = useState(false);\r\n    const [ids, setId] = useState('')\r\n    const [editId, setEditIds] = useState('')\r\n    const { token } = userInfo();\r\n\r\n    useEffect(() => {\r\n        findAllBanner()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setBanner(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [banner]);\r\n\r\n\r\n    const [editBanner, setEditBanner] = useState({\r\n        firstTitle: '',\r\n        secondTitle: '',\r\n        link: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false\r\n    })\r\n    const { success, alert } = values;\r\n    const { firstTitle, secondTitle, link, formData } = editBanner\r\n\r\n    useEffect(() => {\r\n        setEditBanner({\r\n            ...editBanner,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleShowDelete = (id) => () => {\r\n        setRemove(true)\r\n        setId(id)\r\n    };\r\n\r\n    const handleCloseDelete = () => {\r\n        setRemove(false)\r\n    }\r\n\r\n    const handleCloseEdit = () => {\r\n        setEdit(false)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        deleteBanner(token, ids)\r\n            .then(response => notify('Banner Delete Successfully'))\r\n            .catch(err => notify('Something Failed! Please try again'))\r\n    }\r\n\r\n    const handleShowEdit = (id) => () => {\r\n        setEdit(true)\r\n        setEditIds(id)\r\n    }\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setEditBanner({\r\n            ...editBanner,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmitEdit = (e) => {\r\n        e.preventDefault()\r\n        setEditBanner({\r\n            ...editBanner\r\n        })\r\n        const { token } = userInfo();\r\n        updateBanner(token,editId, formData)\r\n            .then(response => {\r\n                setEditBanner({\r\n                    firstTitle: '',\r\n                    secondTitle: '',\r\n                    link: '',\r\n                    success: true,\r\n                })\r\n                notify(\"Banner Updated successfully!\")\r\n                e.target.reset();\r\n                setEditBanner({\r\n                    formData: new FormData()\r\n                })\r\n                handleCloseEdit()\r\n            })\r\n            .catch(err => {\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(errMsg)\r\n                e.target.reset();\r\n                setEditBanner({\r\n                    formData: new FormData()\r\n                })\r\n                e.target.reset();\r\n                setEditBanner({\r\n                    formData: new FormData()\r\n                })\r\n                handleCloseEdit()\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <AddBanner />\r\n                </Card.Body>\r\n            </Card>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th style={{ width: \"10%\" }}>Image</th>\r\n                        <th>First Title</th>\r\n                        <th>Second Title</th>\r\n                        <th>Link</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {banner && banner.filter(filteredData => filteredData.disabled === false).map((data, index) => (\r\n                        <Fragment key={index}>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td><img src={`${API}${data.image}`} alt=\"banner\" /></td>\r\n                                <td>{data.firstTitle}</td>\r\n                                <td>{data.secondTitle}</td>\r\n                                <td>{data.link}</td>\r\n                                <td><Button variant=\"light\">\r\n                                    <AiOutlineEdit onClick={handleShowEdit(data._id)} size={24} />\r\n                                </Button></td>\r\n                                <td><Button><AiOutlineDelete onClick={handleShowDelete(data._id)}\r\n                                    size={24} /></Button>\r\n                                </td>\r\n                            </tr>\r\n                        </Fragment>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n            <Modal show={remove} onHide={handleCloseDelete}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Delete Item</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => handleSubmit(e)}>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <Form.Label>Do you want to delete this item? </Form.Label>\r\n                            <Button onClick={handleCloseDelete} type=\"submit\" variant=\"primary\">\r\n                                Yes Delete\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={edit} onHide={handleCloseEdit}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title style={{marginLeft:\"30px\"}}>Edit Banner</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <Form.Label>\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                            <Form.Label>Upload a file</Form.Label>\r\n                                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                                            <Form.Label>First Title</Form.Label>\r\n                                            <Form.Control placeholder=\"firstTitle\" type=\"firstTitle\" name=\"firstTitle\" value={firstTitle} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                                            <Form.Label>Second Title</Form.Label>\r\n                                            <Form.Control placeholder=\"Second Title\" type=\"secondTitle\" name=\"secondTitle\" value={secondTitle} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                                            <Form.Label>Link</Form.Label>\r\n                                            <Form.Control placeholder=\"Link\" type=\"link\" name=\"link\" value={link} onChange={handleChange} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Form.Label>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Form onSubmit={e => handleSubmitEdit(e)}>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Update Banner\r\n                    </Button>\r\n                    </Form>\r\n                    <Button className=\"ml-5\" onClick={handleCloseEdit} type=\"submit\" variant=\"primary\">\r\n                        Close\r\n                    </Button>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CarouselComp","import axios from \"axios\";\r\nimport { API } from '../utils/config';\r\n\r\nexport const addPaymentMethod = (token, addBanner) => {\r\n    return axios.post(`${API}paymentMethod`, addBanner, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const findAllPaymentMethod = () => {\r\n    return axios.get(`${API}paymentMethod`  ,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}\r\n\r\nexport const deletePaymentMethod = (token, id) => {\r\n    return axios.delete(`${API}paymentMethod/delete/${id}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const editPaymentMethod = (token, id, formData) => {\r\n    return axios.put(`${API}paymentMethod/${id}`, formData, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport { userInfo } from \"../../../utils/auth\";\r\nimport { addPaymentMethod } from \"../../../Api/paymentMethod\";\r\nimport { notify } from '../../../utils/notification'\r\n\r\nconst PaymentMethod = () => {\r\n    const [addMethod, setAddMethod] = useState({\r\n        name: '',\r\n        number: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled:false\r\n    })\r\n\r\n    const { success, alert,disabled } = values;\r\n    const { name, number, formData } = addMethod\r\n\r\n\r\n    useEffect(() => {\r\n        setAddMethod({\r\n            ...addMethod,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAddMethod({\r\n            ...addMethod,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({\r\n            ...values,\r\n            disabled:true\r\n        })\r\n        setAddMethod({\r\n            ...addMethod\r\n        })\r\n        const { token } = userInfo();\r\n        addPaymentMethod(token, formData)\r\n            .then(response => {\r\n                setAddMethod({\r\n                    name: '',\r\n                    number: '',\r\n                    success: true,\r\n                })\r\n                notify(\"Payment Method Added Successfully!\")\r\n                setValues({\r\n                    ...values,\r\n                    disabled:false\r\n                })\r\n                e.target.reset();\r\n                setAddMethod({\r\n                    formData: new FormData()\r\n                })\r\n                \r\n            })\r\n            .catch(err => {\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(`${errMsg}`)\r\n                setValues({\r\n                    ...values,\r\n                    disabled:false\r\n                })\r\n                e.target.reset();\r\n                setAddMethod({\r\n                    formData: new FormData()\r\n                })\r\n            })\r\n    }\r\n\r\n   \r\n    const addForm = () => (\r\n        <>\r\n            <div>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Header>Add Payment Method</Card.Header>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Payment Method Name</Form.Label>\r\n                                        <Form.Control type=\"name\" placeholder=\"Payment Method Name\" name='name' value={name} onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Number</Form.Label>\r\n                                        <Form.Control type=\"name\" placeholder=\"Number\" name='number' value={number} onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                        <Form.Label>Default file input example</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\" disabled={disabled}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {addForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentMethod;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport {Button, Form, Modal, Table, Row, Col, Card} from \"react-bootstrap\";\r\nimport { userInfo } from \"../../../utils/auth\";\r\nimport { deletePaymentMethod, findAllPaymentMethod, editPaymentMethod } from \"../../../Api/paymentMethod\";\r\nimport { API } from \"../../../utils/config\";\r\nimport { AiOutlineDelete, AiOutlineEdit } from \"react-icons/ai\";\r\nimport { notify } from \"../../../utils/notification\";\r\n\r\nconst PaymentMethod = () => {\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [banner, setBanner] = useState([])\r\n    const [remove, setRemove] = useState(false);\r\n    const [ids, setId] = useState('')\r\n    const [edit, setEdit] = useState(false);\r\n    const [editId, setEditIds] = useState('')\r\n    const { token } = userInfo();\r\n\r\n    const [editMethod, setEditMethod] = useState({\r\n        name: '',\r\n        number: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false,\r\n    })\r\n    const { success, alert, disabled } = values;\r\n    const { name, number, formData } = editMethod\r\n\r\n    useEffect(() => {\r\n        setEditMethod({\r\n            ...editMethod,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        findAllPaymentMethod()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setBanner(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [banner]);\r\n\r\n\r\n    const handleShowDelete = (id) => () => {\r\n        setRemove(true)\r\n        setId(id)\r\n    };\r\n\r\n\r\n    const handleCloseDelete = () => {\r\n        setRemove(false)\r\n    }\r\n\r\n    const handleCloseEdit = () => {\r\n        setEdit(false)\r\n    }\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setEditMethod({\r\n            ...editMethod,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        deletePaymentMethod(token, ids)\r\n            .then(response => notify('Payment method Deleted Successfully'))\r\n            .catch(err => notify('Something Failed! Please try again'))\r\n    }\r\n\r\n\r\n    const handleShowEdit = (id) => () => {\r\n        setEdit(true)\r\n        setEditIds(id)\r\n    }\r\n\r\n\r\n    const handleSubmitEdit = (e) => {\r\n        e.preventDefault();\r\n        setEditMethod({\r\n            ...editMethod\r\n        })\r\n        setValues({\r\n            disabled: true\r\n        })\r\n        const { token } = userInfo();\r\n        editPaymentMethod(token, editId, formData)\r\n            .then(response => {\r\n                setEditMethod({\r\n                    name: '',\r\n                    number: '',\r\n                    success: true,\r\n                })\r\n                notify(\"Payment Method Updated!\")\r\n                setValues({\r\n                    disabled: false\r\n                })\r\n                setEditMethod({\r\n                    formData: new FormData()\r\n                })\r\n                handleCloseEdit()\r\n            })\r\n            .catch(err => {\r\n                console.log(\"err\", err)\r\n                notify(\"Something wrong!\")\r\n                setValues({\r\n                    disabled: false\r\n                })\r\n                setEditMethod({\r\n                    formData: new FormData()\r\n                })\r\n                handleCloseEdit()\r\n            })\r\n    }\r\n\r\n\r\n    const addForm = () => (\r\n        <>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th style={{ width: \"10%\" }}>Image</th>\r\n                        <th>Payment Method Name</th>\r\n                        <th>Number</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {banner && banner.filter(filteredData => filteredData.disabled === false).map((data, index) => (\r\n                        <Fragment key={index}>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td><img src={`${API}${data.image}`} alt=\"banner\" /></td>\r\n                                <td>{data.name}</td>\r\n                                <td>{data.number}</td>\r\n                                <td><Button variant=\"light\">\r\n                                    <AiOutlineEdit onClick={handleShowEdit(data._id)} size={24} />\r\n                                </Button></td>\r\n                                <td><Button><AiOutlineDelete onClick={handleShowDelete(data._id)}\r\n                                    size={24} /></Button>\r\n                                </td>\r\n                            </tr>\r\n                        </Fragment>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </Table>\r\n            <Modal show={remove} onHide={handleCloseDelete}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Delete Item</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form onSubmit={e => handleSubmit(e)}>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <Form.Label>Do you want to delete this item? </Form.Label>\r\n                            <Button type=\"submit\" variant=\"primary\" onClick={handleCloseDelete}>\r\n                                Yes Delete\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Modal show={edit} onHide={handleCloseEdit}>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Edit Payment Method</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className=\"d-flex justify-content-around\">\r\n                                <Form.Label>\r\n                                    <Form>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Payment Method Name</Form.Label>\r\n                                                    <Form.Control type=\"name\" placeholder=\"Payment Method Name\" name='name' value={name} onChange={handleChange} />\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                                    <Form.Label>Number</Form.Label>\r\n                                                    <Form.Control type=\"name\" placeholder=\"Number\" name='number' value={number} onChange={handleChange} />\r\n                                                </Form.Group>\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                                    <Form.Label>Default file input example</Form.Label>\r\n                                                    <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                                                </Form.Group>\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n\r\n                                    </Form>\r\n                                </Form.Label>\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                <Modal.Footer>\r\n                    <Form onSubmit={e => handleSubmitEdit(e)}>\r\n                        <Button type=\"submit\" variant=\"primary\"  disabled={disabled}>\r\n                            Update Payment Method\r\n                        </Button>\r\n                    </Form>\r\n                    <Button className=\"ml-5\" onClick={handleCloseEdit} type=\"submit\" variant=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {addForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentMethod;","import axios from \"axios\";\r\nimport {API} from \"../utils/config\";\r\n\r\nexport const addPopUpBanner = (token, addProduct) => {\r\n\r\n    // const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.post(`${API}popUpBanner`, addProduct, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n\r\nexport const findPopUpBanner = () => {\r\n    return axios.get(`${API}popUpBanner/61deb99e0255c919c3eab429` ,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}\r\n\r\nexport const updatePopBanner = (updateProductss) => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.put(`${API}popUpBanner/61deb99e0255c919c3eab429`, updateProductss, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, ButtonGroup, Card, Col, Form, Row, ToggleButton } from \"react-bootstrap\";\r\nimport { userInfo } from \"../../../utils/auth\";\r\nimport { notify } from '../../../utils/notification'\r\nimport { findPopUpBanner, updatePopBanner } from \"../../../Api/poupbanner\";\r\nimport { API } from \"../../../utils/config\";\r\nimport moment from 'moment-timezone';\r\nmoment.tz.setDefault('Asia/Dhaka');\r\n\r\nconst radios = [\r\n    { name: 'InActive', value: 'inActive' },\r\n    { name: 'Active', value: 'active' },\r\n];\r\nconst PaymentMethod = () => {\r\n    const [addMethod, setAddMethod] = useState({\r\n        text: '',\r\n        link: '',\r\n        formData: '',\r\n    });\r\n\r\n    const [getImage, SetGetImage] = useState({\r\n        image: ''\r\n    })\r\n\r\n    let id = getImage._id\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false,\r\n    })\r\n\r\n    const { success, alert, disabled } = values;\r\n    const { formData } = addMethod\r\n\r\n    useEffect(() => {\r\n        setAddMethod({\r\n            ...addMethod,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        findPopUpBanner()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                SetGetImage(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [getImage]);\r\n\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAddMethod({\r\n            ...addMethod,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({\r\n            ...values,\r\n            disabled: true\r\n        })\r\n        setAddMethod({\r\n            ...addMethod\r\n        })\r\n        const { token } = userInfo();\r\n        updatePopBanner(formData)\r\n            .then(response => {\r\n                setValues({\r\n                    ...values,\r\n                    disabled: false\r\n                })\r\n                setAddMethod({\r\n                    success: true,\r\n                })\r\n                notify(\"Popup Banner changed successfully!\")\r\n                \r\n                setAddMethod({\r\n                    formData: new FormData()\r\n                })\r\n                e.target.reset()\r\n            })\r\n            .catch(err => {\r\n                setValues({\r\n                    ...values,\r\n                    disabled: false\r\n                })\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(errMsg)\r\n                e.target.reset();\r\n                setAddMethod({\r\n                    formData: new FormData()\r\n                })\r\n            })\r\n    }\r\n\r\n    \r\n\r\n    function changeActiveStatus(value) {\r\n        const updateData = {\r\n            activeStatus: value\r\n        }\r\n        updatePopBanner(updateData).then(res => console.log(res))\r\n    }\r\n\r\n    const addForm = () => (\r\n        <>\r\n            <div>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Header>Add Popup banner</Card.Header>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                        <Form.Label>Upload popup banner</Form.Label>\r\n                                        <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                                        <Form.Label>Add Text</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"text\" onChange={handleChange} placeholder=\"Add popup banner text\" />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                                        <Form.Label>Add Link</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"link\" onChange={handleChange} placeholder=\"Add a link\" />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div><ButtonGroup>\r\n                                        {radios.map((radio, idx) => (\r\n                                            <ToggleButton\r\n                                                key={idx}\r\n                                                id={`radio-${idx}`}\r\n                                                type=\"radio\"\r\n                                                variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n                                                name=\"radio\"\r\n                                                value={radio.value}\r\n                                                checked={getImage.activeStatus === radio.value}\r\n                                                onChange={(e) => changeActiveStatus(e.currentTarget.value)}\r\n                                            >\r\n                                                {radio.name}\r\n                                            </ToggleButton>\r\n                                        ))}\r\n                                    </ButtonGroup></div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <img width=\"20%\" src={`${API}${getImage.image}`} alt=\"banner\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Button variant=\"primary\" type=\"submit\" disabled={disabled}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {addForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentMethod;","import React, {useEffect, useState} from \"react\";\r\nimport {Col, Card, Form, Row} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getOneProduct, updateProductss, addItems, itemDelete, updateItem, updateImage} from \"../../Api/products\";\r\nimport {notify} from '../../utils/notification'\r\nimport {Alert} from \"antd\";\r\nimport {\r\n    Box,\r\n    Chip,\r\n    TextField,\r\n    Typography,\r\n    Button,\r\n    Grid, Input, FormControlLabel,\r\n} from \"@mui/material\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nlet formData;\r\nimport Switch from '@mui/material/Switch';\r\nimport {styled} from '@mui/material/styles';\r\nimport Badge from \"@mui/material/Badge\";\r\n\r\n\r\nconst Android12Switch = styled(Switch)(({theme}) => ({\r\n    padding: 8,\r\n    marginRight: 20,\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 22 / 2,\r\n        '&:before, &:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            top: '50%',\r\n            transform: 'translateY(-50%)',\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        '&:before': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n            left: 12,\r\n        },\r\n        '&:after': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n            right: 12,\r\n        },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: 'none',\r\n        width: 16,\r\n        height: 16,\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nconst category = [\r\n    {\r\n        _id: \"0\",\r\n        categoryNames: \"\"\r\n    },\r\n    {\r\n        _id: \"1\",\r\n        categoryNames: \"(InGame)\"\r\n    },\r\n    {\r\n        _id: \"2\",\r\n        categoryNames: \"(IDCode)\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        categoryNames: \"(Offer)\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        categoryNames: \"(Subsc)\"\r\n    }\r\n\r\n]\r\n\r\nconst ProductUpdate = ({id}) => {\r\n\r\n    let [inputLists, setInputLists] = useState([{}]);\r\n    const [inputList, setInputList] = useState([{\r\n        option: \"\",\r\n        price: \"\"\r\n    }]);\r\n    const {option, price} = inputList;\r\n\r\n    const [updateProduct, setUpdateProduct] = useState({\r\n        gameName: '',\r\n        categoryName: '',\r\n        backUpLink: '',\r\n        image: '',\r\n        details: [],\r\n        topUp: [],\r\n        //formData: '',\r\n    });\r\n    const [stocks, setStocks] = useState(true)\r\n    //let { formData } = updateProduct;\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false\r\n    })\r\n\r\n    const {success, alert, disabled} = values;\r\n\r\n    useEffect(() => {\r\n        formData = new FormData()\r\n        // setUpdateProduct({\r\n        //     ...updateProduct,\r\n        //     formData: new FormData()\r\n        // })\r\n    }, []);\r\n\r\n\r\n    // const handleDetailChange = (e, index) => {\r\n    //     const {name, value} = e.target\r\n    //     const list = [...detailsList];\r\n    //     list[index][name] = value;\r\n    //     setDetailsList(list)\r\n    //     setUpdateProduct({\r\n    //         ...updateProduct,\r\n    //         details: detailsList\r\n    //     })\r\n    //     formData.set(\"details\", JSON.stringify(details))\r\n    //\r\n    // }\r\n    // const handleInputChange = (e, index) => {\r\n    //     const {name, value} = e.target;\r\n    //     const list = [...inputList];\r\n    //     list[index][name] = value;\r\n    //     setInputList(list);\r\n    //     setUpdateProduct({\r\n    //         ...updateProduct,\r\n    //         topUp: inputList\r\n    //     })\r\n    //\r\n    //     let prePackage = [];\r\n    //     for (let i = 0; i < inputLists.length; i++) {\r\n    //         prePackage.push({\"option\": inputLists[i].option, \"price\": inputLists[i].price})\r\n    //     }\r\n    //     Array.prototype.push.apply(topUp, prePackage);\r\n    //     formData.set(\"topUp\", JSON.stringify(topUp))\r\n    // };\r\n    const [image, setImage] = useState({})\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files.length) {\r\n            setImage({\r\n                preview: URL.createObjectURL(e.target.files[0]),\r\n                raw: e.target.files[0],\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(async () => {\r\n        await getOneProduct(id)\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setUpdateProduct(allData)\r\n                setInputLists(allData.topUp)\r\n                setProductInfo('gameName', `${allData.gameName}`)\r\n                setProductInfo('categoryName', `${allData.categoryName}`)\r\n                setProductInfo('backUpLink', `${allData.backUpLink}`)\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n    const handleDelete = (index) => async () => {\r\n        await itemDelete(id, index).then(r => {\r\n            console.log(r.data)\r\n            setInputLists(r.data)\r\n            notify(\"deleted successfully\")\r\n        })\r\n    };\r\n\r\n    const [show, setShow] = useState(false)\r\n    //\r\n    const [item, setItem] = useState({})\r\n\r\n\r\n    const {\r\n        register: getItem,\r\n        handleSubmit: submitItem,\r\n        setValue: setItemValue,\r\n        reset: resetItem,\r\n        formState: {errors: errorItem}\r\n    } = useForm();\r\n    const {\r\n        register: getNewItem,\r\n        handleSubmit: submitNewItem,\r\n        setValue: setNewItemValue,\r\n        reset: resetNewItem,\r\n        formState: {errors: errorNewItem}\r\n    } = useForm();\r\n    const {\r\n        register: productInfo,\r\n        handleSubmit: submitProductInfo,\r\n        setValue: setProductInfo,\r\n        reset: resetProductInfo,\r\n        formState: {errors: errorProductInfo}\r\n    } = useForm();\r\n\r\n    function handleClick(option, price, stock, index) {\r\n        setItem({\r\n            id: index,\r\n            option: option,\r\n            price: price,\r\n            stock: stock\r\n        })\r\n        setShow(true)\r\n        setStocks(stock)\r\n        setItemValue(\"option\", `${option}`)\r\n        setItemValue(\"price\", `${price}`)\r\n        setItemValue(\"stock\", `${stock}`)\r\n    }\r\n\r\n    const stockFilter = (data) => {\r\n        if (data) {\r\n            return (<>In Stock</>)\r\n        } else {\r\n            return (<>Stock Out</>)\r\n        }\r\n    }\r\n\r\n    async function submitItemData(data) {\r\n        const submitData = {\r\n            topUpId: item.id,\r\n            option: data.option,\r\n            price: data.price,\r\n            stock : data.stock\r\n        }\r\n\r\n        console.log(submitData)\r\n        await updateItem(id, submitData).then(r => {\r\n\r\n            setInputLists(r.data),\r\n                notify(\"updated successfully\")\r\n        })\r\n        resetItem({option: \"\"})\r\n        resetItem({price: \"\"})\r\n        resetItem({stock: \"\"})\r\n        setShow(false)\r\n    }\r\n\r\n    const showSuccess = () => {\r\n        if (success) return (<>\r\n            <Redirect to='/admin/product'/>\r\n            <Alert message=\"Product updated\" type=\"success\"/>\r\n        </>)\r\n    }\r\n\r\n    function addItem(data) {\r\n        const addData = {\r\n            id: item._id,\r\n            option: data.option,\r\n            price: data.price,\r\n            stock: data.stock\r\n        }\r\n        addItems(id, addData).then(r => {\r\n            setInputLists(r.data),\r\n                notify(\"added successfully\")\r\n        })\r\n\r\n    }\r\n\r\n    async function submitInfo(data) {\r\n        await updateProductss(id, data).then(r => {\r\n            notify(\"updated successfully\")\r\n        })\r\n    }\r\n\r\n    const photoUpdate = () => {\r\n        formData.set(\"image\", image.raw)\r\n        updateImage(id, formData)\r\n            .then(r => {\r\n                notify(\"Photo updated!\")\r\n            })\r\n    }\r\n\r\n    function updateForm() {\r\n        return (\r\n            <>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Update & Delete Product Item</Card.Title>\r\n                        <Form.Label>Change Image</Form.Label>\r\n\r\n                        <form onSubmit={submitProductInfo(submitInfo)}>\r\n                            <div>\r\n                                <label htmlFor=\"contained-button-file\">\r\n                                    <Input accept=\"image/*\" id=\"contained-button-file\" type=\"file\"\r\n                                           onChange={e => handleChange(e)}/>\r\n                                    <Button onClick={photoUpdate} style={{backgroundColor: \"#1565C0\", color: \"white\"}}>\r\n                                        Save Photo\r\n                                    </Button>\r\n                                </label>\r\n                            </div>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} md={6} xl={6}>\r\n                                    <Form.Label>Select Game</Form.Label>\r\n                                    <TextField id=\"outlined-basic\" size=\"small\"\r\n                                               style={{width: '100%'}}\r\n                                               variant=\"outlined\"\r\n                                               {...productInfo(\"gameName\")} />\r\n                                </Grid>\r\n                                <Grid item xs={12} md={6} xl={6}>\r\n                                    <Form.Label>Select Category</Form.Label>\r\n                                    <Form.Control as=\"select\" aria-label=\"Default select example\"\r\n                                                  name=\"categoryName\"\r\n                                                  {...productInfo(\"categoryName\")}>\r\n                                        <option>Select an account type</option>\r\n                                        {\r\n                                            category.map((data, index) => {\r\n                                                    return (\r\n                                                        <option key={index}>{data.categoryNames}</option>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Form.Label>Backup Link</Form.Label>\r\n                            <TextField id=\"outlined-basic\" size=\"small\"\r\n                                       style={{width: '100%', marginBottom: 10}}\r\n                                       variant=\"outlined\"\r\n                                       {...productInfo(\"backUpLink\")} />\r\n                            <Button type='submit' variant='outline'\r\n                                    style={{backgroundColor: \"#1565C0\", color: \"white\"}}> Update </Button>\r\n                        </form>\r\n\r\n                        <hr/>\r\n                        <Form.Label>\r\n                            Update & Delete Item\r\n                        </Form.Label>\r\n                        <div style={{display: \"flex\", flexWrap: 'wrap'}}>\r\n\r\n                            {inputLists?.map((x, index) => {\r\n                                return (\r\n                                    <Badge style={{marginRight: 30, marginTop: 15}} color=\"secondary\"\r\n                                           badgeContent={stockFilter(x.stock)}>\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            style={{marginTop: 10}}\r\n                                            label={`${x.option}  (${x.price} Taka)`}\r\n                                            onClick={e => handleClick(x.option, x.price, x.stock, x._id)}\r\n                                            onDelete={handleDelete(x._id)}\r\n                                            // avatar={}\r\n\r\n                                        />\r\n                                    </Badge>\r\n                                    // <Box>\r\n                                    //\r\n                                    //     {/*<FormControlLabel*/}\r\n                                    //     {/*    sx={{mt:2}}*/}\r\n                                    //     {/*    checked={x.stock}*/}\r\n                                    //     {/*    onClick={e=> setStocks(!x.stock) }*/}\r\n                                    //     {/*    name={x.stock}*/}\r\n                                    //     {/*    control={<Android12Switch defaultChecked />}*/}\r\n                                    //     {/*    label=''/>*/}\r\n                                    // </Box>\r\n\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div style={{marginTop: 10, marginBottom: 10}}>\r\n                            {\r\n                                show && (\r\n                                    <form onSubmit={submitItem(submitItemData)}>\r\n                                        <Typography>\r\n                                            Update Product\r\n                                        </Typography>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item>\r\n                                                <TextField size=\"small\"\r\n                                                           style={{width: '100%', marginTop: 10}} label=\"Option\"\r\n\r\n                                                           variant=\"outlined\" {...getItem(\"option\")} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <TextField size=\"small\"\r\n\r\n                                                           style={{width: '100%', marginTop: 10}} label=\"Price\"\r\n                                                           variant=\"outlined\" {...getItem(\"price\")}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                                    <FormControlLabel\r\n                                                        //onClick={e=>setChecks(!check)}\r\n                                                        //onChange={e => handleInputChange(e, i)}\r\n                                                        name=\"stock\"\r\n                                                        {...getItem(\"stock\")}\r\n                                                        checked={stocks}\r\n                                                        onClick={e => setStocks(!stocks)}\r\n                                                        control={<Android12Switch defaultChecked/>}\r\n                                                        label=\"\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Box style={{\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: 'center',\r\n                                                    marginTop: 10\r\n                                                }}>\r\n                                                    <Button variant=\"outlined\" style={{marginRight: 5}}\r\n                                                            type='submit'>\r\n                                                        update\r\n                                                    </Button>\r\n                                                    <Button variant=\"outlined\" onClick={e => setShow(false)}>\r\n                                                        cancel\r\n                                                    </Button>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n\r\n                                    </form>\r\n                                )\r\n                            }\r\n\r\n                        </div>\r\n                        <form onSubmit={submitNewItem(addItem)}>\r\n                            <hr/>\r\n                            <Form.Label>\r\n                                Add new Item\r\n                            </Form.Label>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item> <TextField size=\"small\"\r\n                                                       style={{width: '100%', marginTop: 10}} label=\"Option\"\r\n                                                       variant=\"outlined\" {...getNewItem(\"option\")} /></Grid>\r\n                                <Grid item> <TextField size=\"small\"\r\n                                                       style={{width: '100%', marginTop: 10}} label=\"Price\"\r\n                                                       variant=\"outlined\" {...getNewItem(\"price\")} /></Grid>\r\n                                <Grid item>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                        <FormControlLabel\r\n                                            //onClick={e=>setChecks(!check)}\r\n                                            //onChange={e => handleInputChange(e, i)}\r\n                                            name=\"stock\"\r\n                                            {...getNewItem(\"stock\")}\r\n                                            checked={stocks}\r\n                                            onClick={e => setStocks(!stocks)}\r\n                                            control={<Android12Switch defaultChecked/>}\r\n                                            label=\"\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Grid>\r\n                                <Grid item><Button type='submit' style={{width: '100%', marginTop: 10}}\r\n                                                   variant=\"outlined\">Add Item</Button></Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {updateForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductUpdate;","import React, { useEffect, useState } from \"react\";\r\nimport { adminProfile } from \"../Api/userAdmin\";\r\nimport { getAllProducts, filterAdminProduct } from \"../Api/products\";\r\nimport { updateUserActiveStatus, addProduct, deleteProduct } from \"../Api/user\";\r\nimport { Button, Select, Radio, Card } from \"antd\";\r\nimport { getOrdersByAdminId, updateOrderStatus, markAllComplete } from '../Api/order'\r\nimport { userInfo } from '../utils/auth';\r\nimport { ButtonGroup, Col, Form, Row, ToggleButton, Table, Alert, Modal } from \"react-bootstrap\";\r\nimport { createNotifications } from '../Api/notification'\r\nimport { notify } from '../utils/notification'\r\nimport { AiOutlineDelete, } from \"react-icons/ai\";\r\nimport { addSpentAmount, removeSpentAmount } from '../Api/wallet';\r\nimport Tablessss from './inGameOrderTable';\r\nimport Tables from './idCodeOrderTable';\r\nimport Tabless from './cancelInGameOrderTable';\r\nimport Tablesss from './cancelIdcodeOrderTable';\r\nimport Tablesssss from './offerOrderTable';\r\nimport Tablessssss from './subscOrderTable';\r\nimport Tablesssssss from './cancelOfferOrderTable';\r\nimport Tablessssssss from './cancelSubscOrderTable';\r\nimport Pagination from \"./Pagination\";\r\nlet orderId, orderUser, game_name, category_name, game_option, game_price, message, paymentStatus;\r\nlet search = false;\r\nlet inGameTable = false, idCodeTable = false, offerTable = false, subscTable = false;\r\nlet totalIngame, totalIngameCancel, totalIdcode, totalIdcodeCancel, totalOffer, totalOfferCancel, totalSubsc, totalSubscCancel, filterFunctionActive = false, srchTerm;\r\nlet buttonAllActive = false, mark = false;\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction TabPanels(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanels.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yPropss(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst OrderHandle = () => {\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChanges = (event, newValue) => {\r\n        setValue(newValue);\r\n        localStorage.setItem(\"orderArray\", [])\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"orderArray\", [])\r\n    }, [])\r\n\r\n    const { token, id } = userInfo();\r\n    const [product, setProduct] = useState(false);\r\n    const [products, setProducts] = useState([]);\r\n    const [filteredProduct, setFilteredProduct] = useState([])\r\n    const [adminData, setAdminData] = useState([])\r\n    const [idCodeOrders, setIdCodeOrders] = useState([])\r\n    const [idCodeOrdersSearch, setIdCodeOrdersSearch] = useState([])\r\n    const [inGameOrders, setInGameOrders] = useState([])\r\n    const [inGameOrdersSearch, setInGameOrdersSearch] = useState([])\r\n    const [offerOrders, setOfferOrders] = useState([])\r\n    const [offerOrdersSearch, setOfferOrdersSearch] = useState([])\r\n    const [subscOrders, setSubscOrders] = useState([])\r\n    const [subscOrdersSearch, setSubscOrdersSearch] = useState([])\r\n    const [cancelledOrdersInGame, setCancelledOrdersInGame] = useState([])\r\n    const [cancelledOrdersIdCode, setCancelledOrdersIdCode] = useState([])\r\n    const [cancelledOrdersOffer, setCancelledOrdersOffer] = useState([])\r\n    const [cancelledOrdersSubsc, setCancelledOrdersSubsc] = useState([])\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    const rowSelectForIngameTable = (e) => {\r\n        setPostsPerPage(e.target.value)\r\n    }\r\n    const rowSelectForIdcodeTable = (e) => {\r\n        setPostsPerPages(e.target.value)\r\n    }\r\n    const rowSelectForOfferTable = (e) => {\r\n        setPostsPerPagessss(e.target.value)\r\n    }\r\n    const rowSelectForSubscTable = (e) => {\r\n        setPostsPerPagesssss(e.target.value)\r\n    }\r\n    const rowSelectForCancelIngameTable = (e) => {\r\n        setPostsPerPagess(e.target.value)\r\n    }\r\n    const rowSelectForCancelIdcodeTable = (e) => {\r\n        setPostsPerPagesss(e.target.value)\r\n    }\r\n    const rowSelectForCancelOfferTable = (e) => {\r\n        setPostsPerPagessssss(e.target.value)\r\n    }\r\n    const rowSelectForCancelSubscTable = (e) => {\r\n        setPostsPerPagesssssss(e.target.value)\r\n    }\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(10);\r\n    const [currentPages, setCurrentPages] = useState(1);\r\n    const [postsPerPages, setPostsPerPages] = useState(10);\r\n    const [currentPagess, setCurrentPagess] = useState(1);\r\n    const [postsPerPagess, setPostsPerPagess] = useState(10);\r\n    const [currentPagesss, setCurrentPagesss] = useState(1);\r\n    const [postsPerPagesss, setPostsPerPagesss] = useState(10);\r\n    const [currentPagessss, setCurrentPagessss] = useState(1);\r\n    const [postsPerPagessss, setPostsPerPagessss] = useState(10);\r\n    const [currentPagesssss, setCurrentPagesssss] = useState(1);\r\n    const [postsPerPagesssss, setPostsPerPagesssss] = useState(10);\r\n    const [currentPagessssss, setCurrentPagessssss] = useState(1);\r\n    const [postsPerPagessssss, setPostsPerPagessssss] = useState(10);\r\n    const [currentPagesssssss, setCurrentPagesssssss] = useState(1);\r\n    const [postsPerPagesssssss, setPostsPerPagesssssss] = useState(10);\r\n\r\n\r\n    const radios = [\r\n        { name: 'InActive', value: 'inActive' },\r\n        { name: 'Active', value: 'active' },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"orderArray\", [])\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        adminProfile()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setAdminData(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [adminData]);\r\n\r\n\r\n    const [productsId, setProductsId] = useState([]);\r\n    const [productId, setProductId] = useState({});\r\n\r\n    useEffect(() => {\r\n        getAllProducts()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setProduct(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        filterAdminProduct(id)\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setFilteredProduct(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [filteredProduct]);\r\n\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelIdcode = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(IDCode)')\r\n                setCancelledOrdersIdCode(cancelIdcode)\r\n                totalIdcodeCancel = cancelIdcode.length\r\n                const cancelIngame = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(InGame)')\r\n                setCancelledOrdersInGame(cancelIngame)\r\n                totalIngameCancel = cancelIngame.length\r\n                const cancelOffer = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Offer)')\r\n                setCancelledOrdersOffer(cancelOffer)\r\n                totalOfferCancel = cancelOffer.length\r\n                const cancelSubsc = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Subsc)')\r\n                setCancelledOrdersSubsc(cancelSubsc)\r\n                totalSubscCancel = cancelSubsc.length\r\n            })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const igame = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(InGame)')\r\n                setInGameOrders(igame)\r\n                totalIngame = igame.length\r\n            })\r\n    }, [inGameOrders]);\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const idcode = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(IDCode)')\r\n                setIdCodeOrders(idcode)\r\n                totalIdcode = idcode.length\r\n            })\r\n    }, [idCodeOrders]);\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const offer = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Offer)')\r\n                setOfferOrders(offer)\r\n                totalOffer = offer.length\r\n            })\r\n    }, [offerOrders]);\r\n\r\n    useEffect(() => {\r\n        getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const subsc = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Subsc)')\r\n                setSubscOrders(subsc)\r\n                totalSubsc = subsc.length\r\n            })\r\n    }, [subscOrders]);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = inGameOrders.slice(indexOfFirstPost, indexOfLastPost);\r\n    const currentPostSearch = inGameOrdersSearch.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const indexOfLastPosts = currentPages * postsPerPages;\r\n    const indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n    const currentPosts = idCodeOrders.slice(indexOfFirstPosts, indexOfLastPosts);\r\n    const currentPostsSearch = idCodeOrdersSearch.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n    const indexOfLastPostss = currentPagess * postsPerPagess;\r\n    const indexOfFirstPostss = indexOfLastPostss - postsPerPagess;\r\n    const currentPostss = cancelledOrdersInGame.slice(indexOfFirstPostss, indexOfLastPostss);\r\n\r\n    const indexOfLastPostsss = currentPagesss * postsPerPagesss;\r\n    const indexOfFirstPostsss = indexOfLastPostsss - postsPerPagesss;\r\n    const currentPostsss = cancelledOrdersIdCode.slice(indexOfFirstPostsss, indexOfLastPostsss);\r\n\r\n    const indexOfLastPostssss = currentPagessss * postsPerPagessss;\r\n    const indexOfFirstPostssss = indexOfLastPostssss - postsPerPagessss;\r\n    const currentPostssss = offerOrders.slice(indexOfFirstPostssss, indexOfLastPostssss);\r\n    const currentPostssSearch = offerOrdersSearch.slice(indexOfFirstPostssss, indexOfLastPostssss);\r\n\r\n    const indexOfLastPostsssss = currentPagesssss * postsPerPagesssss;\r\n    const indexOfFirstPostsssss = indexOfLastPostsssss - postsPerPagesssss;\r\n    const currentPostsssss = subscOrders.slice(indexOfFirstPostsssss, indexOfLastPostsssss);\r\n    const currentPostsssSearch = subscOrdersSearch.slice(indexOfFirstPostsssss, indexOfLastPostsssss);\r\n\r\n    const indexOfLastPostssssss = currentPagessssss * postsPerPagessssss;\r\n    const indexOfFirstPostssssss = indexOfLastPostssssss - postsPerPagessssss;\r\n    const currentPostssssss = cancelledOrdersOffer.slice(indexOfFirstPostssssss, indexOfLastPostssssss);\r\n\r\n\r\n    const indexOfLastPostsssssss = currentPagesssssss * postsPerPagesssssss;\r\n    const indexOfFirstPostsssssss = indexOfLastPostsssssss - postsPerPagesssssss;\r\n    const currentPostsssssss = cancelledOrdersSubsc.slice(indexOfFirstPostsssssss, indexOfLastPostsssssss);\r\n\r\n\r\n    const [ingame, setIngame] = useState(0);\r\n    const [idcode, setIdcode] = useState(0);\r\n    const [offer, setOffer] = useState(0);\r\n    const [subsc, setSubsc] = useState(0);\r\n    const [ingameCancel, setIngameCancel] = useState(0);\r\n    const [idcodeCancel, setIdcodeCancel] = useState(0);\r\n    const [offerCancel, setOfferCancel] = useState(0);\r\n    const [subscCancel, setSubscCancel] = useState(0);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber)\r\n        setIngame(pageNumber)\r\n    };\r\n    const paginates = pageNumber => {\r\n        setCurrentPages(pageNumber)\r\n        setIdcode(pageNumber)\r\n    };\r\n    const paginatess = pageNumber => {\r\n        setCurrentPagess(pageNumber)\r\n        setIngameCancel(pageNumber)\r\n    };\r\n    const paginatesss = pageNumber => {\r\n        setCurrentPagesss(pageNumber)\r\n        setIdcodeCancel(pageNumber)\r\n    };\r\n    const paginatessss = pageNumber => {\r\n        setCurrentPagessss(pageNumber)\r\n        setOffer(pageNumber)\r\n    };\r\n    const paginatesssss = pageNumber => {\r\n        setCurrentPagesssss(pageNumber)\r\n        setSubsc(pageNumber)\r\n    };\r\n    const paginatessssss = pageNumber => {\r\n        setCurrentPagessssss(pageNumber)\r\n        setOfferCancel(pageNumber)\r\n    };\r\n    const paginatesssssss = pageNumber => {\r\n        setCurrentPagesssssss(pageNumber)\r\n        setSubscCancel(pageNumber)\r\n    };\r\n\r\n\r\n\r\n    const findInGameOrder = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const igame = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(InGame)')\r\n                setInGameOrders(igame)\r\n            })\r\n    }\r\n\r\n    const findIdCodeOrder = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const idcode = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(IDCode)')\r\n                setIdCodeOrders(idcode)\r\n            })\r\n    }\r\n\r\n    const findOfferOrder = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const offer = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Offer)')\r\n                setOfferOrders(offer)\r\n            })\r\n    }\r\n\r\n    const findSubscOrder = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const subsc = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Subsc)')\r\n                setSubscOrders(subsc)\r\n            })\r\n    }\r\n\r\n    const findInGameOrderCancel = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelIngame = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(InGame)')\r\n                setCancelledOrdersInGame(cancelIngame)\r\n            })\r\n    }\r\n\r\n    const findIdCodeOrderCancel = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelIdcode = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(IDCode)')\r\n                setCancelledOrdersIdCode(cancelIdcode)\r\n            })\r\n    }\r\n\r\n    const findOfferOrderCancel = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelOffer = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Offer)')\r\n                setCancelledOrdersOffer(cancelOffer)\r\n            })\r\n    }\r\n\r\n    const findSubscOrderCancel = async () => {\r\n        await getOrdersByAdminId(token, id)\r\n            .then(response => {\r\n                let data = response.data\r\n                const cancelSubsc = data && data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Subsc)')\r\n                setCancelledOrdersSubsc(cancelSubsc)\r\n            })\r\n    }\r\n\r\n\r\n    const changeActiveStatus = value => {\r\n        updateUserActiveStatus(value)\r\n            .catch(err => notify('Something wrong! please try again'))\r\n    }\r\n\r\n    const [disabledButton, setDisabledButton] = useState({\r\n        disabled: false,\r\n    });\r\n\r\n    const { disabled } = disabledButton\r\n\r\n\r\n    async function handleChange(selectedId) {\r\n        productId[\"productList\"] = selectedId\r\n    }\r\n\r\n    function handleSubmit() {\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        productsId.push(productId)\r\n        addProduct(token, productsId)\r\n            .then(res => {\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n                notify('Category added successfully')\r\n            })\r\n            .catch(err => {\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n                notify('Something Failed! Please try again')\r\n            })\r\n    }\r\n\r\n    const categotyDelete = (productId, categoryName) => {\r\n        deleteProduct(productId)\r\n            .then(res => notify('Categoty removed!'))\r\n            .catch(err => notify('Something wrong!'))\r\n\r\n        if (categoryName === '(InGame)') {\r\n            setTimeout(() => { inGameTable = false }, 5000)\r\n        }\r\n        if (categoryName === '(IDCode)') {\r\n            setTimeout(() => { idCodeTable = false }, 5000)\r\n        }\r\n        if (categoryName === '(Offer)') {\r\n            setTimeout(() => { offerTable = false }, 5000)\r\n        }\r\n        if (categoryName === '(Subsc)') {\r\n            setTimeout(() => { subscTable = false }, 5000)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const searchOrder = (e) => {\r\n        let searchTerm = e.target.value\r\n        srchTerm = searchTerm\r\n        filterFunctionActive = true;\r\n        if (searchTerm === undefined) {\r\n            search = false\r\n            filterFunctionActive = true;\r\n        }\r\n        else {\r\n            search = true\r\n        }\r\n        getOrdersByAdminId(token, id)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    filterContent(res.data, searchTerm)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const filterContent = (orders, searchTerm) => {\r\n        const result = orders.filter((item) =>\r\n            item.userId?.email?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.userId?.username?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.userId?.phonenumber?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.orderId)).toString()).includes(searchTerm) ||\r\n            item.productId?.gameName?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.productId?.categoryName?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.product?.option?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.purchaseId?.product?.price)).toString()).includes(searchTerm) ||\r\n            item.purchaseId?.accountType?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.Number?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.Password?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.backupCode?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.purchaseId?.idCode?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.userId?.userIdNo)).toString()).includes(searchTerm)\r\n        )\r\n\r\n        let value = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(InGame)')\r\n        setInGameOrdersSearch(value)\r\n\r\n        let value2 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(IDCode)')\r\n        setIdCodeOrdersSearch(value2)\r\n\r\n        let value3 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(InGame)')\r\n        setCancelledOrdersInGame(value3)\r\n\r\n        let value4 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(IDCode)')\r\n        setCancelledOrdersIdCode(value4)\r\n\r\n        let value5 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Offer)')\r\n        setOfferOrdersSearch(value5)\r\n\r\n        let value6 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Subsc)')\r\n        setSubscOrdersSearch(value6)\r\n\r\n        let value7 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Offer)')\r\n        setCancelledOrdersOffer(value7)\r\n\r\n        let value8 = result && result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Subsc)')\r\n        setCancelledOrdersSubsc(value8)\r\n    }\r\n\r\n    const makeActive = (id, user, game, category, product, price) => () => {\r\n        orderId = id;\r\n        orderUser = user;\r\n        game_name = game;\r\n        category_name = category;\r\n        game_option = product;\r\n        game_price = price;\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            reject: false,\r\n            rejectReason: null\r\n        }\r\n        updateOrderStatus(token, id, data)\r\n            .then(res => {\r\n                if (res.data === 'marked') {\r\n                    console.log(\"marked\")\r\n                }\r\n                else {\r\n                    removeSpentAmount(token, orderUser, game_price, orderId)\r\n                        .then(res => {\r\n                            createNotifications(token, orderUser, `Your order has been reactive for ${game_name}. Purchase Package: ${game_option} ${game_price} Taka`)\r\n                                .then(res => {\r\n                                    notify('Order reactive successfully!')\r\n                                    findInGameOrder()\r\n                                    findIdCodeOrder()\r\n                                    findOfferOrder()\r\n                                    findSubscOrder()\r\n                                    findInGameOrderCancel()\r\n                                    findIdCodeOrderCancel()\r\n                                    findOfferOrderCancel()\r\n                                    findSubscOrderCancel()\r\n                                    if (filterFunctionActive === true) {\r\n                                        filterOrder()\r\n                                    }\r\n                                    setDisabledButton({\r\n                                        disabled: false\r\n                                    })\r\n                                })\r\n                                .catch(res => {\r\n                                    notify('Something wrong! Please try again')\r\n                                    setDisabledButton({\r\n                                        disabled: false\r\n                                    })\r\n                                    findInGameOrder()\r\n                                    findIdCodeOrder()\r\n                                    findOfferOrder()\r\n                                    findSubscOrder()\r\n                                    findInGameOrderCancel()\r\n                                    findIdCodeOrderCancel()\r\n                                    findOfferOrderCancel()\r\n                                    findSubscOrderCancel()\r\n                                })\r\n                        })\r\n                }\r\n\r\n\r\n            })\r\n            .catch(res => {\r\n                notify('Something wrong! Please try again')\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n            })\r\n    }\r\n\r\n    const markComplete = (id, notificationId, phonenumber, gameName, categoryName, option, spent, walletId) => () => {\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            isComplete: true,\r\n            userId: notificationId,\r\n            paymentComplete: true\r\n        }\r\n        let sms = `Your order from Sizishop has been confirmed for ${gameName}. Purchase Package: ${option} ${spent} Taka`\r\n        let sendMessage = {\r\n            number: phonenumber,\r\n            message: sms.replaceAll(\" \", \"%20\")\r\n        }\r\n        updateOrderStatus(token, id, data)\r\n            .then(res => {\r\n                if (res.data === 'marked') {\r\n                    console.log(\"marked\")\r\n                }\r\n                else {\r\n                    const amount = 0\r\n                    notify('Order confirmed!')\r\n                    //sendMessageAPI(sendMessage)\r\n                    findInGameOrder()\r\n                    findIdCodeOrder()\r\n                    findOfferOrder()\r\n                    findSubscOrder()\r\n                    if (filterFunctionActive === true) {\r\n                        filterOrder()\r\n                    }\r\n                    createNotifications(token, notificationId, `Your order has been confirmed for ${gameName}. Purchase Package: ${option} ${spent} Taka. `)\r\n                        .then(res => {\r\n                            setDisabledButton({\r\n                                disabled: false\r\n                            })\r\n                        })\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n                notify('Something Failed! Please try again')\r\n            })\r\n\r\n    }\r\n\r\n    const modalOpen = (id, user, gameName, categoryName, option, price, complete) => () => {\r\n        handleShow()\r\n        orderId = id;\r\n        orderUser = user;\r\n        game_name = gameName;\r\n        category_name = categoryName;\r\n        game_option = option;\r\n        game_price = price;\r\n        paymentStatus = complete\r\n    }\r\n\r\n    const [note, setNote] = useState({\r\n        noteText: '',\r\n        disabled: false\r\n    });\r\n\r\n    const handleOnChange = e => {\r\n        setNote({\r\n            ...note,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        message = e.target.value\r\n    }\r\n\r\n    const createNote = () => {\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            reject: true,\r\n            message: `${message}`\r\n        }\r\n        updateOrderStatus(token, orderId, data)\r\n            .then(res => {\r\n                if (res.data === 'marked') {\r\n                    console.log(\"marked\")\r\n                }\r\n                else {\r\n                    addSpentAmount(token, orderUser, game_price, orderId)\r\n                        .then(res => {\r\n                            createNotifications(token, orderUser, `Your order has been cancelled for ${game_name} ${category_name}. Purchase Package: ${game_option}(${game_price}). Reason: ${message}`)\r\n                                .then(res => {\r\n                                    handleClose()\r\n                                    notify('Order cancelled')\r\n                                    findInGameOrder()\r\n                                    findIdCodeOrder()\r\n                                    findOfferOrder()\r\n                                    findSubscOrder()\r\n                                    findInGameOrderCancel()\r\n                                    findIdCodeOrderCancel()\r\n                                    findOfferOrderCancel()\r\n                                    findSubscOrderCancel()\r\n                                    if (filterFunctionActive === true) {\r\n                                        filterOrder()\r\n                                    }\r\n                                    setDisabledButton({\r\n                                        disabled: false\r\n                                    })\r\n                                })\r\n                                .catch(res => {\r\n                                    notify('Something wrong! Please try again')\r\n                                    findInGameOrder()\r\n                                    findIdCodeOrder()\r\n                                    findOfferOrder()\r\n                                    findSubscOrder()\r\n                                    findInGameOrderCancel()\r\n                                    findIdCodeOrderCancel()\r\n                                    findOfferOrderCancel()\r\n                                    findSubscOrderCancel()\r\n                                    setDisabledButton({\r\n                                        disabled: false\r\n                                    })\r\n                                })\r\n                        })\r\n                        .catch(res => {\r\n                            notify('Something wrong! Please try again')\r\n                            setDisabledButton({\r\n                                disabled: false\r\n                            })\r\n                            findInGameOrder()\r\n                            findIdCodeOrder()\r\n                            findOfferOrder()\r\n                            findSubscOrder()\r\n                            findInGameOrderCancel()\r\n                            findIdCodeOrderCancel()\r\n                            findOfferOrderCancel()\r\n                            findSubscOrderCancel()\r\n                        })\r\n                }\r\n\r\n            })\r\n            .catch(res => {\r\n                notify('Something wrong! Please try again')\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n            })\r\n    }\r\n\r\n    const filterOrder = async () => {\r\n        if (srchTerm !== undefined) {\r\n            await getOrdersByAdminId(token, id)\r\n                .then(res => {\r\n                    if (res.data) {\r\n                        filterContent(res.data, srchTerm)\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    if (localStorage.getItem('orderArray') != null) {\r\n        buttonAllActive = localStorage.getItem('orderArray').length !== 0;\r\n    }\r\n\r\n    if (!localStorage.getItem('orderArray')) {\r\n        buttonAllActive = false\r\n    }\r\n\r\n\r\n    const markAll = () => {\r\n        const myArray = localStorage.getItem('orderArray').split(\",\");\r\n        markAllComplete(token, myArray)\r\n            .then(res => {\r\n                localStorage.setItem(\"orderArray\", [])\r\n                notify(\"Order Confirmed!\")\r\n                findInGameOrder()\r\n                findIdCodeOrder()\r\n                findOfferOrder()\r\n                findSubscOrder()\r\n                findInGameOrderCancel()\r\n                findIdCodeOrderCancel()\r\n                findOfferOrderCancel()\r\n                findSubscOrderCancel()\r\n                if (filterFunctionActive === true) {\r\n                    filterOrder()\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    let selectArray = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\r\n\r\n    return (\r\n        <>\r\n            <Alert variant=\"danger\">\r\n                Please turn off active status before leaving the admin panel\r\n            </Alert>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Body style={{ margin: \"30px 10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Why do you want to cancel this order?</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"noteText\" placeholder=\"Add a short note\" onChange={handleOnChange} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn btn-primary\" disabled={disabled} onClick={createNote}>\r\n                        Send\r\n                    </button>\r\n                    <button className=\"btn btn-primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n            <Card title={`Hello ${adminData.username}`} extra={<p href=\"#\">Pick A Category</p>} >\r\n                <Select\r\n                    mode=\"multiple\"\r\n                    allowClear\r\n                    style={{ width: '100%' }}\r\n                    placeholder=\"Please select\"\r\n                    onChange={e => handleChange(e)}\r\n                >\r\n                    {filteredProduct && filteredProduct.map((productData, index) => (\r\n                        <Select.Option key={index} value={productData._id} name='productId' >\r\n                            {productData.gameName}{productData.categoryName}\r\n                        </Select.Option>\r\n                    ))}\r\n\r\n                </Select>\r\n\r\n                <div className=\"pt-4 d-flex justify-content-center\">\r\n                    <Button type=\"primary\" onClick={handleSubmit} disabled={disabled}>\r\n                        Add Selected Items\r\n                    </Button>\r\n                </div>\r\n                <div className=\"pt-4 text-center\">\r\n                    <div className='text-center'><Form.Label>Active Order Status</Form.Label></div>\r\n                    <div><ButtonGroup>\r\n                        {radios.map((radio, idx) => (\r\n                            <ToggleButton\r\n                                key={idx}\r\n                                id={`radio-${idx}`}\r\n                                type=\"radio\"\r\n                                variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n                                name=\"radio\"\r\n                                value={radio.value}\r\n                                checked={adminData.activeStatus === radio.value}\r\n                                onChange={(e) => changeActiveStatus(e.currentTarget.value)}\r\n                            >\r\n                                {radio.name}\r\n                            </ToggleButton>\r\n                        ))}\r\n                    </ButtonGroup></div>\r\n                </div>\r\n            </Card>\r\n            <br />\r\n\r\n            <Card title={`Your Category`}>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th className=\"border-0\">Your Category</th>\r\n                            <th className=\"border-0\" />\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {adminData.productList && adminData.productList.map((productId, index) => {\r\n                            if (product) {\r\n                                for (var i = 0; i < product.length; i++) {\r\n                                    if (product[i]._id === productId) {\r\n                                        if (product[i].categoryName === '(InGame)') {\r\n                                            inGameTable = true\r\n                                        }\r\n                                        if (product[i].categoryName === '(IDCode)') {\r\n                                            idCodeTable = true\r\n                                        }\r\n                                        if (product[i].categoryName === '(Offer)') {\r\n                                            offerTable = true\r\n                                        }\r\n                                        if (product[i].categoryName === '(Subsc)') {\r\n                                            subscTable = true\r\n                                        }\r\n                                        return (\r\n                                            <>\r\n                                                <tr>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>{product[i].gameName} {product[i].categoryName}</td>\r\n                                                    <td style={{ textAlign: \"center\" }}>\r\n                                                        <Button variant=\"light\" onClick={() => categotyDelete(productId, product[i].categoryName)} >\r\n                                                            <AiOutlineDelete size={20} />\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                }\r\n                            }\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </Card>\r\n            <br />\r\n\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <div style={{ float: \"right\", width: \"300px\", marginBottom: \"10px\" }}>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            name=\"serachTerm\"\r\n                            onChange={searchOrder}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Box sx={{ width: '100%' }}>\r\n                <Typography>Pending Orders</Typography>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <Tabs value={value} onChange={handleChanges} aria-label=\"basic tabs example\">\r\n                        <Tab label=\"In Game\" {...a11yProps(0)} />\r\n                        <Tab label=\"ID Code\" {...a11yProps(1)} />\r\n                        <Tab label=\"Offer\" {...a11yProps(2)} />\r\n                        <Tab label=\"Subscribe\" {...a11yProps(3)} />\r\n                    </Tabs>\r\n                </Box>\r\n                <TabPanel value={value} index={0} >\r\n                    {inGameTable && (\r\n                        <div>\r\n                            <Card title={`InGame Orders`}>\r\n\r\n                                <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Ingame orders: {totalIngame}</p>\r\n                                {buttonAllActive && (\r\n                                    <>\r\n                                        <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                    </>\r\n                                )}\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\"/>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Account Name</th>\r\n                                            <th className=\"border-0\">Account Number</th>\r\n                                            <th className=\"border-0\">Account password</th>\r\n                                            <th className=\"border-0\">Backup Number</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {search === true && (<>\r\n                                            <Tablessss inGameOrders={currentPostSearch} loading={loading} paginate={currentPage} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPage={postsPerPage} />\r\n                                        </>)}\r\n                                        {search === false && (<>\r\n                                            <Tablessss inGameOrders={currentPost} loading={loading} paginate={currentPage} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPage={postsPerPage} />\r\n                                        </>)}\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPage}\r\n                                        totalPosts={inGameOrders.length}\r\n                                        paginate={paginate}\r\n                                        Number={ingame}\r\n                                    />\r\n                                    {inGameOrders.length > 0 && (\r\n                                        <div className='ml-5' >\r\n                                            <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForIngameTable(e)}>\r\n                                                {selectArray.map(number => {\r\n                                                    return (\r\n                                                        <option value={number} >{number}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card>\r\n                            <br />\r\n                        </div>\r\n                    )}\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n\r\n                    {idCodeTable && (\r\n                        <div>\r\n                            <Card title={`IdCode Orders`}>\r\n                                <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Idcode orders: {totalIdcode}</p>\r\n                                {buttonAllActive && (\r\n                                    <>\r\n                                        <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                    </>\r\n                                )}\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\"></th>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Id Code</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {search === true && (<>\r\n                                            <Tables idCodeOrders={currentPostsSearch} loading={loading} paginates={currentPages} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPages={postsPerPages} />\r\n                                        </>)}\r\n                                        {search === false && (<>\r\n                                            <Tables idCodeOrders={currentPosts} loading={loading} paginates={currentPages} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPages={postsPerPages} />\r\n                                        </>)}\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPages}\r\n                                        totalPosts={idCodeOrders.length}\r\n                                        paginate={paginates}\r\n                                        Number={idcode}\r\n                                    />\r\n                                    {idCodeOrders.length > 0 && (\r\n                                        <div className='ml-5' >\r\n                                            <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForIdcodeTable(e)}>\r\n                                                {selectArray.map(number => {\r\n                                                    return (\r\n                                                        <option value={number} >{number}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card>\r\n                            <br />\r\n                        </div>\r\n                    )}\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                    {offerTable && (<div>\r\n                        <Card title={`Offer Orders`}>\r\n                            <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Offer orders: {totalOffer}</p>\r\n                            {buttonAllActive && (\r\n                                <>\r\n                                    <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                </>\r\n                            )}\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th className=\"border-0\">Order ID</th>\r\n                                        <th className=\"border-0\">User ID</th>\r\n                                        <th className=\"border-0\">Product Name</th>\r\n                                        <th className=\"border-0\">Purchased Package</th>\r\n                                        <th className=\"border-0\">Account Name</th>\r\n                                        <th className=\"border-0\">Account Number</th>\r\n                                        <th className=\"border-0\">Account password</th>\r\n                                        <th className=\"border-0\">Backup Number</th>\r\n                                        <th className=\"border-0\">Order Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {search === true && (<>\r\n                                        <Tablesssss offerOrders={currentPostssSearch} loading={loading} paginatessss={currentPagessss} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPagessss={postsPerPagessss} />\r\n                                    </>)}\r\n                                    {search === false && (<>\r\n                                        <Tablesssss offerOrders={currentPostssss} loading={loading} paginatessss={currentPagessss} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPagessss={postsPerPagessss} />\r\n                                    </>)}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                            <div className='d-flex'>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagessss}\r\n                                    totalPosts={offerOrders.length}\r\n                                    paginate={paginatessss}\r\n                                    Number={offer}\r\n                                />\r\n                                {offerOrders.length > 0 && (\r\n                                    <div className='ml-5' >\r\n                                        <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForOfferTable(e)}>\r\n                                            {selectArray.map(number => {\r\n                                                return (\r\n                                                    <option value={number} >{number}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Card>\r\n                        <br />\r\n                    </div>)}\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                    {subscTable && (<div>\r\n                        <Card title={`Subsc Orders`}>\r\n                            <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Subsc orders: {totalSubsc}</p>\r\n                            {buttonAllActive && (\r\n                                <>\r\n                                    <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                </>\r\n                            )}\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th className=\"border-0\">Order ID</th>\r\n                                        <th className=\"border-0\">User ID</th>\r\n                                        <th className=\"border-0\">Product Name</th>\r\n                                        <th className=\"border-0\">Purchased Package</th>\r\n                                        <th className=\"border-0\">Account Name</th>\r\n                                        <th className=\"border-0\">Account Number</th>\r\n                                        <th className=\"border-0\">Account password</th>\r\n                                        <th className=\"border-0\">Backup Number</th>\r\n                                        <th className=\"border-0\">Order Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {search === true && (<>\r\n                                        <Tablessssss subscOrders={currentPostsssSearch} loading={loading} paginatesssss={currentPagesssss} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPagesssss={postsPerPagesssss} />\r\n                                    </>)}\r\n                                    {search === false && (<>\r\n                                        <Tablessssss subscOrders={currentPostsssss} loading={loading} paginatesssss={currentPagesssss} markComplete={markComplete} modalOpen={modalOpen} disabled={disabled} postsPerPagesssss={postsPerPagesssss} />\r\n                                    </>)}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                            <div className='d-flex'>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagesssss}\r\n                                    totalPosts={subscOrders.length}\r\n                                    paginate={paginatesssss}\r\n                                    Number={subsc}\r\n                                />\r\n                                {subscOrders.length > 0 && (\r\n                                    <div className='ml-5' >\r\n                                        <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForSubscTable(e)}>\r\n                                            {selectArray.map(number => {\r\n                                                return (\r\n                                                    <option value={number} >{number}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Card>\r\n                        <br />\r\n                    </div>)}\r\n                </TabPanel>\r\n            </Box>\r\n\r\n\r\n            <Box sx={{ width: '100%' }}>\r\n                <Typography>Cancelled Order</Typography>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\r\n                        <Tab label=\"In Game\" {...a11yPropss(0)} />\r\n                        <Tab label=\"ID Code\" {...a11yPropss(1)} />\r\n                        <Tab label=\"Offer\" {...a11yPropss(2)} />\r\n                        <Tab label=\"Subscribe\" {...a11yPropss(3)} />\r\n                    </Tabs>\r\n                </Box>\r\n                <TabPanels value={value} index={0}>\r\n                    {inGameTable && (\r\n                        <div>\r\n                            <Card title={`Cancelled Orders (InGame)`}>\r\n                                <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Cancel Ingame orders: {totalIngameCancel}</p>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Account Name</th>\r\n                                            <th className=\"border-0\">Account Number</th>\r\n                                            <th className=\"border-0\">Account password</th>\r\n                                            <th className=\"border-0\">Backup Number</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tabless cancelledOrdersInGame={currentPostss} loading={loading} paginatess={currentPagess} makeActive={makeActive} disabled={disabled} postsPerPagess={postsPerPagess} />\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPagess}\r\n                                        totalPosts={cancelledOrdersInGame.length}\r\n                                        paginate={paginatess}\r\n                                        Number={ingameCancel}\r\n                                    />\r\n                                    {cancelledOrdersInGame.length > 0 && (\r\n                                        <div className='ml-5' >\r\n                                            <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForCancelIngameTable(e)}>\r\n                                                {selectArray.map(number => {\r\n                                                    return (\r\n                                                        <option value={number} >{number}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card>\r\n                            <br />\r\n                        </div>\r\n                    )}\r\n                </TabPanels>\r\n                <TabPanels value={value} index={1}>\r\n                    {idCodeTable && (\r\n                        <div>\r\n                            <Card title={`Cancelled Orders (IdCode)`}>\r\n                                <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Cancel Idcode orders: {totalIdcodeCancel}</p>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th className=\"border-0\">Order ID</th>\r\n                                            <th className=\"border-0\">User ID</th>\r\n                                            <th className=\"border-0\">Product Name</th>\r\n                                            <th className=\"border-0\">Purchased Package</th>\r\n                                            <th className=\"border-0\">Id Code</th>\r\n                                            <th className=\"border-0\">Order Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <Tablesss cancelledOrdersIdCode={currentPostsss} loading={loading} paginatesss={currentPagesss} makeActive={makeActive} disabled={disabled} postsPerPagesss={postsPerPagesss} />\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPagesss}\r\n                                        totalPosts={cancelledOrdersIdCode.length}\r\n                                        paginate={paginatesss}\r\n                                        Number={idcodeCancel}\r\n                                    />\r\n                                    {cancelledOrdersIdCode.length > 0 && (\r\n                                        <div className='ml-5' >\r\n                                            <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForCancelIdcodeTable(e)}>\r\n                                                {selectArray.map(number => {\r\n                                                    return (\r\n                                                        <option value={number} >{number}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    )}\r\n                </TabPanels>\r\n                <TabPanels value={value} index={2}>\r\n                    {offerTable && (<div>\r\n                        <Card title={`Cancelled Orders (Offer)`}>\r\n                            <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Cancel Offer orders: {totalOfferCancel}</p>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th className=\"border-0\">Order ID</th>\r\n                                        <th className=\"border-0\">User ID</th>\r\n                                        <th className=\"border-0\">Product Name</th>\r\n                                        <th className=\"border-0\">Purchased Package</th>\r\n                                        <th className=\"border-0\">Account Name</th>\r\n                                        <th className=\"border-0\">Account Number</th>\r\n                                        <th className=\"border-0\">Account password</th>\r\n                                        <th className=\"border-0\">Backup Number</th>\r\n                                        <th className=\"border-0\">Order Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <Tablesssssss cancelledOrdersOffer={currentPostssssss} loading={loading} paginatessssss={currentPagessssss} makeActive={makeActive} disabled={disabled} postsPerPagessssss={postsPerPagessssss} />\r\n                                </tbody>\r\n                            </table>\r\n                            <div className='d-flex'>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagessssss}\r\n                                    totalPosts={cancelledOrdersOffer.length}\r\n                                    paginate={paginatessssss}\r\n                                    Number={offerCancel}\r\n                                />\r\n                                {cancelledOrdersOffer.length > 0 && (\r\n                                    <div className='ml-5' >\r\n                                        <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForCancelOfferTable(e)}>\r\n                                            {selectArray.map(number => {\r\n                                                return (\r\n                                                    <option value={number} >{number}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Card>\r\n                        <br />\r\n                    </div>)}\r\n                </TabPanels>\r\n                <TabPanels value={value} index={3}>\r\n                    {subscTable && (<div>\r\n                        <Card title={`Cancelled Orders (Subsc)`}>\r\n                            <p style={{ fontSize: \".9rem\", marginBottom: \"20px\" }} className=\"text-muted\">Total Cancel Subs orders: {totalSubscCancel}</p>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th className=\"border-0\">Order ID</th>\r\n                                        <th className=\"border-0\">User ID</th>\r\n                                        <th className=\"border-0\">Product Name</th>\r\n                                        <th className=\"border-0\">Purchased Package</th>\r\n                                        <th className=\"border-0\">Account Name</th>\r\n                                        <th className=\"border-0\">Account Number</th>\r\n                                        <th className=\"border-0\">Account password</th>\r\n                                        <th className=\"border-0\">Backup Number</th>\r\n                                        <th className=\"border-0\">Order Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <Tablessssssss cancelledOrdersSubsc={currentPostsssssss} loading={loading} paginatesssssss={currentPagesssssss} makeActive={makeActive} disabled={disabled} postsPerPagesssssss={postsPerPagesssssss} />\r\n                                </tbody>\r\n                            </table>\r\n                            <div className='d-flex'>\r\n                                <Pagination\r\n                                    postsPerPage={postsPerPagesssssss}\r\n                                    totalPosts={cancelledOrdersSubsc.length}\r\n                                    paginate={paginatesssssss}\r\n                                    Number={subscCancel}\r\n                                />\r\n                                {cancelledOrdersSubsc.length > 0 && (\r\n                                    <div className='ml-5' >\r\n                                        <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForCancelSubscTable(e)}>\r\n                                            {selectArray.map(number => {\r\n                                                return (\r\n                                                    <option value={number} >{number}</option>\r\n                                                )\r\n                                            })}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Card>\r\n                        <br />\r\n                    </div>)}\r\n                </TabPanels>\r\n            </Box>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default OrderHandle","import React from 'react';\r\nimport { updateUserActiveStatus2 } from \"../../Api/user\";\r\nimport { notify } from '../../utils/notification'\r\n\r\nconst adminActiveStatus = ({ adminData, paginate }) => {\r\n   \r\n    const changeStatus = (user) => () => {\r\n        let activeStatus = user.activeStatus === \"active\" ? \"InActive\" : \"active\";\r\n        let id=user._id\r\n        updateUserActiveStatus2(activeStatus,id)\r\n                .then((response) => {\r\n                    notify('Admin active status updated')\r\n                })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {adminData && adminData.map((user, index) => (\r\n                <>\r\n                    <div >\r\n                        <span style={{ marginRight: \"10px\" }}>{(paginate - 1) * 10 + index + 1}</span>\r\n                        <span style={{ maxWidth: \"50px\" }}> {user.username}</span>\r\n\r\n                        <span>\r\n                            <button id=\"role-btn\" className=\"role-btn\">{user.activeStatus}</button>\r\n                            <div className=\"dropdown\">\r\n                                <button className=\"role-btn\" style={{ borderLeft: \"1px solid #0d8bf2\", width: '35px' }}>\r\n                                    <i className=\"fa fa-caret-down\"></i>\r\n                                </button>\r\n                                <div id=\"role-dropdown\" className=\"dropdown-content\">\r\n                                    <p onClick={changeStatus(user)}>{user.activeStatus === \"active\" ? \"InActive\" : \"active\"}</p>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n                    </div><br />\r\n                </>\r\n\r\n            ))}\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default adminActiveStatus;","import React, { useState, useEffect } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { getAllUser } from '../../Api/user';\r\nimport { userInfo } from '../../utils/auth';\r\nimport Tables from \"./adminActiveStatus\";\r\nimport Pagination from \"../../views/Pagination\";\r\n\r\nconst StatusChange = () => {\r\n    const { token } = userInfo();\r\n    const [adminData, setAdminData] = useState([]);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = adminData.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    useEffect(() => {\r\n        getAllUser(token)\r\n            .then((res) => {\r\n                let data = res.data\r\n                const admin = data && data.filter(filteredData => filteredData.role === 'admin')\r\n                setAdminData(admin)\r\n                console.log(admin)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [adminData]);\r\n\r\n    return (\r\n        <div>\r\n            <Card title={`Admin Active Status`}>\r\n\r\n                <Tables adminData={currentPost} paginate={currentPage} />\r\n\r\n                <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={adminData.length}\r\n                    paginate={paginate}\r\n                />\r\n            </Card>\r\n        </div >\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default StatusChange;","import React, { useEffect } from \"react\";\r\nimport CarouselComp from \"../components/Utility/CarosolComp\";\r\nimport Instruction from \"../components/Utility/Instraction/PaymentMethod\";\r\nimport PaymentMethodData from \"../components/Utility/Instraction/PaymentMethodData\";\r\nimport Popupbanner from \"../components/Utility/PopupBanner/Popupbanner\";\r\nimport StatusChange from \"../components/Utility/statusChange\";\r\nimport { userInfo } from '../utils/auth';\r\nlet superadmin = false;\r\n\r\nconst Utility = () => {\r\n\r\n    const { role } = userInfo();\r\n\r\n    if (role === 'superadmin') {\r\n        superadmin = true\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {superadmin && (\r\n                <StatusChange />\r\n            )}<br />\r\n            <div>Banners</div>\r\n            <CarouselComp />\r\n            <div>Instruction</div>\r\n            <Instruction />\r\n            <PaymentMethodData />\r\n            <Popupbanner />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Utility","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const getProducts = () => {\r\n    return axios.get(\r\n        `${API}admin/product/`,{\r\n        headers:{\r\n                \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    }\r\n    );\r\n};\r\n\r\nexport const logOut = () => {\r\n    const token = JSON.parse(localStorage.getItem('jwt'))\r\n    return axios.get(\r\n        `${API}admin/logout`,{\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n                \"Access-Control-Allow-Origin\" : \"*\",\r\n            }\r\n        })\r\n};","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n    AiOutlineDelete,\r\n    AiOutlineEdit, AiOutlineUpload,\r\n} from \"react-icons/ai\";\r\nimport { Card, Row, Col, Button, Form, Modal } from \"react-bootstrap\";\r\nimport ProductUpdate from \"../components/product/ProductUpdate\";\r\nimport { deleteOneProducts } from \"../Api/products\";\r\nimport { notify } from '../utils/notification'\r\nimport { API } from '../utils/config';\r\nimport { userInfo } from \"../utils/auth\";\r\nimport {Chip} from \"@mui/material\";\r\nimport Badge from \"@mui/material/Badge\";\r\n\r\nconst ProductList = ({ data }) => {\r\n\r\n    const id = data._id\r\n    const [update, setUpdate] = useState(false);\r\n    const [remove, setRemove] = useState(false);\r\n    const { token } = userInfo();\r\n\r\n    const handleClose = () => setUpdate(false);\r\n\r\n    const handleShow = () => setUpdate(true)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        deleteOneProducts(token, id)\r\n            .then(response => notify('Product Delete Successfully'))\r\n            .catch(err => notify('Something Failed! Please try again'))\r\n    }\r\n\r\n    const handleCloseDelete = () => {\r\n        setRemove(false)\r\n    }\r\n\r\n    const stockFilter = (data) => {\r\n        if (data) {\r\n            return (<>In Stock</>)\r\n        } else {\r\n            return (<>Stock Out</>)\r\n        }\r\n    }\r\n\r\n    const handleShowDelete = () => setRemove(true);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col sm={12} md={6} lg={4} xl={3}>\r\n                    <Card>\r\n                        <Card.Img\r\n                            variant=\"top\"\r\n                            className=\"cart_image\"\r\n                            src={`${API}${data.images}`}\r\n                        />\r\n                        <Card.Body>\r\n                            <Card.Title className=\"text-dark bg-white text-center\">\r\n                                {data.gameName}\r\n                            </Card.Title>\r\n                            <Row className='mt-4'>\r\n                                <Col className=\"text-center text-lg\">\r\n                                    <Button variant=\"light\">\r\n                                        <AiOutlineEdit onClick={handleShow} size={24} />\r\n                                    </Button>\r\n                                </Col>\r\n                                <Col className=\"text-center\">\r\n                                    <Button variant=\"light\">\r\n                                        <AiOutlineDelete onClick={e => handleShowDelete(e)} size={24} />\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={12} md={6} lg={8} xl={9}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col>\r\n                                    Game Name\r\n                                    <Card>\r\n                                        <Card.Body>\r\n                                            {data.gameName}\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col>\r\n                                    Category Name\r\n                                    <Card>\r\n                                        <Card.Body>\r\n                                            {data.categoryName}\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                {data.topUp.map((product, index) => {\r\n                                    return (\r\n                                        <Badge style={{marginRight: 30, marginTop: 15}} color=\"secondary\"\r\n                                               badgeContent={stockFilter(product.stock)}>\r\n                                            <Chip\r\n                                                variant=\"outlined\"\r\n                                                style={{marginTop: 10}}\r\n                                                label={`${product.option}  (${product.price} Taka)`}\r\n                                                // avatar={}\r\n\r\n                                            />\r\n                                        </Badge>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <Form>\r\n                                <Modal show={update} size='lg' onHide={handleClose}>\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title ><div style={{marginLeft: 10}}>Update Product</div></Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body ><ProductUpdate  id={id} /></Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n                            </Form>\r\n\r\n                            <Modal show={remove} size='lg' onHide={handleCloseDelete}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Delete Item</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <Form onSubmit={e => handleSubmit(e)}>\r\n                                        <div className=\"d-flex justify-content-around\">\r\n                                            <Form.Label>Do you want to delete this item?</Form.Label>\r\n                                            <Button type=\"submit\" variant=\"primary\">\r\n                                                Yes Delete\r\n                                            </Button>\r\n                                        </div>\r\n\r\n                                    </Form>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={handleCloseDelete}>\r\n                                        No\r\n                                    </Button>\r\n                                    <Button onClick={handleCloseDelete} type=\"submit\" variant=\"primary\"\r\n                                    >\r\n                                        Done\r\n                                    </Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ProductList","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { addProductss, addProductImage, deleteProductImage } from \"../../Api/products\";\r\nimport {Alert} from \"antd\";\r\nimport { notify } from '../../utils/notification'\r\nimport {FormControlLabel, Switch} from \"@mui/material\";\r\nimport { styled } from '@mui/material/styles';\r\nlet productId;\r\n\r\nconst category = [\r\n    {\r\n        _id: \"0\",\r\n        categoryNames: \"\"\r\n    },\r\n    {\r\n        _id: \"1\",\r\n        categoryNames: \"(InGame)\"\r\n    },\r\n    {\r\n        _id: \"2\",\r\n        categoryNames: \"(IDCode)\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        categoryNames: \"(Offer)\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        categoryNames: \"(Subsc)\"\r\n    }\r\n\r\n]\r\n\r\nconst Android12Switch = styled(Switch)(({ theme }) => ({\r\n    padding: 8,\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 22 / 2,\r\n        '&:before, &:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            top: '50%',\r\n            transform: 'translateY(-50%)',\r\n            width: 16,\r\n            height: 16,\r\n        },\r\n        '&:before': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n            left: 12,\r\n        },\r\n        '&:after': {\r\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n                theme.palette.getContrastText(theme.palette.primary.main),\r\n            )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n            right: 12,\r\n        },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: 'none',\r\n        width: 16,\r\n        height: 16,\r\n        margin: 2,\r\n    },\r\n}));\r\n\r\nconst ProductAdd = () => {\r\n    const [inputList, setInputList] = useState([{\r\n        option: \"\",\r\n        price: \"\",\r\n        stock: true\r\n    }]);\r\n\r\n    const [check, setCheck] = useState(false)\r\n\r\n    const [detailsList, setDetailsList] = useState([{\r\n        region: '',\r\n        platform: '',\r\n        publisher: '',\r\n    }]);\r\n\r\n    const [addProduct, setAddProduct] = useState({\r\n        gameName: '',\r\n        categoryName: '',\r\n        image: '',\r\n        backUpLink: '',\r\n        topUp: [],\r\n        formData: '',\r\n    });\r\n\r\n    const [values, setValues] = useState({\r\n        success: false,\r\n        alert: false,\r\n        disabled: false\r\n    })\r\n    const label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n    const { success, disabled } = values;\r\n\r\n    const { option, price, stock } = inputList;\r\n\r\n    const { gameName, categoryName, image, backUpLink, details, topUp, formData } = addProduct;\r\n\r\n    useEffect(() => {\r\n        setAddProduct({\r\n            ...addProduct,\r\n            formData: new FormData()\r\n        })\r\n    }, [])\r\n\r\n    const handleDetailChange = (e, index) => {\r\n        const { name, value } = e.target\r\n        const list = [...detailsList];\r\n        list[index][name] = value;\r\n        setDetailsList(list)\r\n        setAddProduct({\r\n            ...addProduct,\r\n            details: detailsList\r\n        })\r\n        formData.set(\"details\", JSON.stringify(details))\r\n    }\r\n    const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n        setAddProduct({\r\n            ...addProduct,\r\n            topUp: inputList\r\n        })\r\n        console.log(inputList)\r\n        formData.set(\"topUp\", JSON.stringify(topUp))\r\n    };\r\n\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n        formData.set(e.target.name, value);\r\n        setAddProduct({\r\n            ...addProduct,\r\n            [e.target.name]: value,\r\n        })\r\n    }\r\n\r\n\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, { option: \"\", price: \"\" }]);\r\n    };\r\n\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        setValues({...values, disabled: true});\r\n\r\n        await addProductss(formData)\r\n            .then(response => {\r\n                setAddProduct({\r\n                    ...addProduct,\r\n                    gameName: '',\r\n                    categoryName: '',\r\n                    image: '',\r\n                    backUpLink: '',\r\n                    detail: detailsList,\r\n                    topUp: inputList,\r\n                    success: true,\r\n                })\r\n                setValues({\r\n                    success: true,\r\n                    alert: false,\r\n                    disabled: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                let errMsg = \"Something went wrong!\";\r\n                if (err.response) errMsg = err.response.data;\r\n                notify(`${errMsg}`)\r\n                setValues({\r\n                    disabled: false\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    const addForm = () => (\r\n        <>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Upload a file</Form.Label>\r\n                            <Form.Control type=\"file\" name=\"image\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Backup Code Link</Form.Label>\r\n                            <Form.Control type=\"game\" name=\"backUpLink\" placeholder=\"Backup Code Link\" value={backUpLink}\r\n                                onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group className=\"mb-3\" controlId=\"addGame\">\r\n                            <Form.Label>Add Game</Form.Label>\r\n                            <Form.Control type=\"game\" name=\"gameName\" placeholder=\"Game name\" value={gameName}\r\n                                onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Label>Select Category</Form.Label>\r\n                        <Form.Control as=\"select\" aria-label=\"Default select example\" defaultValue=\"State...\"\r\n                            value={categoryName} name=\"categoryName\" onChange={handleChange}>\r\n                            <option>Select an account type</option>\r\n                            {\r\n                                category.map((data, index) => {\r\n                                    return (\r\n                                        <option key={index}>{data.categoryNames}</option>\r\n                                    )\r\n                                }\r\n                                )\r\n                            }\r\n                        </Form.Control>\r\n                        {/*<Form.Group className=\"mb-3\" controlId=\"addCategory\">*/}\r\n                        {/*    <Form.Label>Add Category</Form.Label>*/}\r\n                        {/*    <Form.Control type=\"category\" name=\"categoryName\" placeholder=\"Category name\"*/}\r\n                        {/*        value={categoryName} onChange={handleChange} />*/}\r\n                        {/*</Form.Group>*/}\r\n                    </Col>\r\n                </Row>\r\n\r\n                {inputList.map((x, i) => {\r\n                    return (\r\n                        <Row key={i}>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Product Option</Form.Label>\r\n                                    <Form.Control type=\"option\" name=\"option\" placeholder=\"option\"\r\n                                        value={option} checked={true} onChange={e => handleInputChange(e, i)} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col className=\"btn-box\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Product price</Form.Label>\r\n                                    <Form.Control type=\"price\" name=\"price\" placeholder=\"Product price\"\r\n                                        value={price} onChange={e => handleInputChange(e, i)} />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"addCategory\">\r\n                                    <Form.Label>Product Stock</Form.Label>\r\n                                    <FormControlLabel\r\n                                        onClick={e=>setCheck(!check)}\r\n                                        onChange={e => handleInputChange(e, i)}\r\n                                        name=\"stock\"\r\n                                        value={check}\r\n                                        control={<Android12Switch defaultChecked />}\r\n                                        label=\"In Stock\"\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                            </Col>\r\n                            <Col className=\"mt-4\">\r\n                                {inputList.length !== 1 && <Button\r\n                                    className=\"mr10\"\r\n                                    onClick={() => handleRemoveClick(i)}>Remove</Button>}\r\n                                {inputList.length - 1 === i && <Button key={i} onClick={handleAddClick}>Add</Button>}\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    )\r\n                        ;\r\n                })}\r\n\r\n                <div>\r\n                    <Button type=\"submit\" variant=\"primary\" disabled={disabled}>\r\n                        Add new product\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n\r\n        </>\r\n    )\r\n\r\n    const showSuccess = () => {\r\n        if (success) return (<>\r\n            <Redirect to='/admin/product' />\r\n            <Alert message=\"Product added\" type=\"success\" />\r\n        </>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {showSuccess()}\r\n            {addForm()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductAdd;","import React, { useEffect, useState } from \"react\";\r\nimport { getProducts } from \"../Api\";\r\nimport { Button, Card, Col, Modal, Row } from \"react-bootstrap\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProductAdd from \"../components/product/ProductAdd\";\r\nimport \"./product.css\"\r\n\r\nconst Products = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [product, setProduct] = useState([])\r\n\r\n    useEffect(() => {\r\n        getProducts()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setProduct(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [product]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\"  className=\"mb-4\" onClick={handleShow}>\r\n                Add Products\r\n            </Button>\r\n            <Modal show={show} size='lg' onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                </Modal.Header>\r\n                <Modal.Body><ProductAdd /></Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title className=\"text-center\">Product List</Card.Title>\r\n                    <Row>\r\n                        {product && product.map((product, index) => {\r\n                            if (product.disabled === false) {\r\n                                return (\r\n                                    <Col key={index}\r\n                                        lg=\"12\" sm=\"12\"\r\n                                        className=\" text-decoration-none\">\r\n                                        <div to={`category/${index}/${product.gameName}`}><ProductList key={index} data={product} />\r\n                                        </div>\r\n                                    </Col>\r\n                                );\r\n                            }\r\n                        })}\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nexport default Products;","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\n\r\nexport const createNotifications = (token,id,notification) => {\r\n    const value={\r\n        notifications:notification\r\n    }\r\n    return axios.post(`${API}notification/${id}`,value,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getNotifications = (token,id) => {\r\n    return axios.get(`${API}notification/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const editNotifications = (token,id) => {\r\n    return axios.put(`${API}notification/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport moment from \"moment\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport {Checkbox} from \"@mui/material\";\r\n\r\nlet array = [];\r\nlet orderIds = []\r\nlet arrayItem=['1']\r\n\r\nconst inGameOrderTable = ({inGameOrders, loading, paginate, markComplete, modalOpen, disabled, postsPerPage}) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    const selectAll = (orderId) => () => {\r\n        if (!localStorage.getItem('orderArray')) {\r\n            array = []\r\n            orderIds=[]\r\n        }\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        }\r\n        orderIds=localStorage.getItem('orderArray').split(',')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {inGameOrders && inGameOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(InGame)').map((order, index) => (\r\n                <tr>\r\n                    {orderIds.length===0 && (\r\n                        <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} /></td>\r\n                    )}\r\n                    {orderIds.length>0 && arrayItem.map(item=>{\r\n                        if(orderIds.indexOf(order._id) !== -1){\r\n                            return(\r\n                                <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={true} /></td>\r\n                            )\r\n                        }\r\n                        else{\r\n                            return(\r\n                                <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} value={true}/></td>\r\n                            )\r\n                        }\r\n                    })}\r\n                    <td>{(paginate - 1) * parseInt(postsPerPage) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    {order.isComplete === false && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" disabled={disabled}\r\n                                    onClick={markComplete(order._id, order.userId?._id, order.userId?.phonenumber, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order.walletId?._id)}>Mark\r\n                                as Complete\r\n                            </button>\r\n                        </td>\r\n                    </>)}\r\n                    {order.isComplete === true && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\">Completed</button>\r\n                        </td>\r\n                    </>)}\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\"\r\n                                onClick={modalOpen(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order?.paymentComplete)}>Cancel\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default inGameOrderTable;","import React, {useEffect, useState} from 'react';\r\nimport moment from \"moment\";\r\nlet array = []\r\nlet orderIds = []\r\nlet arrayItem=['1']\r\n\r\nconst idCodeOrderTable = ({ idCodeOrders, loading, paginates, markComplete, modalOpen, disabled,postsPerPages }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n\r\n    }\r\n\r\n    const selectAll = (orderId) => () => {\r\n        if (!localStorage.getItem('orderArray')) {\r\n            array = []\r\n            orderIds=[]\r\n        }\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        }\r\n\r\n         orderIds=localStorage.getItem('orderArray').split(',')\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {idCodeOrders && idCodeOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(IDCode)').map((order, index) => (\r\n                <tr>\r\n                    {orderIds.length===0 && (\r\n                        <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} /></td>\r\n                    )}\r\n                    {orderIds.length>0 && arrayItem.map(item=>{\r\n                            if(orderIds.indexOf(order._id) !== -1){\r\n                                return(\r\n                                    <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={true} /></td>\r\n                                )\r\n                            }\r\n                            else{\r\n                                return(\r\n                                    <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} value={true}/></td>\r\n                                )\r\n                            }\r\n                    })}\r\n                    <td>{(paginates - 1) * parseInt(postsPerPages) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.idCode} </td>\r\n                    \r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    {order.isComplete === false && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(order._id, order.userId?._id, order.userId?.phonenumber, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order.walletId?._id)}>Mark as Complete</button>\r\n                        </td>\r\n                    </>)}\r\n                    {order.isComplete === true && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\">Completed</button>\r\n                        </td>\r\n                    </>)}\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" onClick={modalOpen(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order?.paymentComplete)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default idCodeOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst cancelInGameOrderTable = ({ cancelledOrdersInGame, loading, paginatess,makeActive,disabled,postsPerPagess }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {cancelledOrdersInGame && cancelledOrdersInGame.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(InGame)').map((order, index) => (\r\n                <tr>\r\n                    <td>{(paginatess - 1) * parseInt(postsPerPagess) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default cancelInGameOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst cancelIdcodeOrderTable = ({ cancelledOrdersIdCode, loading, paginatesss,makeActive,disabled,postsPerPagesss }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {cancelledOrdersIdCode && cancelledOrdersIdCode.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(IDCode)').map((order, index) => (\r\n                <tr>\r\n                    <td>{(paginatesss - 1) * parseInt(postsPerPagesss) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.idCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default cancelIdcodeOrderTable;","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nlet array = []\r\nlet orderIds = []\r\nlet arrayItem=['1']\r\n\r\n\r\nconst offerOrderTable = ({ offerOrders, loading, paginatessss, markComplete, modalOpen, disabled,postsPerPagessss }) => {\r\n\r\n    const selectAll = (orderId) => () => {\r\n        if (!localStorage.getItem('orderArray')) {\r\n            array = []\r\n            orderIds=[]\r\n        }\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        }\r\n        orderIds=localStorage.getItem('orderArray').split(',')\r\n    }\r\n\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {offerOrders && offerOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Offer)').map((order, index) => (\r\n                <tr>\r\n                    {orderIds.length===0 && (\r\n                        <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} /></td>\r\n                    )}\r\n                    {orderIds.length>0 && arrayItem.map(item=>{\r\n                        if(orderIds.indexOf(order._id) !== -1){\r\n                            return(\r\n                                <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={true} /></td>\r\n                            )\r\n                        }\r\n                        else{\r\n                            return(\r\n                                <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} value={true}/></td>\r\n                            )\r\n                        }\r\n                    })}\r\n                    <td>{(paginatessss - 1) * parseInt(postsPerPagessss) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    {order.isComplete === false && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(order._id, order.userId?._id, order.userId?.phonenumber, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order.walletId?._id)}>Mark as Complete</button>\r\n                        </td>\r\n                    </>)}\r\n                    {order.isComplete === true && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\">Completed</button>\r\n                        </td>\r\n                    </>)}\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" onClick={modalOpen(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order?.paymentComplete)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default offerOrderTable;","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nlet array = []\r\nlet orderIds = []\r\nlet arrayItem=['1']\r\n\r\nconst subscOrderTable = ({ subscOrders, loading, paginatesssss, markComplete, modalOpen, disabled,postsPerPagesssss }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    const selectAll = (orderId) => () => {\r\n        if (!localStorage.getItem('orderArray')) {\r\n            array = []\r\n            orderIds=[]\r\n        }\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"orderArray\", array)\r\n        }\r\n        orderIds=localStorage.getItem('orderArray').split(',')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {subscOrders && subscOrders.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false && filteredData.productId?.categoryName === '(Subsc)').map((order, index) => (\r\n                <tr>\r\n                    {orderIds.length===0 && (\r\n                        <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} /></td>\r\n                    )}\r\n                    {orderIds.length>0 && arrayItem.map(item=>{\r\n                        if(orderIds.indexOf(order._id) !== -1){\r\n                            return(\r\n                                <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={true} /></td>\r\n                            )\r\n                        }\r\n                        else{\r\n                            return(\r\n                                <td ><input onClick={selectAll(order._id)} type=\"checkbox\" checked={false} value={true}/></td>\r\n                            )\r\n                        }\r\n                    })}\r\n                    <td>{(paginatesssss - 1) * parseInt(postsPerPagesssss) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    {order.isComplete === false && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(order._id, order.userId?._id, order.userId?.phonenumber, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order.walletId?._id)}>Mark as Complete</button>\r\n                        </td>\r\n                    </>)}\r\n                    {order.isComplete === true && (<>\r\n                        <td>\r\n                            <button className=\"btn btn-primary\">Completed</button>\r\n                        </td>\r\n                    </>)}\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" onClick={modalOpen(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price, order?.paymentComplete)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default subscOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst cancelOfferOrderTable = ({ cancelledOrdersOffer, loading, paginatessssss,makeActive,disabled,postsPerPagessssss }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {cancelledOrdersOffer && cancelledOrdersOffer.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Offer)').map((order, index) => (\r\n                <tr>\r\n                    <td>{(paginatessssss - 1) * parseInt(postsPerPagessssss) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default cancelOfferOrderTable;","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nconst cancelSubscOrderTable = ({ cancelledOrdersSubsc, loading, paginatesssssss,makeActive,disabled,postsPerPagesssssss }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {cancelledOrdersSubsc && cancelledOrdersSubsc.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true && filteredData.productId?.categoryName === '(Subsc)').map((order, index) => (\r\n                <tr>\r\n                    <td>{(paginatesssssss - 1) * parseInt(postsPerPagesssssss) + index + 1}</td>\r\n                    <td>{order.orderId}</td>\r\n                    <td>{order.userId?.userIdNo}</td>\r\n                    <td>{order.productId?.gameName}</td>\r\n                    <td>{order.purchaseId?.product?.option} ({order.purchaseId?.product?.price})</td>\r\n                    <td>{order.purchaseId?.accountType} </td>\r\n                    <td>{order.purchaseId?.Number} </td>\r\n                    <td>{order.purchaseId?.Password} </td>\r\n                    <td>{order.purchaseId?.backupCode} </td>\r\n                    <td>{moment(order.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(order._id, order.userId?._id, order.productId?.gameName, order.productId?.categoryName, order.purchaseId?.product?.option, order.purchaseId?.product?.price)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default cancelSubscOrderTable;","import { BsPencilSquare } from \"react-icons/bs\";\r\nimport React, { useState } from 'react';\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport { updateAddWallet, findOneWallet, editBalance } from '../Api/addWallet';\r\nimport { updateWallet } from '../Api/wallet';\r\nimport { createNotifications } from '../Api/notification';\r\nimport { userInfo } from '../utils/auth';\r\nimport { notify } from '../utils/notification';\r\nimport moment from \"moment\";\r\nimport { sendMessageAPI } from '../Api/sendMessage'\r\nlet transactionId, transactionUser, transactionUserName, message, cancelAmount, transactionNum;\r\n\r\nlet array = [];\r\nlet transactionIds = []\r\nlet arrayItem=['1']\r\nlet restart=false;\r\n\r\nconst OrderTables = ({ setMark,activePayment, loading, paginates, findActivePayment, findCompletePayment, findCancelledPayment, filterPayment, filterFunctionActive, filterPaymentTypeActive, filterPaymentType, filtersBoth, postsPerPages,mark }) => {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [edit, setEdit] = useState(false);\r\n    const handleCloseEdit = () => setEdit(false);\r\n    const handleShowEdit = () => setEdit(true);\r\n    const { token } = userInfo();\r\n\r\n    const [walletBalance, setWalletBalance] = useState({\r\n        amount: '',\r\n        disabled: false\r\n    });\r\n\r\n\r\n    const { amount } = walletBalance;\r\n\r\n    const handleChangeAmount = e => {\r\n        setWalletBalance({\r\n            ...walletBalance,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    const [note, setNote] = useState({\r\n        noteText: '',\r\n        disabled: false\r\n    });\r\n\r\n    const { noteText, disabled } = note;\r\n\r\n    const markComplete = (id, transactionId, taka, phonenumber) => () => {\r\n        restart=false\r\n        setMark()\r\n        mark=false\r\n        setNote({\r\n            ...note,\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            isComplete: true\r\n        }\r\n        let sms = `${taka} Taka has been added to your sizishop wallet for TransactionId: ${transactionId}`\r\n        let sendMessage = {\r\n            number: phonenumber,\r\n            message: sms.replaceAll(\" \", \"%20\")\r\n        }\r\n        updateAddWallet(token, id, data)\r\n            .then(response => {\r\n                if (response.data === 'marked') {\r\n                    console.log('marked')\r\n                }\r\n                else {\r\n                    findOneWallet(token, id)\r\n                        .then(response => {\r\n                            console.log(response.data)\r\n                            const walletId = response.data.walletId;\r\n                            const amount = response.data.amount;\r\n                            const walletUser = response.data.userId;\r\n                            const spent = 0\r\n                            updateWallet(token, walletId, amount, spent)\r\n                                .then(res => {\r\n                                    setNote({\r\n                                        ...note,\r\n                                        disabled: false\r\n                                    })\r\n                                    createNotifications(token, walletUser, `${taka} Taka has been added to your wallet for TransactionId: ${transactionId}`)\r\n                                        .then(res => {\r\n                                            notify('Transaction confirmed!!!!')\r\n                                            setNote({\r\n                                                ...note,\r\n                                                disabled: false\r\n                                            })\r\n                                            findActivePayment()\r\n                                            findCompletePayment()\r\n                                            if (filterFunctionActive === true) {\r\n                                                filterPayment()\r\n                                            }\r\n                                            if (filterPaymentTypeActive === true) {\r\n                                                filterPaymentType()\r\n                                            }\r\n                                            filtersBoth()\r\n                                        })\r\n                                })\r\n                        })\r\n                        .catch(err => {\r\n                            let data = {\r\n                                isComplete: false\r\n                            }\r\n                            notify('Something Failed!! Please try again')\r\n                            updateAddWallet(token, id, data)\r\n                                .then(response => {\r\n                                    if (response.data === 'marked') {\r\n                                        console.log('marked')\r\n                                    }\r\n                                    else {\r\n                                        findActivePayment()\r\n                                        notify('Something Failed!!! Please try again')\r\n                                        setNote({\r\n                                            ...note,\r\n                                            disabled: false\r\n                                        })\r\n                                    }\r\n                                    \r\n                                })\r\n                        })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setNote({\r\n                    ...note,\r\n                    disabled: false\r\n                })\r\n                notify('Something Failed!!! Please try again')\r\n            })\r\n\r\n\r\n    }\r\n\r\n    const modalOpen = (id, userId, name, amount, tran) => () => {\r\n        handleShow()\r\n        transactionId = id\r\n        transactionUser = userId\r\n        transactionUserName = name\r\n        cancelAmount = amount\r\n        transactionNum = tran\r\n    }\r\n\r\n    const modalOpen2 = (id, userId, name, amount) => () => {\r\n        handleShowEdit()\r\n        transactionId = id\r\n        transactionUser = userId\r\n        transactionUserName = name\r\n        cancelAmount = amount\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setNote({\r\n            ...note,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        message = e.target.value\r\n    }\r\n\r\n\r\n    const createNote = () => {\r\n        setNote({\r\n            ...note,\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            reject: true,\r\n            message: `${message}`\r\n        }\r\n\r\n        updateAddWallet(token, transactionId, data)\r\n            .then(res => {\r\n                if (res.data === 'marked') {\r\n                    console.log('marked')\r\n                }\r\n                else {\r\n                    createNotifications(token, transactionUser, `Your tranaction has been canceled for ${cancelAmount} Taka (TransactionId: ${transactionNum}). Reason: ${message}`)\r\n                        .then(res => {\r\n                            findActivePayment();\r\n                            findCancelledPayment();\r\n                            if (filterFunctionActive === true) {\r\n                                filterPayment()\r\n                            }\r\n                            if (filterPaymentTypeActive === true || filtersBoth === true) {\r\n                                filterPaymentType()\r\n                            }\r\n\r\n                            handleClose();\r\n                            notify('Transaction cancelled');\r\n                            setNote({\r\n                                ...note,\r\n                                disabled: false\r\n                            })\r\n                        })\r\n                }\r\n            })\r\n            .catch(res => {\r\n                findActivePayment()\r\n                notify('Something wrong! Please try again')\r\n                setNote({\r\n                    ...note,\r\n                    disabled: false\r\n                })\r\n            })\r\n    }\r\n\r\n    const editUserAmount = () => {\r\n        handleCloseEdit();\r\n        setWalletBalance({\r\n            ...walletBalance\r\n        })\r\n        editBalance(token, transactionId, parseInt(amount))\r\n            .then(res => {\r\n                setWalletBalance({\r\n                    amount: ''\r\n                })\r\n                findActivePayment()\r\n                notify(`${transactionUserName}'s transaction balance updated`)\r\n            })\r\n            .catch(err => {\r\n                setWalletBalance({\r\n                    amount: ''\r\n                })\r\n                notify(`Something went wrong. Please try again`)\r\n            })\r\n    }\r\n\r\n\r\n    const selectAll = (orderId) => () => {\r\n        mark=false\r\n        restart=true\r\n\r\n        if (!localStorage.getItem('transactionArray')) {\r\n            array = []\r\n            transactionIds=[]\r\n        }\r\n        const foundId = array.indexOf(orderId);\r\n        if (foundId === -1) {\r\n            array.push(orderId);\r\n            //transactionIds.push(orderId);\r\n            localStorage.setItem(\"transactionArray\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            //transactionIds.splice(foundId, 1);\r\n            localStorage.setItem(\"transactionArray\", array)\r\n        }\r\n        transactionIds=localStorage.getItem('transactionArray').split(',')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Body style={{ margin: \"30px 10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Why do you want to cancel this transaction?</Form.Label>\r\n                            <Form.Control type=\"email\" name=\"noteText\" placeholder=\"Add a short note\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" disabled={disabled} onClick={createNote}>\r\n                        Send\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={edit} onHide={handleCloseEdit} >\r\n                <Modal.Header style={{ margin: \"40px 10px 0px 15px\" }}>\r\n                    Edit {transactionUserName}'s transaction amount\r\n                </Modal.Header>\r\n                <Modal.Body style={{ margin: \"10px\" }}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Enter the amount</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"amount\" placeholder=\"Enter amount\" onChange={handleChangeAmount} style={{ width: \"80%\" }} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={editUserAmount}>\r\n                        Edit\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleCloseEdit}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {activePayment && activePayment.map((item, index) => (\r\n                <tr>\r\n                    {mark===false && (\r\n                        <>\r\n                            <td><input onClick={selectAll(item._id)} type=\"checkbox\" /></td>\r\n                        </>\r\n                    )}\r\n                    {mark===true && restart===false &&(\r\n                        <>\r\n                            <td><input onClick={selectAll(item._id)} type=\"checkbox\" checked={false} value={true}/></td>\r\n                        </>\r\n                    )}\r\n                    {mark===true && restart===true &&(\r\n                        <>\r\n                            <td><input onClick={selectAll(item._id)} type=\"checkbox\" /></td>\r\n                        </>\r\n                    )}\r\n\r\n\r\n                    <td>{(paginates - 1) * parseInt(postsPerPages) + index + 1}</td>\r\n                    <td>{item.userId?.userIdNo}</td>\r\n                    <td>{item.paymentType}</td>\r\n                    <td>{item.transactionID}</td>\r\n                    <td>{item.mobileNumber}</td>\r\n                    <td><div className='d-flex justify-content-around'>\r\n                        <div>{item.amount}</div>\r\n                        <div className=\"ml-2\"><BsPencilSquare style={{ fontSize: 'x-large', cursor: \"pointer\" }} onClick={modalOpen2(item._id, item.userId?._id, item.userId?.username, item.amount)} /></div>\r\n                    </div></td>\r\n                    <td>{moment(item.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={markComplete(item._id, item.transactionID, item.amount, item.userId?.phonenumber)}>Mark as Complete</button>\r\n                    </td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={modalOpen(item._id, item.userId?._id, item.userId?.username, item.amount, item.transactionID)}>Cancel</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React, { useState, useEffect } from 'react';\r\nimport { Card, Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { findAllWallet, filterTransaction,markAllPurchaseComplete } from '../Api/addWallet';\r\nimport { findAllPaymentMethod } from '../Api/paymentMethod';\r\nimport { userInfo } from '../utils/auth';\r\nimport Pagination from \"./Pagination\";\r\nimport Tables from \"./CompletePurchacheTable\";\r\nimport Tabless from \"./ActivePurchacheTable\";\r\nimport Tablesss from \"./CancelPurchacheTable\";\r\nimport {markAllComplete} from \"../Api/order\";\r\nimport {notify} from \"../utils/notification\";\r\nlet search = false, filter = false, search2 = false, filter2 = false, srchTerm;\r\nlet both = false, filterFunctionActive = false;\r\nlet activePaymentFilterBoth = [], completePaymentFilterBoth = [], cancelPaymentFilterBoth = [];\r\nlet totalActive, totalComplete, totalCancel, type, filterPaymentTypeActive = false, filtersBoth = false;\r\nlet buttonAllActive = false,mark=false;\r\n\r\nconst PurchaseApprove = () => {\r\n    const [activePayment, setActivePayment] = useState([]);\r\n    const [activePaymentSearch, setActivePaymentSearch] = useState([]);\r\n    const [activePaymentFilter, setActivePaymentFilter] = useState([]);\r\n    const [activePaymentFilter2, setActivePaymentFilter2] = useState([]);\r\n\r\n    const [completePayment, setCompletePayment] = useState([]);\r\n    const [completePaymentFilter, setCompletePaymentFilter] = useState([]);\r\n\r\n    const [cancelledPayment, setCancelledPayment] = useState([]);\r\n    const [cancelledPaymentFilter, setCancelledPaymentFilter] = useState([]);\r\n\r\n\r\n    const [allPaymentMethod, setAllPaymentMethod] = useState([]);\r\n    const [checked, setChecked] = useState([]);\r\n    const checkedIds = [...checked];\r\n\r\n    const rowSelectRorActivePayment = (e) => {\r\n        setPostsPerPages(e.target.value)\r\n    }\r\n\r\n    const rowSelectForCompletePayment = (e) => {\r\n        setPostsPerPage(e.target.value)\r\n    }\r\n\r\n    const rowSelectForCancelPayment = (e) => {\r\n        setPostsPerPagess(e.target.value)\r\n    }\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage,setPostsPerPage] = useState(10);\r\n    const [currentPages, setCurrentPages] = useState(1);\r\n    const [postsPerPages,setPostsPerPages] = useState(10);\r\n    const [currentPagess, setCurrentPagess] = useState(1);\r\n    const [postsPerPagess,setPostsPerPagess] = useState(10);\r\n\r\n    const [active, setActive] = useState(0);\r\n    const [complete, setComplete] = useState(0);\r\n    const [cancel, setCancel] = useState(0);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [filters, setFilters] = useState({\r\n        paymentType: []\r\n    })\r\n\r\n    const { token } = userInfo();\r\n\r\n    useEffect(() => {\r\n        findAllWallet(token)\r\n            .then(response => {\r\n                const complete = response.data && response.data.filter(filteredData => filteredData.isComplete === true)\r\n                setCompletePayment(complete)\r\n                totalComplete = complete.length\r\n                const cancel = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true)\r\n                setCancelledPayment(cancel)\r\n                totalCancel = cancel.length\r\n            })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        findAllWallet(token)\r\n            .then(response => {\r\n                const active = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n                setActivePayment(active)\r\n                totalActive = active.length\r\n            })\r\n    }, [activePayment])\r\n\r\n\r\n    const findActivePayment =  () => {\r\n         findAllWallet(token)\r\n            .then(response => {\r\n                const active = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n                setActivePayment(active)\r\n            })\r\n    }\r\n\r\n    const findCompletePayment =  () => {\r\n         findAllWallet(token)\r\n            .then(response => {\r\n                const complete = response.data && response.data.filter(filteredData => filteredData.isComplete === true)\r\n                setCompletePayment(complete)\r\n            })\r\n    }\r\n\r\n    const findCancelledPayment =  () => {\r\n         findAllWallet(token)\r\n            .then(response => {\r\n                const cancel = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true)\r\n                if (filterPaymentTypeActive === false) {\r\n                    setCancelledPayment(cancel)\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        findAllPaymentMethod()\r\n            .then(res => setAllPaymentMethod(res.data))\r\n    }, [])\r\n\r\n\r\n\r\n    if (filter2 === true && search2 === true) {\r\n        filtersBoth = true\r\n        const result = completePaymentFilter.filter((item) =>\r\n            item.userId?.username?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            item.paymentType?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            item.transactionID?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.mobileNumber)).toString()).includes(srchTerm) ||\r\n            ((parseInt(item.amount)).toString()).includes(srchTerm) ||\r\n            ((parseInt(item.userId?.userIdNo)).toString()).includes(srchTerm)\r\n        )\r\n        completePaymentFilterBoth = result\r\n\r\n        const result2 = activePaymentFilter2.filter((item) =>\r\n            item.userId?.username?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            item.paymentType?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            item.transactionID?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.mobileNumber)).toString()).includes(srchTerm) ||\r\n            ((parseInt(item.amount)).toString()).includes(srchTerm) ||\r\n            ((parseInt(item.userId?.userIdNo)).toString()).includes(srchTerm)\r\n        )\r\n        activePaymentFilterBoth = result2\r\n\r\n        const result3 = cancelledPaymentFilter.filter((item) =>\r\n            item.userId?.username?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            item.paymentType?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            item.transactionID?.toLowerCase().includes(srchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.mobileNumber)).toString()).includes(srchTerm) ||\r\n            ((parseInt(item.amount)).toString()).includes(srchTerm) ||\r\n            ((parseInt(item.userId?.userIdNo)).toString()).includes(srchTerm)\r\n        )\r\n        cancelPaymentFilterBoth = result3\r\n        both = true\r\n        search = ''\r\n        filter = ''\r\n    }\r\n\r\n    const handleFilters = (myfilters) => {\r\n        const newFilters = { ...filters };\r\n        newFilters[\"paymentType\"] = myfilters;\r\n        setFilters(newFilters);\r\n        filterTransaction(newFilters)\r\n            .then(response => {\r\n                const active = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n                setActivePaymentFilter(active)\r\n                setActivePaymentFilter2(active)\r\n                const complete = response.data && response.data.filter(filteredData => filteredData.isComplete === true)\r\n                setCompletePayment(complete)\r\n                setCompletePaymentFilter(complete)\r\n                const cancel = response.data && response.data.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true)\r\n                setCancelledPayment(cancel)\r\n                setCancelledPaymentFilter(cancel)\r\n\r\n            })\r\n\r\n    }\r\n\r\n    const filterPaymentType =  () => {\r\n         handleFilters(checkedIds)\r\n    }\r\n\r\n    const handleToogle = paymentType => () => {\r\n        type = paymentType;\r\n        filterPaymentTypeActive = true\r\n        const foundId = checked.indexOf(paymentType);\r\n        if (foundId === -1) {\r\n            checkedIds.push(paymentType);\r\n        } else {\r\n            checkedIds.splice(foundId, 1);\r\n        }\r\n        if (checkedIds.length === 0) {\r\n            filter = false\r\n            filterPaymentTypeActive = false\r\n            if (srchTerm === undefined) {\r\n                search = false\r\n            }\r\n            else {\r\n                search = true\r\n                both = false\r\n            }\r\n            filter2 = false\r\n        }\r\n        else {\r\n            filter = true\r\n            search = ''\r\n            filter2 = true\r\n            both = false\r\n        }\r\n        setChecked(checkedIds);\r\n        handleFilters(checkedIds)\r\n\r\n    }\r\n\r\n    if (localStorage.getItem('transactionArray') != null) {\r\n        buttonAllActive = localStorage.getItem('transactionArray').length !== 0;\r\n    }\r\n\r\n    if (!localStorage.getItem('transactionArray')) {\r\n        buttonAllActive = false\r\n    }\r\n\r\n    const markAll = () => {\r\n        mark=true\r\n         const myArray = localStorage.getItem('transactionArray').split(\",\");\r\n        markAllPurchaseComplete(token, myArray)\r\n            .then(res => {\r\n                localStorage.setItem(\"transactionArray\", [])\r\n                notify(\"Transaction Confirmed!\")\r\n                mark=false;\r\n                findActivePayment()\r\n                findCompletePayment()\r\n                if (filterFunctionActive === true) {\r\n                    filterPayment()\r\n                }\r\n                if (filterPaymentTypeActive === true) {\r\n                    filterPaymentType()\r\n                }\r\n                filtersBoth()\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"transactionArray\", [])\r\n    }, [])\r\n\r\n\r\n    const filterPayment = async () => {\r\n        if (srchTerm != undefined) {\r\n            await findAllWallet(token)\r\n                .then(res => {\r\n                    if (res.data) {\r\n                        filterContent(res.data, srchTerm)\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const searchPayment = (e) => {\r\n        let searchTerm = e.currentTarget.value\r\n        srchTerm = searchTerm\r\n        filterFunctionActive = true;\r\n        if (searchTerm === undefined) {\r\n            search = false\r\n            search2 = false\r\n            filterFunctionActive = false\r\n        }\r\n        else {\r\n            search = true\r\n            search2 = true\r\n        }\r\n        findAllWallet(token)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    filterContent(res.data, searchTerm)\r\n                }\r\n            })\r\n    }\r\n\r\n    const filterContent = (payments, searchTerm) => {\r\n        const result = payments.filter((item) =>\r\n            item.userId?.username?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.paymentType?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            item.transactionID?.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            ((parseInt(item.mobileNumber)).toString()).includes(searchTerm) ||\r\n            ((parseInt(item.amount)).toString()).includes(searchTerm) ||\r\n            ((parseInt(item.userId?.userIdNo)).toString()).includes(srchTerm)\r\n        )\r\n\r\n        let value = result.filter(filteredData => filteredData.isComplete === true)\r\n        setCompletePayment(value)\r\n\r\n\r\n        let value2 = result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === false)\r\n        setActivePaymentSearch(value2)\r\n\r\n        let value3 = result.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true)\r\n        setCancelledPayment(value3)\r\n    }\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = completePayment.slice(indexOfFirstPost, indexOfLastPost);\r\n    const currentPostsFilterBoths = completePaymentFilterBoth.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const indexOfLastPosts = currentPages * postsPerPages;\r\n    const indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n    const currentPosts = activePayment.slice(indexOfFirstPosts, indexOfLastPosts);\r\n    const currentPostsSearch = activePaymentSearch.slice(indexOfFirstPosts, indexOfLastPosts);\r\n    const currentPostsFilter = activePaymentFilter.slice(indexOfFirstPosts, indexOfLastPosts);\r\n    const currentPostsFilterBoth = activePaymentFilterBoth.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n    const indexOfLastPostss = currentPagess * postsPerPagess;\r\n    const indexOfFirstPostss = indexOfLastPostss - postsPerPagess;\r\n    const currentPostss = cancelledPayment.slice(indexOfFirstPostss, indexOfLastPostss);\r\n    const currentPostsFilterBothss = cancelPaymentFilterBoth.slice(indexOfFirstPostss, indexOfLastPostss);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber)\r\n        setComplete(pageNumber)\r\n    }\r\n    const paginates = pageNumber => {\r\n        setCurrentPages(pageNumber)\r\n        setActive(pageNumber)\r\n    }\r\n    const paginatess = pageNumber => {\r\n        setCurrentPagess(pageNumber)\r\n        setCancel(pageNumber)\r\n    };\r\n\r\n    let selectArray = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\r\n\r\n    //console.log(postsPerPages,postsPerPage,postsPerPagess)\r\n\r\n    const setMark=()=>{\r\n        mark=false\r\n    }\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <div className='mt-3 mb-3 d-flex'>\r\n                    {allPaymentMethod && allPaymentMethod.map((item, i) => (\r\n                        <form key={i}>\r\n                            <input type=\"checkbox\" className='ml-2' onChange={handleToogle(item.name)} /> {item.name}\r\n                        </form>\r\n                    ))}\r\n                </div>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <div style={{ float: \"right\", width: \"300px\", marginBottom: \"10px\" }}>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                name=\"serachTerm\"\r\n                                onChange={searchPayment}\r\n                            >\r\n                            </input>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Active Payment</Card.Title>\r\n                                <p style={{ fontSize: \".8rem\" }} className=\"text-muted\">Total active payments: {totalActive}</p>\r\n                                {buttonAllActive && (\r\n                                    <>\r\n                                        <button className=\"btn btn-danger\" onClick={markAll}>Mark all as complete</button>\r\n                                    </>\r\n                                )}\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\"/>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">User ID</th>\r\n                                            <th scope=\"col\">Payment Type</th>\r\n                                            <th scope=\"col\">Transaction ID</th>\r\n                                            <th scope=\"col\">Mobile Number</th>\r\n                                            <th scope=\"col\">Amount</th>\r\n                                            <th scope=\"col\">Transaction date</th>\r\n                                            <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {search === true && (<>\r\n                                            <Tabless activePayment={currentPostsSearch} loading={loading} paginates={currentPages} findActivePayment={findActivePayment} findCompletePayment={findCompletePayment} findCancelledPayment={findCancelledPayment} filterPayment={filterPayment} filterFunctionActive={filterFunctionActive} filtersBoth={filtersBoth} postsPerPages={postsPerPages} setMark={setMark} mark={mark}/>\r\n                                        </>)}\r\n                                        {search === false && (<>\r\n                                            <Tabless  activePayment={currentPosts} loading={loading} paginates={currentPages} findActivePayment={findActivePayment} findCompletePayment={findCompletePayment} findCancelledPayment={findCancelledPayment} postsPerPages={postsPerPages} setMark={setMark} mark={mark}/>\r\n                                        </>)}\r\n                                        {filter === true && (<>\r\n                                            <Tabless activePayment={currentPostsFilter} loading={loading} paginates={currentPages} findActivePayment={findActivePayment} findCompletePayment={findCompletePayment} findCancelledPayment={findCancelledPayment} filterPaymentTypeActive={filterPaymentTypeActive} filterPaymentType={filterPaymentType} postsPerPages={postsPerPages} setMark={setMark} mark={mark}/>\r\n                                        </>)}\r\n                                        {both === true && (<>\r\n                                            <Tabless activePayment={currentPostsFilterBoth} loading={loading} paginates={currentPages} findActivePayment={findActivePayment} findCompletePayment={findCompletePayment} findCancelledPayment={findCancelledPayment} filtersBoth={filtersBoth} postsPerPages={postsPerPages} setMark={setMark} mark={mark}/>\r\n                                        </>)}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPages}\r\n                                        totalPosts={activePayment.length}\r\n                                        paginate={paginates}\r\n                                        Number={active}\r\n                                    />\r\n                                    {activePayment.length > 0 && (\r\n                                        <div className='ml-5' >\r\n                                            <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectRorActivePayment(e)}>\r\n                                                {selectArray.map(number => {\r\n                                                    return (\r\n                                                        <option value={number} >{number}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Complete Payment</Card.Title>\r\n                                <p style={{ fontSize: \".8rem\" }} className=\"text-muted\">Total complete payments: {totalComplete}</p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">User ID</th>\r\n                                            <th scope=\"col\">Payment Type</th>\r\n                                            <th scope=\"col\">Transaction ID</th>\r\n                                            <th scope=\"col\">Mobile Number</th>\r\n                                            <th scope=\"col\">Amount</th>\r\n                                            <th scope=\"col\">Transaction date</th>\r\n                                            <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {both === false && (<>\r\n                                            <Tables completePayment={currentPost} loading={loading} paginate={currentPage} postsPerPage={postsPerPage}/>\r\n                                        </>)}\r\n\r\n                                        {both === true && (<>\r\n                                            <Tables completePayment={currentPostsFilterBoths} loading={loading} paginate={currentPage} postsPerPage={postsPerPage}/>\r\n                                        </>)}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPage}\r\n                                        totalPosts={completePayment.length}\r\n                                        paginate={paginate}\r\n                                        Number={complete}\r\n                                    />\r\n                                    {completePayment.length > 0 && (\r\n                                        <div className='ml-5' >\r\n                                            <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForCompletePayment(e)}>\r\n                                                {selectArray.map(number => {\r\n                                                    return (\r\n                                                        <option value={number} >{number}</option>\r\n                                                    )\r\n                                                })}\r\n                                            </select>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Card className=\"strpied-tabled-with-hover\">\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h4\">Cancelled Payment</Card.Title>\r\n                                <p style={{ fontSize: \".8rem\" }} className=\"text-muted\">Total cancelled payments: {totalCancel}</p>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"table-full-width table-responsive px-0\">\r\n                                <Table className=\"table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">#</th>\r\n                                            <th scope=\"col\">User ID</th>\r\n                                            <th scope=\"col\">Payment Type</th>\r\n                                            <th scope=\"col\">Transaction ID</th>\r\n                                            <th scope=\"col\">Mobile Number</th>\r\n                                            <th scope=\"col\">Amount</th>\r\n                                            <th scope=\"col\">Transaction date</th>\r\n                                            <th scope=\"col\">Cancel Reason</th>\r\n                                            <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {both === false && (<>\r\n                                            <Tablesss cancelledPayment={currentPostss} loading={loading} paginatess={currentPagess} findActivePayment={findActivePayment} findCancelledPayment={findCancelledPayment} filterPayment={filterPayment} filterFunctionActive={filterFunctionActive} filterPaymentTypeActive={filterPaymentTypeActive} filterPaymentType={filterPaymentType} postsPerPagess={postsPerPagess}/>\r\n                                        </>)}\r\n\r\n                                        {both === true && (<>\r\n                                            <Tablesss cancelledPayment={currentPostsFilterBothss} loading={loading} paginatess={currentPagess} findActivePayment={findActivePayment} findCancelledPayment={findCancelledPayment} postsPerPagess={postsPerPagess}/>\r\n                                        </>)}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <div className='d-flex'>\r\n                                    <Pagination\r\n                                        postsPerPage={postsPerPagess}\r\n                                        totalPosts={cancelledPayment.length}\r\n                                        paginate={paginatess}\r\n                                        Number={cancel}\r\n                                    />\r\n                                    {cancelledPayment.length > 0 && (\r\n                                        <>\r\n                                            <div className='ml-5' >\r\n                                                <select style={{ cursor: 'pointer' }} onChange={(e) => rowSelectForCancelPayment(e)}>\r\n                                                    {selectArray.map(number => {\r\n                                                        return (\r\n                                                            <option value={number} >{number}</option>\r\n                                                        )\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default PurchaseApprove","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const addWallet = (token,data) => {\r\n    return axios.post(`${API}admin/addwallet`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const findAllWallet = (token) => {\r\n    return axios.get(`${API}admin/addwallet/`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const updateAddWallet = (token,id,data) => {\r\n    return axios.put(`${API}admin/addwallet/${id}`,data,{\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const findOneWallet = (token,id) => {\r\n    return axios.get(`${API}admin/addwallet/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const findTransactionById = (token,id) => {\r\n    return axios.get(`${API}admin/addwallet/transaction/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getTransactions = (token,id) => {\r\n    return axios.get(`${API}admin/addwallet/${id}`,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const filterTransaction = (filters = {}) => {\r\n    const data = {\r\n        filters: { ...filters }\r\n    }\r\n    return axios.post(`${API}admin/addwallet/filter/product`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const editBalance = (token,id,amount) => {\r\n    const data={\r\n        amount:amount\r\n    }\r\n    return axios.put(`${API}admin/addwallet/editAmount/${id}`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const markAllPurchaseComplete = (token,data) => {\r\n    return axios.put(`${API}admin/addwallet/mark/All`,data,{\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\":`Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n","import React from 'react';\r\nimport moment from \"moment\";\r\nimport {BsPencilSquare} from \"react-icons/bs\";\r\n\r\nconst OrderTables = ({completePayment, loading,  paginate,postsPerPage }) => {\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n    return (\r\n        <>\r\n            {completePayment && completePayment.filter(filteredData => filteredData.isComplete === true).map((item, index) => (\r\n                <tr>\r\n                    <td>{(paginate-1)*parseInt(postsPerPage)+ index + 1}</td>\r\n                    <td>{item.userId?.userIdNo}</td>\r\n                    <td>{item.paymentType}</td>\r\n                    <td>{item.transactionID}</td>\r\n                    <td>{item.mobileNumber}</td>\r\n                    <td>{item.amount}</td>\r\n                    <td>{moment(item.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderTables;","import React, { useEffect, useState } from 'react';\r\nimport moment from \"moment\";\r\nimport { userInfo } from '../utils/auth';\r\nimport { createNotifications } from '../Api/notification';\r\nimport { updateAddWallet } from '../Api/addWallet';\r\nimport { notify } from '../utils/notification';\r\n\r\nconst CancelPurchacheTable = ({ cancelledPayment, loading, paginatess, findActivePayment, findCancelledPayment, filterPayment, filterFunctionActive, filterPaymentTypeActive, filterPaymentType, postsPerPagess }) => {\r\n    const { token, id } = userInfo();\r\n    if (loading) {\r\n        return <h2>Loading...</h2>;\r\n    }\r\n\r\n    const [disabledButton, setDisabledButton] = useState({\r\n        disabled: false,\r\n    });\r\n\r\n    const { disabled } = disabledButton\r\n\r\n    const makeActive = (tranId, userId, transactionID) => () => {\r\n        setDisabledButton({\r\n            disabled: true\r\n        })\r\n        let data = {\r\n            reject: false,\r\n            rejectReason: null\r\n        }\r\n        updateAddWallet(token, tranId, data)\r\n            .then(res => {\r\n                createNotifications(token, userId, `Your transaction has been reactive for TransactionId:${transactionID}`)\r\n                    .then(res => {\r\n                        notify('Transaction reactive successfully!')\r\n                        findCancelledPayment()\r\n                        findActivePayment()\r\n                        if (filterFunctionActive === true) {\r\n                            filterPayment()\r\n                        }\r\n                        if (filterPaymentTypeActive === true) {\r\n                            filterPaymentType()\r\n                        }\r\n\r\n                        setDisabledButton({\r\n                            disabled: false\r\n                        })\r\n                    })\r\n                    .catch(res => {\r\n                        setDisabledButton({\r\n                            disabled: false\r\n                        })\r\n                    })\r\n            })\r\n            .catch(res => {\r\n                notify('Something wrong! Please try again')\r\n                setDisabledButton({\r\n                    disabled: false\r\n                })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {cancelledPayment && cancelledPayment.filter(filteredData => filteredData.isComplete === false && filteredData.reject === true).map((item, index) => (\r\n                <tr>\r\n                    <td>{(paginatess - 1) * parseInt(postsPerPagess) + index + 1}</td>\r\n                    <td>{item.userId?.userIdNo}</td>\r\n                    <td>{item.paymentType}</td>\r\n                    <td>{item.transactionID}</td>\r\n                    <td>{item.mobileNumber}</td>\r\n                    <td>{item.amount}</td>\r\n                    <td>{moment(item.createdAt).format('DD-MM-YYYY, h:mm a')}</td>\r\n                    <td>{item.rejectReason}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-primary\" disabled={disabled} onClick={makeActive(item._id, item.userId?._id, item.transactionID)}>Make Active</button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CancelPurchacheTable;","export default __webpack_public_path__ + \"static/media/logo.18ca7585.png\";","import * as React from 'react';\r\nimport {styled, alpha} from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Badge from '@mui/material/Badge';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MoreIcon from '@mui/icons-material/MoreVert'\r\nimport Logo from \"../../../assets/img/logo.png\"\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {\r\n    AiFillWallet, AiOutlineLogout,\r\n    AiOutlineNotification,\r\n    AiOutlineShoppingCart,\r\n    AiOutlineUser,\r\n    AiOutlineWallet\r\n} from \"react-icons/ai\";\r\nimport {BiSupport} from \"react-icons/bi\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {isAuthenticated, userInfo} from \"../../../utils/auth\";\r\nimport {getNotifications} from \"../../../Api/notification\";\r\nimport {deleteAllProduct, removeJwt, updateUserActiveStatus} from \"../../../Api/user\";\r\nimport {Button} from \"@mui/material\";\r\nimport {getProducts} from \"../../../Api\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Search = styled('div')(({theme}) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({theme}) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({theme}) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n    const [viewNotifications, setViewNotifications] = useState([]);\r\n    const [notifications, setNotifications] = useState([]);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated()) {\r\n            const {token, id} = userInfo();\r\n            getNotifications(token, id)\r\n                .then(res => {\r\n                    if (res.data[0]) {\r\n                        setNotifications(res.data[0].notifications)\r\n                        setViewNotifications(res.data[0].view)\r\n                    }\r\n                })\r\n        }\r\n\r\n    }, []);\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        removeJwt()\r\n        updateUserActiveStatus('inActive')\r\n        deleteAllProduct()\r\n        handleMenuClose()\r\n        localStorage.clear()\r\n        history.push({\r\n            pathname: '/'\r\n        });\r\n    }\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem as={Link} to='/profile' eventKey=\"1\" onClick={handleMenuClose}><Link\r\n                to='profile'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineUser/></div>\r\n                    <div className=\"ml-2\"> My Profile</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem as={Link} to='userWallet' eventKey=\"2\" onClick={handleMenuClose}><Link\r\n                to='userWallet'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineWallet/></div>\r\n                    <div className=\"ml-2\"> My Wallet</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem onClick={handleMenuClose} as={Link} to='notification' eventKey=\"2\"><Link\r\n                to='notification'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineNotification/>\r\n                    </div>\r\n                    <div className=\"ml-2\">notification\r\n                        {viewNotifications === false && <>\r\n                            <i className=\"fas fa-circle\" style={{fontSize: \".5rem\", color: \"blue\"}}/>\r\n                        </>}\r\n\r\n                    </div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem onClick={handleMenuClose} as={Link} to='confirmation' eventKey=\"3\"><Link\r\n                to='confirmation'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiFillWallet/></div>\r\n                    <div className=\"ml-2\">Add Wallet</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem onClick={handleMenuClose} as={Link} to='myOrder' eventKey=\"4\"><Link\r\n                to='myOrder'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineShoppingCart/>\r\n                    </div>\r\n                    <div className=\"ml-2\">My Order</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem onClick={handleMenuClose} as={Link} to='support' eventKey=\"5\"><Link\r\n                to='support'>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><BiSupport/></div>\r\n                    <div className=\"ml-2\">Support</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n            <MenuItem as={Link} to='/' eventKey=\"6\" onClick={handleMenuClose}><Link\r\n                to='/' onClick={logout}>\r\n                <div className=\"d-flex\">\r\n                    <div style={{marginTop: '2px'}}><AiOutlineLogout/></div>\r\n                    <div className=\"ml-2\">Logout</div>\r\n                </div>\r\n            </Link></MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    size=\"large\"\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle/>\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    useEffect(() => {\r\n        getProducts()\r\n            .then((res) => {\r\n                let allData = res.data\r\n                setProducts(allData)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n    const [searchBar, setSearchBar] = useState({\r\n        product: ''\r\n    })\r\n    const [products, setProducts] = useState([])\r\n    const {product} = searchBar\r\n\r\n    const handleSearch = e => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    function setSearchItem(e) {\r\n        setSearchBar({\r\n            ...searchBar,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    let result\r\n    const history = useHistory();\r\n    let redirect = false\r\n    const filterContent = (e) => {\r\n        let searchTerm = product\r\n        result = products.filter((order) =>\r\n            order.gameName && order.gameName.toLowerCase().includes(searchTerm.toLocaleLowerCase()) ||\r\n            order.categoryName?.toLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n        );\r\n\r\n        history.push({\r\n            pathname: '/search-result',\r\n            state: result\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            {redirect && <Redirect to='/search-result'\r\n            ><Search data={result}/></Redirect>}\r\n            <AppBar position=\"static\" style={{backgroundColor: '#004d25'}}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        sx={{mr: 2, flexGrow:.1}}\r\n                        as={Link} to='/'\r\n                    >\r\n                        <img src={Logo} alt='ads' width='100px'/>\r\n                    </IconButton>\r\n                    <Box sx={{flexGrow: 1}} className=\" px-12 hidden md:block\">\r\n                        <div className=\"w-full\">\r\n                            <form onSubmit={handleSearch}>\r\n                                <div className=\"relative overflow-hidden\">\r\n                                    <input type=\"text\"\r\n                                           style={{borderColor: \"white\"}}\r\n                                           placeholder=\"Search..\"\r\n                                           className=\"w-full border-[3px] rounded text-lg text-gray-800 font-normal py-1.5 px-4 pr-[110px] focus:outline-none\"\r\n                                        //className=\"w-full border-[3px] border-primary-500 rounded text-lg text-gray-800 font-normal py-1.5 px-4 pr-[110px] focus:outline-none focus:border-primary-300\"\r\n                                           name=\"product\" value={product}\r\n                                           onChange={(e) => setSearchItem(e)}/>\r\n                                    <input type=\"submit\" value=\"Search\"\r\n                                           style={{backgroundColor: '#004d25', border: '2px solid white'}}\r\n                                           className=\"absolute top-1/2 right-[2px] -translate-y-1/2 w-[100px]  duration-100  flex items-center  justify-center text-white font-normal text-lg cursor-pointer abc \"\r\n                                           onClick={e => filterContent(e)}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Box>\r\n                    <Box sx={{display: {xs: 'none', md: 'flex'}, flexGrow: .05}}>\r\n                        {!isAuthenticated() && (<Box style={{position: \"relative\", right: '0%'}}>\r\n                            <Button\r\n                                style={{color: 'white', borderColor: \"white\", padding: 5, fontSize: 15, marginLeft: 50}}\r\n                                color=\"success\" variant=\"outlined\"> <Link to='/login' aria-current=\"page\"\r\n                                                                          data-v-70c6da4e>Login </Link></Button>\r\n                            <Button\r\n                                style={{color: 'white', borderColor: \"white\", padding: 5, fontSize: 15, marginLeft: 20}}\r\n                                color=\"success\" variant=\"outlined\"> <Link to='/registration' data-v-70c6da4e>Sign\r\n                                Up </Link></Button>\r\n                        </Box>)}\r\n                        {isAuthenticated() && (\r\n                            <IconButton\r\n                                size=\"large\"\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle/>\r\n                            </IconButton>\r\n                        )}\r\n\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: {xs: 'flex', md: 'none', marginLeft: 120}, flexGrow: 1}}>\r\n\r\n                        {!isAuthenticated() && (<>\r\n                            <li className=\"hidden xs:block\" data-v-70c6da4e>\r\n                                <Link to='/login' aria-current=\"page\" data-v-70c6da4e>Login </Link>\r\n                            </li>\r\n                            <li data-v-70c6da4e><Link to='/registration' data-v-70c6da4e>Sign Up </Link>\r\n                            </li>\r\n                        </>)}\r\n                        {isAuthenticated() && (\r\n                            <IconButton\r\n                                sx={{flexGrow: 1}}\r\n                                size=\"large\"\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle/>\r\n                            </IconButton>\r\n                        )}\r\n\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </Box>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { registration } from '../Api/auth';\r\nimport \"../components/User/User.css\"\r\nimport { notify } from '../utils/notification'\r\nimport NavBar from \"../layouts/NavBar\";\r\nimport Footer from \"../components/Main/Footer\";\r\nimport animationData from \"../assets/lotte/50124-user-profile.json\";\r\nimport Lottie from \"react-lottie\";\r\n\r\nconst setPasswordAlert = () => {\r\n    notify('Password Miss-matched')\r\n}\r\n\r\nfunction UserCreate() {\r\n\r\n    const [user, setUser] = useState('');\r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        phonenumber: '',\r\n        password: '',\r\n        role: '',\r\n        success: false,\r\n        error: false,\r\n        disabled: false\r\n    });\r\n\r\n    const { username, email, password, phonenumber, role, success,disabled, error, repassword } = values;\r\n\r\n    const handleChange = e => {\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        if (e.target.name === 'role') {\r\n            setUser(e.target.value)\r\n        }\r\n    }\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: \"xMidYMid slice\"\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValues({ ...values, error: false,disabled: true });\r\n        if (password === repassword) {\r\n            registration({ username, email, phonenumber, role, password })\r\n                .then(response => {\r\n                    notify(`${role[0].toUpperCase() + role.slice(1)} created Successfully`)\r\n                    setValues({\r\n                        username: '',\r\n                        email: '',\r\n                        phonenumber: '',\r\n                        password: '',\r\n                        repassword: '',\r\n                        success: true,\r\n                        error: false,\r\n                        disabled: false,\r\n                    })\r\n                    setUser({\r\n                        user: ''\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    let errMsg = 'Something went wrong!';\r\n                    if (err.response) {\r\n                        errMsg = err.response.data;\r\n                    } else {\r\n                        errMsg = 'Something went wrong!';\r\n                    }\r\n                    setValues({ ...values, error: errMsg,disabled: false, })\r\n                })\r\n        }\r\n        else {\r\n            setPasswordAlert()\r\n        }\r\n\r\n    }\r\n\r\n    const signUpForm = () => (\r\n        <>\r\n           \r\n            <div className=\"mx-auto\" data-v-791b20d9>\r\n                <div data-v-791b20d9>\r\n                    <div data-v-791b20d9>\r\n                        <div\r\n                            className=\"min-w-screen bg-gray-200 flex items-center justify-center md:px-5 py-10 md:py-6\">\r\n                            <div className=\"bg-white text-gray-500 w-full overflow-hidden\">\r\n                                <div className=\"md:flex w-full\">\r\n\r\n                                    <div className=\"w-full md:w-2/3 py-10 px-5 md:px-10 relative\">\r\n                                        <div className=\"text-center mb-10\">\r\n                                            <h1 className=\"text-xl md:text-2xl font-bold leading-tight text-gray-900 text-left\">\r\n                                                Create new User\r\n                                            </h1>\r\n                                        </div>\r\n\r\n                                        <form onSubmit={handleSubmit}>\r\n                                            <div className=\"flex -mx-3 flex-wrap\">\r\n                                                <div className=\"w-full md:w-1/2 px-3 mb-5\">\r\n                                                    <div><label className=\"block text-gray-700\">Username</label> <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter Username\" autoFocus=\"autofocus\" autoComplete\r\n                                                        name=\"username\"\r\n                                                        value={username}\r\n                                                        className=\"tw_form_input\" required onChange={handleChange} />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div className=\"w-full md:w-1/2 px-3 mb-5\">\r\n                                                    <div><label className=\"block text-gray-700\">Phone Number</label> <input\r\n                                                        placeholder=\"Phone Number\" autoFocus=\"autofocus\" autoComplete\r\n                                                        type=\"tel\" value={phonenumber} name=\"phonenumber\"\r\n                                                        className=\"tw_form_input\" required onChange={handleChange} />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex -mx-3\">\r\n                                                <div className=\"w-full px-3 mb-5\">\r\n                                                    <div><label className=\"block text-gray-700\">Email</label> <input\r\n                                                        type=\"email\"\r\n                                                        placeholder=\"Enter Email\" autoComplete value={email}\r\n                                                        name=\"email\" required onChange={handleChange}\r\n                                                        className=\"tw_form_input\" /></div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex -mx-3\">\r\n                                                <div className=\"w-full px-3 mb-5\">\r\n                                                    <div>\r\n                                                        <label className=\"block text-gray-700\">Role</label>\r\n                                                        <input type=\"radio\" id=\"html\" name=\"role\" value=\"admin\" checked={user === 'admin'} onChange={handleChange} />Admin\r\n                                                        <input type=\"radio\" id=\"html\" name=\"role\" value=\"user\" checked={user === 'user'} className='ml-3' onChange={handleChange} />User\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex flex-wrap -mx-3\">\r\n                                                <div className=\"w-full md:w-1/2 px-3 mb-5\">\r\n                                                    <div><label className=\"block text-gray-700\">Password</label> <input\r\n                                                        type=\"password\"\r\n                                                        placeholder=\"Enter Password\" autoComplete value={password}\r\n                                                        name=\"password\" required onChange={handleChange}\r\n                                                        className=\"tw_form_input\" /></div>\r\n\r\n                                                </div>\r\n                                                <div className=\"w-full md:w-1/2 px-3 mb-5\">\r\n                                                    <div>\r\n                                                        <label className=\"block text-gray-700\">Confirm Password</label>\r\n                                                        <input type=\"password\"\r\n                                                            placeholder=\"Re Enter Password\" autoComplete value={repassword}\r\n                                                            name=\"repassword\" required onChange={handleChange}\r\n                                                            className=\"tw_form_input\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex -mx-3\">\r\n                                                <div className=\"w-full px-3 mb-5\">\r\n                                                    <button type=\"submit\" disabled={disabled} className=\"w-full block bg-primary-500 hover:bg-primary-400 focus:bg-primary-400 text-white font-semibold rounded-lg px-4 py-3 mt-6\">\r\n                                                        Create User\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div style={{marginTop : \"100Px\"}}>\r\n                                        <Lottie\r\n                                            options={defaultOptions}\r\n                                            height={500}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n\r\n    const showError = (error) => {\r\n        if (error) return (\r\n            notify(`${error}`)\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showError(error)}\r\n            {signUpForm()}\r\n            <hr />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserCreate;\r\n","import axios from \"axios\";\r\nimport {API} from '../utils/config';\r\n\r\nexport const login = (user) => {\r\n    console.log(user)\r\n    return axios.post(`${API}admin/login`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n};\r\n\r\nconst googleLogin = async (code) => {\r\n    return axios.post(`${API}auth/google`, code, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n    // console.log(code)\r\n    // return fetch('/api/auth/google', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //     },\r\n    //     body: JSON.stringify({ code }),\r\n    // }).then((res) => {\r\n    //     if (res.ok) {\r\n    //         return res.json();\r\n    //     } else {\r\n    //         return Promise.reject(res);\r\n    //     }\r\n    // });\r\n};\r\n\r\nexport { googleLogin };\r\n\r\nexport const registration = (user) => { \r\n    return axios.post(`${API}admin/register`, user, { \r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n};\r\n\r\nexport const forgotPassword = (user) => {\r\n    return axios.post(`${API}admin/forgotPassword`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}\r\n\r\nexport const resetPassword = (user) => {\r\n    const token = user.token\r\n    return axios.put(`${API}admin/resetPassword/${token}`, user, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { getSupportMessage, markSupport } from '../Api/support'\r\nimport { userInfo } from '../utils/auth';\r\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { notify } from '../utils/notification';\r\n\r\nfunction Support() {\r\n    const [support, setSupport] = useState([]);\r\n    const { token } = userInfo();\r\n\r\n    useEffect(() => {\r\n        getSupportMessage(token)\r\n            .then(res => setSupport(res.data))\r\n    }, [support])\r\n\r\n\r\n    const markResolved = (id) =>()=> {\r\n        markSupport(id)\r\n            .catch(err => {\r\n                notify('Something went wrong!')\r\n            })\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {support && support.map((data, index) => (\r\n                <Card key={index}>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col>\r\n                                <p>Name: {data.name}</p>\r\n                                <p>Email: {data.email}</p>\r\n                                <p>Phone No: {data.phone}</p>\r\n                            </Col>\r\n                            <Col>\r\n                                <p>requestType: {data.requestType}</p>\r\n                                <p>Message: {data.requestDescription}</p>\r\n                                <p>Date :{moment(data.createdAt).format('MMMM Do, YYYY, h:mm:ss a')}</p>\r\n                            </Col>\r\n                            <Col>\r\n                                <div className=\"font-bold\">Status</div>\r\n                                {data.active === true && (<>\r\n                                    <Button variant=\"danger\" onClick={markResolved(data._id)}>Mark as Resolved</Button>\r\n                                </>)}\r\n                                {data.active === false && (<>\r\n                                    <div style={{ color: '#01bf71',fontWeight:\"bold\" }}>Resolved</div>\r\n                                </>)}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Support;\r\n","import axios from \"axios\";\r\n\r\nimport { API } from \"../utils/config\";\r\n\r\nexport const createSupport = (token, id, data) => {\r\n    return axios.post(`${API}support/${id}`, data, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const getSupportMessage = (token) => {\r\n    return axios.get(`${API}support/`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const markSupport = (id) => {\r\n    return axios.put(`${API}support/${id}`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\" : \"*\",\r\n        }\r\n    })\r\n}","import React, {useState} from 'react';\r\n\r\nlet array = [];\r\nlet userIds = []\r\nlet arrayItem=['1']\r\nlet restart=false\r\nconst sendSmsAll = ({sendSmsAll, paginate, postsPerPage, allClick, done}) => {\r\n\r\n    const selectAll = (userId) => () => {\r\n        restart=true\r\n        if (!localStorage.getItem('phoneNumberArray')) {\r\n            array = []\r\n            userIds = []\r\n        }\r\n        const foundId = array.indexOf(userId);\r\n        if (foundId === -1) {\r\n            array.push(userId);\r\n            localStorage.setItem(\"phoneNumberArray\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"phoneNumberArray\", array)\r\n        }\r\n        userIds = localStorage.getItem('phoneNumberArray').split(',')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {sendSmsAll && sendSmsAll.map((user, index) => (\r\n                <tr>\r\n                    {allClick === true && done === false && (\r\n                        <td><input onClick={selectAll(user.phonenumber)} type=\"checkbox\" checked={true} value={true}/>\r\n                        </td>\r\n                    )}\r\n                    {allClick===false &&  done===false &&(\r\n                        <td ><input onClick={selectAll(user.phonenumber)} type=\"checkbox\" /></td>\r\n                    )}\r\n                    {done===true &&(\r\n                        <td ><input onClick={selectAll(user.phonenumber)} type=\"checkbox\" checked={false} value={true}/></td>\r\n                    )}\r\n\r\n                    <td>{(paginate - 1) * parseInt(postsPerPage) + index + 1}</td>\r\n                    <td>{user.userIdNo}</td>\r\n                    <td>{user.username}</td>\r\n                    <td>{user.phonenumber}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default sendSmsAll;","import React, {useState} from 'react';\r\n\r\nlet array = [];\r\nlet userIds = []\r\nlet arrayItem=['1']\r\n\r\nconst sendSmsAll = ({sendSmsAll, paginate, postsPerPage, allActiveClick, activeDone}) => {\r\n\r\n    const selectAll = (userId) => () => {\r\n\r\n        if (!localStorage.getItem('activeUserPhoneNumberArray')) {\r\n            array = []\r\n            userIds = []\r\n        }\r\n        const foundId = array.indexOf(userId);\r\n        if (foundId === -1) {\r\n            array.push(userId);\r\n            localStorage.setItem(\"activeUserPhoneNumberArray\", array)\r\n        } else {\r\n            array.splice(foundId, 1);\r\n            localStorage.setItem(\"activeUserPhoneNumberArray\", array)\r\n        }\r\n        userIds = localStorage.getItem('activeUserPhoneNumberArray').split(',')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {sendSmsAll && sendSmsAll.map((user, index) => (\r\n                <tr>\r\n                    {allActiveClick === true && activeDone === false && (\r\n                        <td><input onClick={selectAll(user.userId.phonenumber)} type=\"checkbox\" checked={true} value={true}/>\r\n                        </td>\r\n                    )}\r\n                    {allActiveClick===false &&  activeDone===false &&(\r\n                        <td ><input onClick={selectAll(user.userId.phonenumber)} type=\"checkbox\" /></td>\r\n                    )}\r\n                    {activeDone===true &&(\r\n                        <td ><input onClick={selectAll(user.userId.phonenumber)} type=\"checkbox\" /></td>\r\n                    )}\r\n                    <td>{(paginate - 1) * parseInt(postsPerPage) + index + 1}</td>\r\n                    <td>{user.userId.userIdNo}</td>\r\n                    <td>{user.userId.username}</td>\r\n                    <td>{user.userId.phonenumber}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default sendSmsAll;","import React, {useState, useEffect} from 'react';\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {Card} from \"antd\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"./sendSmsAll\";\r\nimport Tables from './sendSmsAllActive'\r\nimport {getAllUserList,getActiveUserList} from \"../Api/user\";\r\nimport {userInfo} from '../utils/auth';\r\nimport Pagination from \"./Pagination\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Button, Form, Modal} from \"react-bootstrap\";\r\nimport {sendMessageAllUser} from \"../Api/sendMessage\";\r\nimport {notify} from '../utils/notification';\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{p: 3}}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction SendSms() {\r\n    let history = useHistory();\r\n\r\n    const {token, role} = userInfo();\r\n\r\n    const [allUserList, setAllUserList] = useState([]);\r\n\r\n    const [activeUserList, setActiveUserList] = useState([]);\r\n\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const [user, setUser] = useState(0);\r\n\r\n    const [activeUser, setActiveUser] = useState(0);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const [show2, setShow2] = useState(false);\r\n\r\n    const [done, setDone] = useState(false);\r\n\r\n    const [activeDone, setActiveDone] = useState(false);\r\n\r\n    const [allClick, setAllClick] = useState(false);\r\n\r\n    const [allActiveClick, setAllActiveClick] = useState(false);\r\n\r\n    const handleChanges = (event,newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(10);\r\n\r\n    const [currentPages, setCurrentPages] = useState(1);\r\n    const [postsPerPages, setPostsPerPages] = useState(10);\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = allUserList.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const indexOfLastPosts = currentPages * postsPerPages;\r\n    const indexOfFirstPosts = indexOfLastPosts - postsPerPages;\r\n    const currentPosts = activeUserList.slice(indexOfFirstPosts, indexOfLastPosts);\r\n\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber)\r\n        setUser(pageNumber)\r\n    }\r\n\r\n    const paginates = pageNumber => {\r\n        setCurrentPages(pageNumber)\r\n        setActiveUser(pageNumber)\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllUserList(token)\r\n            .then(response => {\r\n                setAllUserList(response.data)\r\n            })\r\n        getActiveUserList(token)\r\n            .then(response => {\r\n                setActiveUserList(response.data)\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    const rowSelectForAllUserTable = (e) => {\r\n        setPostsPerPage(e.target.value)\r\n    }\r\n    let selectArray = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\r\n\r\n    const nextPage = () => {\r\n        if (allClick === true) {\r\n            setShow(true)\r\n        } else if (!localStorage.getItem('phoneNumberArray')) {\r\n            notify(\"Please select at least one number\")\r\n        } else {\r\n            setShow(true)\r\n        }\r\n    }\r\n\r\n    const nextPageActive = () => {\r\n        if (allActiveClick === true) {\r\n            setShow2(true)\r\n        } else if (!localStorage.getItem('activeUserPhoneNumberArray')) {\r\n            notify(\"Please select at least one number\")\r\n        } else {\r\n            setShow2(true)\r\n        }\r\n    }\r\n\r\n    const [text, setText] = useState({\r\n        text: '',\r\n        disabled: false\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setText({\r\n            ...text,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n        setShow2(false)\r\n    };\r\n\r\n    const sendSms = () => {\r\n        setDone(true)\r\n        let numberArray = [];\r\n        if (allClick === true) {\r\n            for (let user of allUserList) {\r\n                numberArray.push(user.phonenumber)\r\n            }\r\n        } else {\r\n            numberArray = localStorage.getItem(\"phoneNumberArray\").split(\",\")\r\n        }\r\n\r\n        let sendMessage = {\r\n            numbers: numberArray,\r\n            message: text.text.replaceAll(\" \", \"%20\").replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n        }\r\n        sendMessageAllUser(sendMessage)\r\n\r\n            .then(res => {\r\n                handleClose()\r\n                setDone(false)\r\n                setAllClick(false)\r\n                notify(\"Message send successfully\")\r\n                localStorage.setItem(\"phoneNumberArray\", [])\r\n            })\r\n            .catch(err => {\r\n                notify(\"Something went wrong! Please try again\")\r\n            })\r\n    }\r\n\r\n    const sendSmsActiveUser = () => {\r\n        setActiveDone(true)\r\n        let numberArray = [];\r\n        if (allActiveClick === true) {\r\n            for (let user of activeUserList) {\r\n                numberArray.push(user.userId.phonenumber)\r\n            }\r\n        } else {\r\n            numberArray = localStorage.getItem(\"activeUserPhoneNumberArray\").split(\",\")\r\n        }\r\n\r\n        let sendMessage = {\r\n            numbers: numberArray,\r\n            message: text.text.replaceAll(\" \", \"%20\").replace(/(\\r\\n|\\n|\\r)/gm, \"\\n\")\r\n        }\r\n\r\n        sendMessageAllUser(sendMessage)\r\n            .then(res => {\r\n                handleClose()\r\n                setActiveDone(false)\r\n                setAllActiveClick(false)\r\n                notify(\"Message send successfully\")\r\n                localStorage.setItem(\"phoneNumberArray\", [])\r\n            })\r\n            .catch(err => {\r\n                notify(\"Something went wrong! Please try again\")\r\n            })\r\n    }\r\n\r\n    const allCheckbox = () => {\r\n        setDone(false)\r\n        setAllClick(!allClick)\r\n    }\r\n\r\n    const allActiveCheckbox = () => {\r\n        setActiveDone(false)\r\n        setAllActiveClick(!allActiveClick)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"phoneNumberArray\", [])\r\n        localStorage.setItem(\"activeUserPhoneNumberArray\", [])\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Body style={{margin: \"10px\"}}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Send SMS</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={5} placeholder={\"Write something....\"}\r\n                                          onChange={handleChange} name=\"text\"/>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={sendSms}>\r\n                        Send\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={show2} onHide={handleClose}>\r\n                <Modal.Body style={{margin: \"10px\"}}>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Send SMS</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={5} placeholder={\"Write something....\"}\r\n                                          onChange={handleChange} name=\"text\"/>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={sendSmsActiveUser}>\r\n                        Send\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Box sx={{width: '100%'}}>\r\n                <Box sx={{borderBottom: 1, borderColor: 'divider'}}>\r\n                    <Tabs value={value} onChange={handleChanges} aria-label=\"basic tabs example\">\r\n                        <Tab label=\"All user list\" {...a11yProps(0)} />\r\n                        <Tab label=\"Active user list\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                </Box>\r\n\r\n                <TabPanel value={value} index={0}>\r\n                    <Card title={`All User List`}>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                            <tr>\r\n                                {done === false && (\r\n                                    <th scope=\"col\"><input onClick={allCheckbox} type=\"checkbox\"/></th>\r\n                                )}\r\n                                {done === true && (\r\n                                    <th scope=\"col\"><input onClick={allCheckbox} type=\"checkbox\" checked={false}\r\n                                                           value={true}/></th>\r\n                                )}\r\n\r\n                                <th className=\"border-0\">#</th>\r\n                                <th className=\"border-0\">Customer ID</th>\r\n                                <th className=\"border-0\">Customer Name</th>\r\n                                <th className=\"border-0\">Customer Phone Number</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <Table sendSmsAll={currentPost} paginate={currentPage} postsPerPage={postsPerPage}\r\n                                   allClick={allClick} done={done}/>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className='d-flex'>\r\n                            <Pagination\r\n                                postsPerPage={postsPerPage}\r\n                                totalPosts={allUserList.length}\r\n                                paginate={paginate}\r\n                                Number={user}\r\n                            />\r\n                            {allUserList.length > 0 && (\r\n                                <div className='ml-5'>\r\n                                    <select style={{cursor: 'pointer'}} onChange={(e) => rowSelectForAllUserTable(e)}>\r\n                                        {selectArray.map(number => {\r\n                                            return (\r\n                                                <option value={number}>{number}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"btn btn-danger\" onClick={nextPage}>Next</button>\r\n                        </div>\r\n                    </Card>\r\n                    <br/>\r\n                </TabPanel>\r\n\r\n                <TabPanel value={value} index={1}>\r\n                    <Card title={`Active User List`}>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                            <tr>\r\n                                {activeDone === false && (\r\n                                    <th scope=\"col\"><input onClick={allActiveCheckbox} type=\"checkbox\"/></th>\r\n                                )}\r\n                                {activeDone === true && (\r\n                                    <th scope=\"col\"><input onClick={allActiveCheckbox} type=\"checkbox\" checked={false}\r\n                                                           value={true}/></th>\r\n                                )}\r\n                                <th className=\"border-0\">#</th>\r\n                                <th className=\"border-0\">Customer ID</th>\r\n                                <th className=\"border-0\">Customer Name</th>\r\n                                <th className=\"border-0\">Customer Phone Number</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <Tables sendSmsAll={currentPosts} paginate={currentPages} postsPerPage={postsPerPages} allActiveClick={allActiveClick}\r\n                                    activeDone={activeDone}/>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className='d-flex'>\r\n                            <Pagination\r\n                                postsPerPage={postsPerPages}\r\n                                totalPosts={activeUserList.length}\r\n                                paginate={paginates}\r\n                                Number={activeUser}\r\n                            />\r\n                            {allUserList.length > 0 && (\r\n                                <div className='ml-5'>\r\n                                    <select style={{cursor: 'pointer'}} onChange={(e) => rowSelectForAllUserTable(e)}>\r\n                                        {selectArray.map(number => {\r\n                                            return (\r\n                                                <option value={number}>{number}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"btn btn-danger\" onClick={nextPageActive}>Next</button>\r\n                        </div>\r\n                    </Card>\r\n                    <br/>\r\n                </TabPanel>\r\n\r\n            </Box>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendSms;\r\n","/*!\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v2.0.0\r\n=========================================================\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n* Coded by Creative Tim\r\n=========================================================\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\nimport Dashboard from \"views/Dashboard.js\";\r\nimport UserProfile from \"views/UserProfile.js\";\r\nimport TableList from \"views/TableList.js\";\r\nimport Orders from \"views/Orders\";\r\nimport Utility from \"views/Utility\";\r\nimport Products from \"./views/Products\";\r\nimport OrderHandle from \"./views/OrderHandle\";\r\nimport PurchaseApprove from \"./views/PurchaseApprove\";\r\nimport UserCreate from './views/UserCreate';\r\nimport Support from './views/Support';\r\nimport sendSms from './views/SendSms';\r\n\r\nconst dashboardRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"nc-icon nc-chart-pie-35\",\r\n    component: Dashboard,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/createUser\",\r\n    name: \"User Create\",\r\n    icon: \"nc-icon nc-chart-pie-35\",\r\n    component: UserCreate,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/user\",\r\n    name: \"Admin Profile\",\r\n    icon: \"nc-icon nc-circle-09\",\r\n    component: UserProfile,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/table\",\r\n    name: \"Table List\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: TableList,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/product\",\r\n    name: \"Products\",\r\n    icon: \"nc-icon nc-paper-2\",\r\n    component: Products,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/orders\",\r\n    name: \"Orders\",\r\n    icon: \"nc-icon nc-atom\",\r\n    component: Orders,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/purchase\",\r\n    name: \"Approval Purchase\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: PurchaseApprove,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/handleOrder\",\r\n    name: \"Handle Order\",\r\n    icon: \"nc-icon nc-bell-55\",\r\n    component: OrderHandle,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/utility\",\r\n    name: \"Utility\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: Utility,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/support\",\r\n    name: \"Support\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: Support,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/sendSms\",\r\n    name: \"Send Sms\",\r\n    icon: \"nc-icon nc-notes\",\r\n    component: sendSms,\r\n    layout: \"/admin\",\r\n  },\r\n];\r\n\r\nexport default dashboardRoutes;","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Navbar, Container, Nav, Dropdown, Button } from \"react-bootstrap\";\r\n\r\nimport routes from \"routes.js\";\r\nimport { userInfo } from '../../utils/auth';\r\nimport { deleteAllProduct } from \"../../Api/user\";\r\nimport { updateUserActiveStatus } from \"../../Api/user\";\r\nimport { getNotifications,editNotifications } from '../../Api/notification'\r\nimport {removeJwt} from \"../../Api/user\";\r\n\r\nfunction Header() {\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [viewNotifications, setViewNotifications] = useState([]);\r\n    const { token, id } = userInfo();\r\n    const location = useLocation();\r\n    const mobileSidebarToggle = (e) => {\r\n        e.preventDefault();\r\n        document.documentElement.classList.toggle(\"nav-open\");\r\n        const node = document.createElement(\"div\");\r\n        node.id = \"bodyClick\";\r\n        node.onclick = function () {\r\n            this.parentElement.removeChild(this);\r\n            document.documentElement.classList.toggle(\"nav-open\");\r\n        };\r\n        document.body.appendChild(node);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNotifications(token, id)\r\n            .then(res => {\r\n                if (res.data[0]) {\r\n                    setNotifications(res.data[0].notifications)\r\n                    setViewNotifications(res.data[0].view)\r\n                }\r\n            })\r\n    }, [notifications]);\r\n\r\n\r\n    const getBrandText = () => {\r\n        for (let i = 0; i < routes.length; i++) {\r\n            if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\r\n                return routes[i].name;\r\n            }\r\n        }\r\n        return \"Brand\";\r\n    };\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        removeJwt()\r\n        updateUserActiveStatus('inActive')\r\n        deleteAllProduct()\r\n        localStorage.clear()\r\n    }\r\n\r\n    const viewNotification=()=>{\r\n        editNotifications(token,id)\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Container fluid>\r\n                <div className=\"d-flex justify-content-center align-items-center ml-2 ml-lg-0\">\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"d-lg-none btn-fill d-flex justify-content-center align-items-center rounded-circle p-2\"\r\n                        onClick={mobileSidebarToggle}\r\n                    >\r\n                        <i className=\"fas fa-ellipsis-v\" />\r\n                    </Button>\r\n                    <Navbar.Brand\r\n                        href=\"#home\"\r\n                        onClick={(e) => e.preventDefault()}\r\n                        className=\"mr-2\"\r\n                    >\r\n                        {getBrandText()}\r\n                    </Navbar.Brand>\r\n                </div>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mr-2\">\r\n                    <span className=\"navbar-toggler-bar burger-lines\" />\r\n                    <span className=\"navbar-toggler-bar burger-lines\" />\r\n                    <span className=\"navbar-toggler-bar burger-lines\" />\r\n                </Navbar.Toggle>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"nav mr-auto\" navbar>\r\n                        <Nav.Item>\r\n                            <Nav.Link\r\n                                data-toggle=\"dropdown\"\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                                className=\"m-0\"\r\n                            >\r\n                                <i className=\"nc-icon nc-palette\" />\r\n                                <span className=\"d-lg-none ml-1\">Dashboard</span>\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Dropdown as={Nav.Item}>\r\n                            <Dropdown.Toggle\r\n                                as={Nav.Link}\r\n                                data-toggle=\"dropdown\"\r\n                                id=\"dropdown-67443507\"\r\n                                variant=\"default\"\r\n                                className=\"m-0\"\r\n                                \r\n                            >\r\n                                <i className=\"nc-icon nc-planet\" onClick={viewNotification}/>\r\n                                {viewNotifications === false && <>\r\n                                    <span className=\"notification\"></span>\r\n                                    \r\n                                </>}\r\n                                <span className=\"d-lg-none ml-1\" >Notification</span>\r\n\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                {notifications && notifications.map((notification, index) => (\r\n                                    <Dropdown.Item >\r\n                                        {notification}\r\n                                    </Dropdown.Item>\r\n                                ))}\r\n\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        <Nav.Item>\r\n                            <Nav.Link\r\n                                className=\"m-0\"\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                            >\r\n\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n\r\n                        <Nav.Item>\r\n                            <Nav.Link\r\n                                className=\"m-0\"\r\n                                onClick={(e) => logout(e)}\r\n\r\n                            >\r\n                                <Link to=\"/\" className=\"no-icon\">Log out</Link>\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v2.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer px-0 px-lg-3\">\r\n        <Container fluid>\r\n          <nav>\r\n            {/*<ul className=\"footer-menu\">*/}\r\n            {/*  <li>*/}\r\n            {/*    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>*/}\r\n            {/*      Home*/}\r\n            {/*    </a>*/}\r\n            {/*  </li>*/}\r\n            {/*  <li>*/}\r\n            {/*    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>*/}\r\n            {/*      Company*/}\r\n            {/*    </a>*/}\r\n            {/*  </li>*/}\r\n            {/*  <li>*/}\r\n            {/*    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>*/}\r\n            {/*      Portfolio*/}\r\n            {/*    </a>*/}\r\n            {/*  </li>*/}\r\n            {/*  <li>*/}\r\n            {/*    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>*/}\r\n            {/*      Blog*/}\r\n            {/*    </a>*/}\r\n            {/*  </li>*/}\r\n            {/*</ul>*/}\r\n            <p className=\"copyright text-center\">\r\n              © {new Date().getFullYear()}{\" \"}\r\n              <a href=\"https://www.bengalsoftware.com/\">Bengal Software</a>, made with\r\n              love for a better web\r\n            </p>\r\n          </nav>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/reactlogo.55f6660b.png\";","\r\nimport React, { Component } from \"react\";\r\nimport { useLocation, NavLink } from \"react-router-dom\";\r\n\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nimport logo from \"assets/img/reactlogo.png\";\r\n\r\nfunction Sidebar({ color, image, routes }) {\r\n  const location = useLocation();\r\n  const activeRoute = (routeName) => {\r\n    return location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  };\r\n  return (\r\n    <div className=\"sidebar\" data-image={image} data-color={color}>\r\n      <div\r\n        className=\"sidebar-background\"\r\n        style={{\r\n          backgroundImage: \"url(\" + image + \")\",\r\n        }}\r\n      />\r\n      <div className=\"sidebar-wrapper\">\r\n        <div className=\"logo d-flex align-items-center justify-content-start\">\r\n          <a\r\n            href=\"https://www.creative-tim.com?ref=lbd-sidebar\"\r\n            className=\"simple-text logo-mini mx-1\"\r\n          >\r\n            <div className=\"logo-img\">\r\n              {/*<img*/}\r\n              {/*  src=\"#\"*/}\r\n              {/*  alt=\"logo\"*/}\r\n              {/*/>*/}\r\n            </div>\r\n          </a>\r\n          <a className=\"simple-text\" href=\"https://www.bengalsoftware.com\" target=\"_blank\">\r\n            Cizishop\r\n          </a>\r\n        </div>\r\n        <Nav>\r\n          {routes.map((prop, key) => {\r\n            if (!prop.redirect)\r\n              return (\r\n                <li\r\n                  className={\r\n                    prop.upgrade\r\n                      ? \"active active-pro\"\r\n                      : activeRoute(prop.layout + prop.path)\r\n                  }\r\n                  key={key}\r\n                >\r\n                  <NavLink\r\n                    to={prop.layout + prop.path}\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                  >\r\n                    <i className={prop.icon} />\r\n                    <p>{prop.name}</p>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            return null;\r\n          })}\r\n        </Nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","export default __webpack_public_path__ + \"static/media/sidebar-3.9992d0ce.jpg\";","\r\nimport React, { Component,useEffect } from \"react\";\r\n\r\nimport { useLocation, Route, Switch } from \"react-router-dom\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\nimport Footer from \"components/Footer/Footer\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport sidebarImage from \"assets/img/sidebar-3.jpg\";\r\n\r\nfunction Admin() {\r\n  \r\n  useEffect(() => {\r\n    localStorage.removeItem('values');\r\n  }, []);\r\n\r\n  const [image, setImage] = React.useState(sidebarImage);\r\n  const [color, setColor] = React.useState(\"black\");\r\n  const [hasImage, setHasImage] = React.useState(true);\r\n  const location = useLocation();\r\n  const mainPanel = React.useRef(null);\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            render={(props) => <prop.component {...props} />}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  React.useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainPanel.current.scrollTop = 0;\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n      const element = document.getElementById(\"bodyClick\");\r\n      element.parentNode.removeChild(element);\r\n    }\r\n  }, [location]);\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Sidebar color={color} image={hasImage ? image : \"\"} routes={routes} />\r\n        <div className=\"main-panel\" ref={mainPanel}>\r\n          <AdminNavbar />\r\n          <div className=\"content\">\r\n            <Switch>{getRoutes(routes)}</Switch>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n      {/*<FixedPlugin*/}\r\n      {/*  hasImage={hasImage}*/}\r\n      {/*  setHasImage={() => setHasImage(!hasImage)}*/}\r\n      {/*  color={color}*/}\r\n      {/*  setColor={(color) => setColor(color)}*/}\r\n      {/*  image={image}*/}\r\n      {/*  setImage={(image) => setImage(image)}*/}\r\n      {/*/>*/}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { isAuthenticated ,userInfo} from '../../utils/auth';\r\n\r\nconst AdminRoute = ({ children, ...rest }) => { \r\n    const {role}=userInfo();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                isAuthenticated() && role==='admin' || role==='superadmin'? (\r\n                    children \r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AdminRoute;","import {useState, useEffect} from 'react';\r\nimport {Link, Redirect, useHistory} from 'react-router-dom';\r\nimport {login} from '../../Api/auth'\r\nimport {isAuthenticated, authenticate} from '../../utils/auth';\r\nimport {\r\n    AiOutlineGoogle,\r\n    AiFillFacebook,\r\n} from \"react-icons/ai\";\r\n\r\nimport './User.css';\r\nimport {Card, Form} from \"react-bootstrap\";\r\nimport {notify} from '../../utils/notification'\r\nimport {ThemeProvider} from \"@emotion/react\";\r\n\r\nlet jwt = null;\r\nimport {getJwt, removeJwt} from \"../../Api/user\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {\r\n    Paper,\r\n    TextField,\r\n    Box,\r\n    Container,\r\n    Avatar,\r\n    Button,\r\n    createTheme,\r\n    CssBaseline,\r\n    Typography,\r\n    Grid,\r\n    FormControlLabel,\r\n    Checkbox\r\n} from \"@mui/material\";\r\nimport logo from \"../../assets/img/logo.png\"\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://gwztopup.com/\">\r\n                gwztopup.com\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#70e1a9',\r\n            main: '#004d25',\r\n            dark: '#02361b',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#ff7961',\r\n            main: '#f44336',\r\n            dark: '#ba000d',\r\n            contrastText: '#000',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        if (isAuthenticated()) {\r\n            history.push({pathname: '/admin'})\r\n        }\r\n    })\r\n    const {register, handleSubmit, watch, setError, formState: {errors}, reset, clearErrors} = useForm();\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n        success: false,\r\n        error: false,\r\n        disabled: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getJwt()\r\n            .then(res => {\r\n                jwt = res.data\r\n                getJwtToken()\r\n            })\r\n    });\r\n\r\n\r\n    const getJwtToken = () => {\r\n        if (jwt) {\r\n            authenticate(jwt, () => {\r\n                let jwtToken = localStorage.getItem('jwt')\r\n                if (jwtToken) {\r\n                    return (\r\n                        setValues({\r\n                            ...values,\r\n                            success: true,\r\n                            error: false,\r\n                        })\r\n                    )\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    const {email, password, success, error, disabled} = values;\r\n\r\n    const handleChange = e => {\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    // const handleSubmit = e => {\r\n    //     e.preventDefault();\r\n    //     setValues({ ...values, error: false, disabled: true })\r\n    //     login({ email, password })\r\n    //         .then(response => {\r\n    //             authenticate(response.data.token, () => {\r\n    //                 setValues({\r\n    //                     email: '',\r\n    //                     password: '',\r\n    //                     success: true,\r\n    //                     error: false,\r\n    //                     disabled: false,\r\n    //                 })\r\n    //             })\r\n    //             isAuthenticated().then(r=> {\r\n    //                 history.push(\"/admin\")\r\n    //             })\r\n    //         })\r\n    //         .catch(err => {\r\n    //             let errMsg = 'Something went wrong!';\r\n    //             if (err.response) {\r\n    //                 errMsg = err.response.data;\r\n    //             } else {\r\n    //                 errMsg = 'Something went wrong!';\r\n    //             }\r\n    //             setValues({ ...values, error: errMsg, disabled: false })\r\n    //         })\r\n    // }\r\n\r\n    function onSubmit(data) {\r\n\r\n        login(data).then(res => {\r\n            const response = jwt_decode(res.data.token)\r\n            if (response.role === \"superadmin\" || response.role === \"admin\") {\r\n                authenticate(res.data.token, () => {\r\n                    reset()\r\n                })\r\n            }\r\n            else {\r\n                setError(\"credential\", {\r\n                    type: \"user\",\r\n                    message: \"You need to be an admin to browse this site, contact an admin\",\r\n                });\r\n            }\r\n            console.log(response)\r\n\r\n\r\n        })\r\n            .catch(function (error) {\r\n                if (error.response.status === 401) {\r\n                    setError(\"email\", {\r\n                        type: \"invalid credential\",\r\n                        message: \"Email or password is wrong\",\r\n                    });\r\n                    setError(\"password\", {\r\n                        type: \"invalid credential\",\r\n                        message: \"Email or password is wrong\",\r\n                    });\r\n                } else if (error.request) {\r\n                    // The request was made but no response was received\r\n                    console.log(error.request);\r\n                } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    console.log('Error', error.message);\r\n                    setError(\"email\", {\r\n                        type: \"invalid credential\",\r\n                        message: \"Something went wrong\",\r\n                    });\r\n                    setError(\"password\", {\r\n                        type: \"invalid credential\",\r\n                        message: \"Something went wrong\",\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n\r\n    const LoginForm = () => (\r\n        <>\r\n\r\n            <ThemeProvider theme={theme}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline/>\r\n                    <Box sx={{mt: 8}}/>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Box\r\n                                sx={{\r\n                                    marginTop: 2,\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    alignItems: 'center',\r\n                                }}\r\n                            >\r\n                                <Avatar sx={{m: 1, bgcolor: '#375b49', width: 100, height: 100}}>\r\n                                    <img src={logo} alt=\"logo\"/>\r\n                                </Avatar>\r\n                                <Typography component=\"h1\" variant=\"h5\">\r\n                                    gwztopup Admin Dashboard\r\n                                </Typography>\r\n                                {errors.credential && <span style={{color: \"red\", textAlign: \"center\"}}>{errors.credential?.message}</span>}\r\n                                <Box\r\n                                    sx={{mt: 3}}>\r\n                                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item xs={12}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    id=\"email\"\r\n                                                    label=\"Email Address*\"\r\n                                                    name=\"email\"\r\n                                                    autoComplete=\"email\"\r\n                                                    {...register(\"email\", {required: \"Email is required\"})}\r\n                                                    error={Boolean(errors.email)}\r\n                                                    helperText={errors.email?.message}\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    name=\"password\"\r\n                                                    label=\"Password*\"\r\n                                                    type=\"password\"\r\n                                                    id=\"password\"\r\n                                                    autoComplete=\"new-password\"\r\n                                                    {...register(\"password\", {required: \"password is required\"})}\r\n                                                    error={Boolean(errors.password)}\r\n                                                    helperText={errors.password?.message}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            sx={{mt: 3, mb: 2}}\r\n                                            onClick={e=>clearErrors('credential')}\r\n                                        >\r\n                                            Log In\r\n                                        </Button>\r\n                                        <div className=\"flex-c-m\">\r\n                                            <div style={{fontWeight: \"bold\"}}>Login with</div>\r\n                                            {/* <a href=\"http://localhost:3001/auth/facebook\" className=\"login100-social-item bg3\">\r\n                                                                      <AiOutlineGoogle />\r\n                                                                  </a> */}\r\n\r\n                                            <a href=\"https://cizishop-backend2334.herokuapp.com/auth/google\"\r\n                                               style={{color: '#004d25', borderColor: '#004d25'}}\r\n                                               className=\"login100-social-item \">\r\n                                                <AiOutlineGoogle/>\r\n                                            </a>\r\n\r\n                                        </div>\r\n                                        <hr className=\"my-6 border-gray-300 w-full\"/>\r\n\r\n                                        <p className=\"mt-2 mb-2 text-center \">\r\n                                            Need an account?\r\n                                            <span\r\n                                                style={{color: '#004d25'}}\r\n                                                class=\"text-primary-500 hover:text-primary-700 font-semibold ml-2\">Contact an admin</span>\r\n                                        </p>\r\n                                    </form>\r\n\r\n                                </Box>\r\n                            </Box>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <Copyright sx={{mt: 5}}/>\r\n                </Container>\r\n            </ThemeProvider>\r\n            {/*<ThemeProvider theme={theme}>*/}\r\n            {/*    <Container component=\"main\" maxWidth=\"xs\">*/}\r\n            {/*        <CssBaseline/>*/}\r\n            {/*        <Paper sx={{marginTop: 8}} elevation={4}>*/}\r\n            {/*            <Box*/}\r\n            {/*                sx={{*/}\r\n            {/*                    marginTop: 2,*/}\r\n            {/*                    display: 'flex',*/}\r\n            {/*                    flexDirection: 'column',*/}\r\n            {/*                    alignItems: 'center',*/}\r\n            {/*                }}*/}\r\n            {/*            >*/}\r\n\r\n            {/*                <Avatar sx={{m: 3}} size='lg'>*/}\r\n            {/*                    <img src={logo}/>*/}\r\n            {/*                </Avatar>*/}\r\n            {/*                <Typography component=\"h1\" variant=\"h5\">*/}\r\n            {/*                    Log in to Admin Dashboard*/}\r\n            {/*                </Typography>*/}\r\n            {/*                <Form onSubmit={handleSubmit(onSubmit)} method=\"post\" class=\"mt-6\">*/}\r\n            {/*                    <>*/}\r\n            {/*                        <TextField*/}\r\n            {/*                            id=\"outlined-basic\" variant=\"outlined\"*/}\r\n            {/*                            {...register(\"email\", {required: \"Email is required\"})}*/}\r\n            {/*                            error={Boolean(errors.email)}*/}\r\n            {/*                            sx={{mt: 5}}*/}\r\n            {/*                            className=\"form-control\"*/}\r\n            {/*                            helperText={errors.email?.message}*/}\r\n            {/*                            label=\"Enter Email\"*/}\r\n            {/*                            fullwidth/>*/}\r\n            {/*                        /!*<label class=\"block text-gray-700\">Email Address</label>*!/*/}\r\n            {/*                        /!*<input type=\"email\" {...register(\"email\", {required: \"email is required\",})}*!/*/}\r\n            {/*                        /!*       name=\"email\" className=\"form-control\" placeholder=\"Enter Email\"*!/*/}\r\n            {/*                        /!*       value={email} onChange={handleChange} autofocus=\"autofocus\"*!/*/}\r\n            {/*                        /!*       autoComplete*!/*/}\r\n            {/*                        /!*       class=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-500 focus:bg-white focus:outline-none\"/>*!/*/}\r\n            {/*                        /!*{errors.email && <span style={{color: \"red\"}}>This field is required</span>}*!/*/}\r\n            {/*                    </>*/}\r\n\r\n            {/*                    <div className=\"mt-4\">*/}\r\n            {/*                        <TextField*/}\r\n            {/*                            id=\"outlined-basic\" variant=\"outlined\"*/}\r\n            {/*                            {...register(\"passsword\", {required: \"Password is required\",})}*/}\r\n            {/*                            error={Boolean(errors.email)}*/}\r\n            {/*                            sx={{mt: 2, mb: 5}}*/}\r\n            {/*                            className=\"form-control\"*/}\r\n            {/*                            helperText={errors.email?.message}*/}\r\n            {/*                            label=\"Enter Email\"*/}\r\n            {/*                            fullwidth/>*/}\r\n            {/*                        /!*<label class=\"block text-gray-700\">Password</label>*!/*/}\r\n            {/*                        /!*<input type=\"password\" name=\"password\" className=\"form-control\" value={password}*!/*/}\r\n            {/*                        /!*       onChange={handleChange} placeholder=\"Enter Password\"*!/*/}\r\n            {/*                        /!*       class=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-50 focus:bg-white focus:outline-none\"/>*!/*/}\r\n            {/*                        /!*{errors.email && <span style={{color: \"red\"}}>This field is required</span>}*!/*/}\r\n            {/*                    </div>*/}\r\n\r\n\r\n            {/*                    <div className=\"text-right mt-2\"><Link to=\"forgotPassword\"*/}\r\n            {/*                                                           class=\"text-sm font-semibold text-gray-700 hover:text-primary-700 focus:text-primary-700\">Forgot*/}\r\n            {/*                        Password?</Link></div>*/}\r\n            {/*                    <button style={{backgroundColor: '#004d25', borderColor: '#004d25'}}*/}\r\n            {/*                            onSubmit={handleSubmit} disabled={disabled} type=\"submit\"*/}\r\n            {/*                            className=\"w-full block   0 text-white font-semibold rounded-lg*/}\r\n            {/*                px-4 py-3 mt-6\">*/}\r\n            {/*                        Login*/}\r\n            {/*                    </button>*/}\r\n            {/*                    <div className=\"flex-c-m\">*/}\r\n            {/*                        <div style={{fontWeight: \"bold\"}}>Login with</div>*/}\r\n            {/*                        /!* <a href=\"http://localhost:3001/auth/facebook\" className=\"login100-social-item bg3\">*/}\r\n            {/*                                                  <AiOutlineGoogle />*/}\r\n            {/*                                              </a> *!/*/}\r\n\r\n            {/*                        <a href=\"https://cizishop-backend2334.herokuapp.com/auth/google\"*/}\r\n            {/*                           style={{color: '#004d25', borderColor: '#004d25'}}*/}\r\n            {/*                           className=\"login100-social-item \">*/}\r\n            {/*                            <AiOutlineGoogle/>*/}\r\n            {/*                        </a>*/}\r\n\r\n            {/*                    </div>*/}\r\n            {/*                </Form>*/}\r\n            {/*                <hr className=\"my-6 border-gray-300 w-full\"/>*/}\r\n\r\n            {/*                <p className=\"mt-5 text-center \">*/}\r\n            {/*                    Need an account?*/}\r\n            {/*                    <Link to='registration'*/}\r\n            {/*                          style={{color: '#004d25'}}*/}\r\n            {/*                          class=\"text-primary-500 hover:text-primary-700 font-semibold ml-2\">Create*/}\r\n            {/*                        an*/}\r\n            {/*                        account</Link>*/}\r\n            {/*                </p>*/}\r\n\r\n            {/*            </Box>*/}\r\n            {/*        </Paper>*/}\r\n            {/*        /!*<Copyright sx={{mt: 8, mb: 4}}/>*!/*/}\r\n            {/*    </Container>*/}\r\n            {/*</ThemeProvider>*/}\r\n            {/*<NavBar />*/}\r\n            {/*  <div class=\"mx-auto\" data-v-791b20d9>*/}\r\n            {/*      <div data-v-791b20d9>*/}\r\n            {/*          <section class=\"flex flex-col md:flex-row items-center md:justify-center py-10 md:py-6\"*/}\r\n            {/*                   data-v-791b20d9>*/}\r\n            {/*              <div*/}\r\n            {/*                  class=\"bg-white w-full md:w-[450px] px-6 lg:px-8 flex items-start py-12 justify-center relative flex-shrink\">*/}\r\n            {/*                  <div class=\"w-full h-full\" style={{alignItems: \"center\"}}>*/}\r\n            {/*                      <Paper sx={{p: 2}} elevation={4}>*/}\r\n            {/*                          <Box style={{*/}\r\n            {/*                              mrgin: \"auto\",*/}\r\n            {/*                              width: \"50%\",*/}\r\n            {/*                              border: \"3px solid green\",*/}\r\n            {/*                              padding: \"10px\"*/}\r\n            {/*                          }}>*/}\r\n            {/*                              <img src={logo} alt='logo' style={{*/}\r\n            {/*                                  backgroundColor: '#004d25',*/}\r\n            {/*                                  width: \"200px\",*/}\r\n            {/*                                  border: \"1px solid #004d25\"*/}\r\n            {/*                              }}/>*/}\r\n            {/*                          </Box>*/}\r\n\r\n            {/*                          <h1 className=\"text-xl md:text-2xl font-bold leading-tight text-center mt-2\">*/}\r\n            {/*                              Log in to Admin Dashboard*/}\r\n            {/*                          </h1>*/}\r\n\r\n            {/*                          <Form onSubmit={handleSubmit(onSubmit)} method=\"post\" class=\"mt-6\">*/}\r\n            {/*                              <div>*/}\r\n            {/*                                  <TextField*/}\r\n            {/*                                      id=\"outlined-basic\" variant=\"outlined\"*/}\r\n            {/*                                      {...register(\"email\", {required: \"Email is required\"})}*/}\r\n            {/*                                      error={Boolean(errors.email)}*/}\r\n            {/*                                      sx={{mt: 5}}*/}\r\n            {/*                                      className=\"form-control\"*/}\r\n            {/*                                      helperText={errors.email?.message}*/}\r\n            {/*                                      label=\"Enter Email\"*/}\r\n            {/*                                      fullwidth/>*/}\r\n            {/*                                  /!*<label class=\"block text-gray-700\">Email Address</label>*!/*/}\r\n            {/*                                  /!*<input type=\"email\" {...register(\"email\", {required: \"email is required\",})}*!/*/}\r\n            {/*                                  /!*       name=\"email\" className=\"form-control\" placeholder=\"Enter Email\"*!/*/}\r\n            {/*                                  /!*       value={email} onChange={handleChange} autofocus=\"autofocus\"*!/*/}\r\n            {/*                                  /!*       autoComplete*!/*/}\r\n            {/*                                  /!*       class=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-500 focus:bg-white focus:outline-none\"/>*!/*/}\r\n            {/*                                  /!*{errors.email && <span style={{color: \"red\"}}>This field is required</span>}*!/*/}\r\n            {/*                              </div>*/}\r\n\r\n            {/*                              <div className=\"mt-4\">*/}\r\n            {/*                                  <TextField*/}\r\n            {/*                                      id=\"outlined-basic\" variant=\"outlined\"*/}\r\n            {/*                                      {...register(\"passsword\", {required: \"Password is required\",})}*/}\r\n            {/*                                      error={Boolean(errors.email)}*/}\r\n            {/*                                      sx={{mt: 2, mb: 5}}*/}\r\n            {/*                                      className=\"form-control\"*/}\r\n            {/*                                      helperText={errors.email?.message}*/}\r\n            {/*                                      label=\"Enter Email\"*/}\r\n            {/*                                      fullwidth/>*/}\r\n            {/*                                  /!*<label class=\"block text-gray-700\">Password</label>*!/*/}\r\n            {/*                                  /!*<input type=\"password\" name=\"password\" className=\"form-control\" value={password}*!/*/}\r\n            {/*                                  /!*       onChange={handleChange} placeholder=\"Enter Password\"*!/*/}\r\n            {/*                                  /!*       class=\"w-full px-4 py-3 rounded-lg bg-gray-200 mt-2 border focus:border-primary-50 focus:bg-white focus:outline-none\"/>*!/*/}\r\n            {/*                                  /!*{errors.email && <span style={{color: \"red\"}}>This field is required</span>}*!/*/}\r\n            {/*                              </div>*/}\r\n\r\n\r\n            {/*                              <div className=\"text-right mt-2\"><Link to=\"forgotPassword\"*/}\r\n            {/*                                                                     class=\"text-sm font-semibold text-gray-700 hover:text-primary-700 focus:text-primary-700\">Forgot*/}\r\n            {/*                                  Password?</Link></div>*/}\r\n            {/*                              <button style={{backgroundColor: '#004d25', borderColor: '#004d25'}}*/}\r\n            {/*                                      onSubmit={handleSubmit} disabled={disabled} type=\"submit\"*/}\r\n            {/*                                      className=\"w-full block   0 text-white font-semibold rounded-lg*/}\r\n            {/*px-4 py-3 mt-6\">*/}\r\n            {/*                                  Login*/}\r\n            {/*                              </button>*/}\r\n            {/*                              <div className=\"flex-c-m\">*/}\r\n            {/*                                  <div style={{fontWeight: \"bold\"}}>Login with</div>*/}\r\n            {/*                                  /!* <a href=\"http://localhost:3001/auth/facebook\" className=\"login100-social-item bg3\">*/}\r\n            {/*                                  <AiOutlineGoogle />*/}\r\n            {/*                              </a> *!/*/}\r\n\r\n            {/*                                  <a href=\"https://cizishop-backend2334.herokuapp.com/auth/google\"*/}\r\n            {/*                                     style={{color: '#004d25', borderColor: '#004d25'}}*/}\r\n            {/*                                     className=\"login100-social-item \">*/}\r\n            {/*                                      <AiOutlineGoogle/>*/}\r\n            {/*                                  </a>*/}\r\n\r\n            {/*                              </div>*/}\r\n            {/*                          </Form>*/}\r\n            {/*                          <hr className=\"my-6 border-gray-300 w-full\"/>*/}\r\n\r\n            {/*                          <p className=\"mt-5 text-center \">*/}\r\n            {/*                              Need an account?*/}\r\n            {/*                              <Link to='registration'*/}\r\n            {/*                                    style={{color: '#004d25'}}*/}\r\n            {/*                                    class=\"text-primary-500 hover:text-primary-700 font-semibold ml-2\">Create*/}\r\n            {/*                                  an*/}\r\n            {/*                                  account</Link>*/}\r\n            {/*                          </p>*/}\r\n            {/*                      </Paper>*/}\r\n\r\n            {/*                  </div>*/}\r\n            {/*              </div>*/}\r\n            {/*          </section>*/}\r\n            {/*      </div>*/}\r\n            {/*  </div>*/}\r\n            {/*<Footer />*/}\r\n        </>\r\n    );\r\n\r\n    const showSuccess = () => {\r\n        if (success) return (\r\n            <Redirect to='/'/>\r\n        )\r\n    }\r\n\r\n    const showError = (error) => {\r\n        if (error.success === false) return (\r\n            notify(`${error.error}`)\r\n        )\r\n    }\r\n\r\n    return (\r\n        < Box sx={{backgroundColor: \"whitesmoke\"}}>\r\n            {isAuthenticated() ? <Redirect to=\"/admin\"/> : \"\"}\r\n            {showSuccess()}\r\n            {showError(error)}\r\n            {LoginForm()}\r\n        </ Box>\r\n    );\r\n}\r\n\r\nexport default Login;","import LoginForm from '../components/User/Login';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <>\r\n            <LoginForm/>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Login;","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport AdminRoute from \"components/protectedRoutes/AdminRoute\";\r\nimport AdminLayout from \"./layouts/Admin\";\r\nimport Login from \"./layouts/Login\";\r\nimport { AuthProvider } from \"./utils/auth\";\r\nconst App = () => {\r\n\r\n    return (\r\n        <AuthProvider>\r\n            <Switch>\r\n                <Route path=\"/admin\">\r\n                    <AdminRoute path=\"/admin\">\r\n                        <AdminLayout />\r\n                    </AdminRoute>\r\n                </Route>\r\n                <Route exact path=\"/\" component={Login} />\r\n            </Switch>\r\n        </AuthProvider>\r\n    )\r\n}\r\nexport default App","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Badge, Card, Col, Container, Form, ListGroup, Row } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport { addWallet } from '../../../Api/addWallet';\r\nimport { userInfo } from '../../../utils/auth';\r\nimport { getOneUser } from '../../../Api/user';\r\nimport { createNewPurchase } from '../../../Api/purchase';\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { notify } from '../../../utils/notification'\r\nimport Footer from \"../Footer\";\r\nimport NavBar from \"../Navbar/Navbar\";\r\nimport \"./conformation.css\"\r\nimport { CgEditBlackPoint } from \"react-icons/cg\"\r\nimport { createNewOrder, orderQueue } from '../../../Api/order';\r\nimport { createWallet } from '../../../Api/wallet';\r\nimport { findAllPaymentMethod } from \"../../../Api/paymentMethod\";\r\nimport { API } from \"../../../utils/config\";\r\nimport { createNotifications } from '../../../Api/notification'\r\nimport { getOneProduct } from \"../../../Api/products\";\r\nimport { useHistory } from \"react-router-dom\";\r\nlet productPackage, productPrice, paymentNumber, paymentOption;\r\n\r\n\r\nconst moneySendWay = [\r\n  {\r\n    \"how\": \"টাকা যোগ করবেন কীভাবে?\",\r\n    \"condition\": \"(যেকোন পার্সোনাল বিকাশ একাউন্ট হতে হবে)\",\r\n    \"Step1\": [\r\n      {\r\n        \"point\": \"প্রথমে উপরে দেওয়া নাম্বার কপি করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"(bKash,Nagad,Rocket, upay) App অথাবা Ussd কোডের মধ্যেমে\"\r\n      },\r\n      {\r\n        \"point\": \"সেন্ড মানি অপশন সিলেক্ট করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"Cizishop WALLET নাম্বার (_) প্রবেশ করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"এম্যাউন্ট অর্থাৎ কত টাকা যোগ করবেন তার পরিমাণ প্রবেশ করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"রেফারেন্সে আপনার সেলফটেন ইউজার আইডি প্রবেশ করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"আপনার বিকাশ পিন নাম্বার প্রবেশ করুণ।\"\r\n      },\r\n    ],\r\n    \"Step2\": [\r\n      {\r\n        \"point\": \"পনিচে যে দুটি বক্স দেখতে পারছেন প্রথম Box এ কত টাকা পাঠিয়েছেন সেটা লিখুন।\"\r\n      },\r\n      {\r\n        \"point\": \"দ্বিতীয় বক্সে আপনি যে নাম্বার থেকে টাকা পাঠিয়েছেন সেই নাম্বারটি লিখুন।\"\r\n      },\r\n      {\r\n        \"point\": \"তারপর Submit অপশনে ক্লিক করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"পাঁচ থেকে দশ মিনিটের মধ্যে টাকা যোগ হয়ে যাবে আপনার সেলফটেন ওয়ালেটে।\"\r\n      },\r\n      {\r\n        \"point\": \"এম্যাউন্ট অর্থাৎ কত টাকা যোগ করবেন তার পরিমাণ প্রবেশ করুণ।\"\r\n      },\r\n      {\r\n        \"point\": \"অবশ্যই টাকা Send Money করার পর এই কাজটি করবেন।\"\r\n      },\r\n    ]\r\n  }\r\n]\r\n\r\n\r\nconst Button = styled.button`\r\n  background-color: #28af3a ;\r\n  color: whitesmoke;\r\n  font-size: 15px;\r\n  padding: 5px 40px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  object-fit: contain;\r\n  &:disabled {\r\n    color: #28af3a;\r\n    background-color: white;\r\n    opacity: 1;\r\n    cursor: default;\r\n  }\r\n`;\r\n\r\nconst ButtonToggle = styled(Button)`\r\n  color: #28af3a;\r\n  background-color: white;\r\n  border: 1px solid #28af3a;\r\n  ${({ active }) =>\r\n    active &&\r\n    `\r\n    color: white;\r\n    background-color: #28af3a;\r\n    \r\n  `}\r\n`;\r\n\r\n\r\nconst Confirm = () => {\r\n  let history = useHistory();\r\n  const [productInfo, setProductInfo] = useState({})\r\n  const [paymentMethod, setPaymentMethod] = useState([{\r\n    name: '',\r\n    number: '',\r\n    image: ''\r\n  }])\r\n  const [user, setUser] = useState({})\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [values, setValues] = useState({\r\n    walletId: '',\r\n    paymentType: '',\r\n    transactionID: '',\r\n    mobileNumber: '',\r\n    amount: '',\r\n  });\r\n\r\n  const [rechargeId, setRechargeId] = useState({\r\n    rechargeId: '',\r\n  });\r\n\r\n\r\n  const { paymentType, transactionID, mobileNumber, amount } = values;\r\n\r\n  const [disabledButton, setDisabledButton] = useState({\r\n    disabled: false,\r\n  });\r\n\r\n  const { disabled } = disabledButton\r\n\r\n  useEffect(() => {\r\n    getOneUser(id)\r\n      .then(response => setUser(response.data))\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  }, [values]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    findAllPaymentMethod()\r\n      .then((res) => {\r\n        let allData = res.data\r\n        setPaymentMethod(allData)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n      });\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem('values'))\r\n    if (data) {\r\n      getOneProduct(data.productId)\r\n        .then(res => setProductInfo(res.data))\r\n    }\r\n  }, []);\r\n\r\n\r\n  const [confirmation, setConfirmation] = useState({});\r\n\r\n  const [active, setActive] = useState({});\r\n  const { token, id } = userInfo();\r\n\r\n  function func2(paymentType) {\r\n    setValues({\r\n      ...values,\r\n      paymentType: paymentType\r\n    })\r\n  }\r\n\r\n  function handleClick(e) {\r\n    setActive({\r\n      ...payMethod,\r\n      [e.target.name]: e.target.value,\r\n\r\n    })\r\n  }\r\n\r\n  function createOrder() {\r\n    handleClose()\r\n    const data = JSON.parse(localStorage.getItem('values'))\r\n    productPackage = (Object.keys(data.product))[0]\r\n    productPrice = (Object.values(data.product))[0]\r\n    createNewPurchase(token, data)\r\n      .then(response => {\r\n        const data = {\r\n          userId: id,\r\n          purchaseId: response.data.purchase._id,\r\n          productId: response.data.purchase.productId,\r\n          walletId: values.walletId,\r\n          rechargeId: rechargeId.rechargeId\r\n        }\r\n        createNewOrder(token, data)\r\n          .then(response => {\r\n            notify('Order Created. Please wait for admin approval')\r\n            //orderQueue()\r\n            createNotifications(token, id, `You have placed an order on ${productInfo.gameName}. Purchase Package: ${productPackage} ${productPrice} Taka. Please wait for admin approval`)\r\n            localStorage.removeItem('values');\r\n          })\r\n          .catch(err => notify('Something Failed! Please try again'))\r\n      })\r\n      .catch(err => {\r\n        let errMsg = \"Something went wrong!\";\r\n        if (err.response) errMsg = err.response.data;\r\n        notify(errMsg)\r\n      })\r\n  }\r\n\r\n  function addRecharge(rechargeId) {\r\n    setRechargeId({\r\n      rechargeId: rechargeId\r\n    })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setValues({\r\n      ...values,\r\n      walletId: user.wallet,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setDisabledButton({ disabled: true });\r\n    if (paymentNumber === values.mobileNumber) {\r\n      notify(`Please Enter your ${paymentOption} account number.`)\r\n    }\r\n    else {\r\n      addWallet(token, values)\r\n        .then(response => {\r\n          setDisabledButton({ disabled: false });\r\n          notify('Add Amount Successfully. Please wait for verification')\r\n          createNotifications(token, id, `You have recharge ${values.amount} Taka (TransactionId: ${values.transactionID}).Your transaction is being processed. Please wait for admin varification.`)\r\n          history.push('/userWallet')\r\n        })\r\n        .catch(err => {\r\n          setDisabledButton({ disabled: false });\r\n          let errMsg = \"Something went wrong!\";\r\n          if (err.response) errMsg = err.response.data;\r\n          notify(errMsg)\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  function paymentTypeNumber(paymentType) {\r\n    paymentOption=paymentType\r\n    for (let i = 0; i < paymentMethod.length; i++) {\r\n      if (paymentType === paymentMethod[i].name) {\r\n        paymentNumber = paymentMethod[i].number\r\n\r\n        return (\r\n          <>\r\n            ({paymentMethod[i].number}) <i className=\"fa fa-copy\" onClick={copyNumber(paymentMethod[i].number)} style={{ fontSize: \".8rem\", color: \"grey\", cursor: \"pointer\" }}></i>\r\n          </>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // const copyNumber = (number) => {\r\n  //   console.log(\"Hello\")\r\n  //   //navigator.clipboard.writeText(number);\r\n   \r\n  // }\r\n\r\n  return (\r\n\r\n    <>\r\n      <NavBar />\r\n      <Container className=\"content-width\">\r\n        <Row className=\"d-flex justify-content-center\" >\r\n          {paymentMethod && paymentMethod.map((data, index) => {\r\n            return (\r\n              <Col key={index} sm={6} xs={6} xl={3}>\r\n                <ButtonToggle\r\n                  active={active === data._id}\r\n                  onClick={() => setActive(data._id)}\r\n                  onClick={function (event) {\r\n                    setActive(data._id);\r\n                    func2(data.name)\r\n                  }}\r\n                  variant=\"outline-primary\" name=\"paymentType\" value={paymentType}><img\r\n                    className=\"object\" src={`${API}${data.image}`} alt={data.name} />\r\n                  <div\r\n                    bg=\"primary\" name=\"paymentType\" value={paymentType}>{data.name}</div>\r\n                </ButtonToggle>\r\n              </Col>\r\n            )\r\n          })}\r\n        </Row>\r\n\r\n\r\n        <div>\r\n          {moneySendWay.map((data, index) => {\r\n            return (\r\n              <Fragment key={index}>\r\n\r\n                <div className=\"\">\r\n\r\n                  <div>\r\n                    <div className=\"m-2\">\r\n                      <div className='d-flex text-edit'>\r\n                        <div className='mr-2'> {paymentType}</div>\r\n                        <div>\r\n                          {paymentTypeNumber(paymentType)}\r\n                        </div>\r\n\r\n                      </div>\r\n\r\n                      <div className=\"font-bold\">{data.how}</div>\r\n                    </div>\r\n                    <div className=\"mb-2 text-muted\">{data.condition}</div>\r\n                    Step 1\r\n                    {data.Step1.map((allData, index) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <div className=\"m-2 d-flex\">\r\n                            <div className=\"mt-1 mr-2 colors\">\r\n                              <CgEditBlackPoint />\r\n                            </div>\r\n                            <div>\r\n                              {allData.point}\r\n                            </div>\r\n                          </div>\r\n                        </Fragment>\r\n                      )\r\n                    })}\r\n                    Step 2\r\n                    {data.Step2.map((allData, index) => {\r\n                      return (\r\n                        <Fragment key={index}>\r\n                          <div className=\"m-2  d-flex\">\r\n                            <div className=\"mt-1 mr-2 colors\" >\r\n                              <CgEditBlackPoint />\r\n                            </div>\r\n                            <div>\r\n                              {allData.point}\r\n                            </div>\r\n                          </div>\r\n                          {/*<div className=\"m-2\">*/}\r\n                          {/*    {index + 1} .{allData.point}*/}\r\n                          {/*</div>*/}\r\n                        </Fragment>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            )\r\n          })}\r\n        </div>\r\n        <div>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Amount</Form.Label>\r\n              <Form.Control type=\"amount\" name=\"amount\" value={amount} placeholder=\"Enter Amount\"\r\n                onChange={handleChange} />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Sender Number</Form.Label>\r\n              <Form.Control type=\"seders_number\" name=\"mobileNumber\" value={mobileNumber}\r\n                placeholder=\"Sender Number\" onChange={handleChange} />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Transaction Number</Form.Label>\r\n              <Form.Control type=\"transactionNumber\" name=\"transactionID\" value={transactionID}\r\n                placeholder=\"Transaction Number\" onChange={handleChange} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={disabled} onClick={handleSubmit} style={{ backgroundColor: \"#1976d2\" }}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Confirm","/*!\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v2.0.0\r\n=========================================================\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n* Coded by Creative Tim\r\n=========================================================\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/animate.min.css\";\r\nimport \"./assets/scss/light-bootstrap-dashboard-react.scss?v=2.0.0\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport 'antd/dist/antd.css'\r\n\r\nimport AdminLayout from \"layouts/Admin.js\";\r\nimport App from \"./App\";\r\nimport Confirm from \"./components/Main/Confirmation/Confirm\";\r\n\r\nReactDOM.render(\r\n    \r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    \r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}